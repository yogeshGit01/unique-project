{"version":3,"sources":["webpack:///./~/image-compressor.js/dist/image-compressor.esm.js","webpack:///./src/app/components/journey/step11/file-upload/file-upload.component.html","webpack:///./src/app/components/journey/step11/file-upload/file-upload.component.js","webpack:///./src/app/components/journey/step11/file-upload/file-upload.component.scss","webpack:///./src/app/components/journey/step11/openBankingModal/openBankingModal.modal.component.html","webpack:///./src/app/components/journey/step11/openBankingModal/openBankingModal.modal.component.js","webpack:///./src/app/components/journey/step11/step11.component.html","webpack:///./src/app/components/journey/step11/step11.component.js","webpack:///./src/app/components/journey/step11/step11.component.scss","webpack:///./src/app/components/journey/step11/step11.component.service.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,YAAY,EAAE;AAChC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,8FAA8F;AAC9G,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,6DAA6D;AAC7E,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ,aAAa,yBAAyB;AACtC,aAAa,kBAAkB;AAC/B;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA,YAAY;AACZ,aAAa,yBAAyB;AACtC,aAAa,kBAAkB;AAC/B;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA,YAAY;AACZ,aAAa,KAAK;AAClB;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA,YAAY;AACZ,aAAa,MAAM;AACnB;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;AAGA,mBAAmB,YAAY;AAC/B;AACA;AACA;;AAEA,gCAAgC;AAChC;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,aAAa;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,GAAG;;AAEvC;AACA;AACA,cAAc;AACd,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA,2BAA2B;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,sCAAsC;AACtC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA,CAAC;;AAED;;;;;;;;;;;;;AChyBA,0OAA0O,mEAAmE,ukBAAukB,iDAAiD,2DAA2D,cAAc,4NAA4N,cAAc,uTAAuT,qBAAqB,0jBAA0jB,mEAAmE,oR;;;;;;;;;;;;ACAjqE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8BAA8B;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,6BAA6B;AAC7B,sDAAsD,kBAAkB;AACxE;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb,sCAAsC,kBAAkB;AACxD;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,kBAAkB;AAC3C;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kCAAkC,kBAAkB;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,I;;;;;;;;;;;;AC/MD,yC;;;;;;;;;;;;ACAA,saAAsa,mT;;;;;;;;;;;;ACAta;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,CAAC;;;;;;;;;;;;;ACpCD,oUAAoU,sBAAsB,oGAAoG,wBAAwB,mXAAmX,mGAAmG,kMAAkM,uFAAuF,2HAA2H,yCAAyC,2WAA2W,mGAAmG,kMAAkM,uFAAuF,2CAA2C,kBAAkB,oQAAoQ,uGAAuG,2JAA2J,EAAE,0GAA0G,2FAA2F,wDAAwD,2CAA2C,gjBAAgjB,uGAAuG,4JAA4J,EAAE,QAAQ,EAAE,oGAAoG,2FAA2F,wDAAwD,2CAA2C,gjBAAgjB,uGAAuG,8IAA8I,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,2BAA2B,EAAE,oHAAoH,2FAA2F,wDAAwD,2CAA2C,0lBAA0lB,uGAAuG,wJAAwJ,EAAE,kHAAkH,2FAA2F,wDAAwD,2CAA2C,ijBAAijB,uGAAuG,wJAAwJ,EAAE,kHAAkH,2FAA2F,8SAA8S,uGAAuG,qNAAqN,2FAA2F,wDAAwD,2CAA2C,qjBAAqjB,mGAAmG,kMAAkM,uFAAuF,2CAA2C,kBAAkB,qOAAqO,mGAAmG,kMAAkM,uFAAuF,2HAA2H,yCAAyC,0YAA0Y,uGAAuG,qQAAqQ,EAAE,0GAA0G,2FAA2F,6NAA6N,EAAE,0GAA0G,2FAA2F,+DAA+D,2CAA2C,gjBAAgjB,uGAAuG,sQAAsQ,EAAE,QAAQ,EAAE,oGAAoG,2FAA2F,8NAA8N,EAAE,QAAQ,EAAE,oGAAoG,2FAA2F,+DAA+D,2CAA2C,gjBAAgjB,uGAAuG,+PAA+P,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,2BAA2B,EAAE,oHAAoH,2FAA2F,uNAAuN,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,2BAA2B,EAAE,oHAAoH,2FAA2F,+DAA+D,2CAA2C,0lBAA0lB,uGAAuG,qQAAqQ,EAAE,kHAAkH,2FAA2F,6NAA6N,EAAE,kHAAkH,2FAA2F,+DAA+D,2CAA2C,ijBAAijB,uGAAuG,kPAAkP,EAAE,kHAAkH,2FAA2F,2PAA2P,EAAE,kHAAkH,2FAA2F,oQAAoQ,uGAAuG,qUAAqU,2FAA2F,6RAA6R,2FAA2F,+DAA+D,2CAA2C,ksCAAksC,0BAA0B,uHAAuH,eAAe,0DAA0D,qCAAqC,mlEAAmlE,cAAc,6JAA6J,eAAe,YAAY,qBAAqB,YAAY,iCAAiC,8IAA8I,6BAA6B,uLAAuL,+CAA+C,6HAA6H,mSAAmS,g7C;;;;;;;;;;;;ACAvpvB;AACA;AACA;AACA;AACA;AACA;AACA,+KAAmE;;AAEnE;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0GAA0G;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA,4DAA4D,iCAAiC;AAC7F,iBAAiB;AACjB,+DAA+D,iCAAiC;AAChG,iBAAiB;AACjB,uDAAuD,iCAAiC;AACxF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA,+BAA+B,gCAAgC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,QAAQ,eAAe;AAClE,iBAAiB;;AAEjB;AACA,mEAAmE,mCAAmC;AACtG;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;;AAEA,uEAAuE;AACvE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C;;AAE/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,MAAM,UAAU,OAAO,QAAQ,KAAK,OAAO,IAAI;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,MAAM,UAAU,OAAO,QAAQ,KAAK,OAAO,IAAI;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,4BAA4B;;AAE5B;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4CAA4C;AAC5C,2CAA2C,uBAAuB;AAClE;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA,0CAA0C;AAC1C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gEAAgE,MAAM,UAAU,OAAO,QAAQ,KAAK,OAAO,IAAI;AAC/G;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,4BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,wBAAwB;;;AAGxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4D;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;;AAEA,yBAAyB;AACzB,4DAA4D,iCAAiC;AAC7F;AACA;;AAEA;AACA;AACA,iEAAiE,iCAAiC;AAClG,gCAAgC;AAChC,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4BAA4B;AAC5B;AACA;AACA,wB;AACA,oBAAoB;;AAEpB,+FAA+F;AAC/F;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,4JAA4J;;;;;AAK5J;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA,+FAA+F;AAC/F;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB,0CAA0C;AAC1C;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,6JAA6J;;AAE7J;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mGAAmG;;AAEnG;AACA;AACA;AACA,uBAAuB;;;AAGvB;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,iCAAiC;AACpG,4BAA4B;AAC5B;AACA;;AAEA,4BAA4B;AAC5B;AACA,mEAAmE,iCAAiC;AACpG,4BAA4B;AAC5B;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;;AAG5B;;AAEA;AACA;AACA,gEAAgE,iCAAiC;AACjG;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,oEAAoE,iCAAiC;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD;AACpD;AACA,qCAAqC;AACrC;AACA;AACA,uDAAuD,sBAAsB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,6CAA6C;AAC7C;AACA,qCAAqC;AACrC,iCAAiC;AACjC;AACA;AACA;AACA,yCAAyC;AACzC,qCAAqC;AACrC;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB,eAAe,EAAE;AAClC;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd,SAAS;AACT,KAAK;;AAEL;AACA,CAAC,I;;;;;;;;;;;;ACrzBD,yC;;;;;;;;;;;;ACAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA,+DAA+D;AAC/D,0GAA0G;AAC1G;AACA;AACA;AACA;AACA,qBAAqB,+CAA+C;AACpE;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA,CAAC","file":"resources/js/5efa91e2454063a76cdb2.js","sourcesContent":["/*!\n * Image Compressor v1.1.4\n * https://xkeshi.github.io/image-compressor\n *\n * Copyright 2017-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-06-20T07:28:41.051Z\n */\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar canvasToBlob = createCommonjsModule(function (module) {\n(function (window) {\n\n  var CanvasPrototype =\n    window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n  var hasBlobConstructor =\n    window.Blob &&\n    (function () {\n      try {\n        return Boolean(new Blob())\n      } catch (e) {\n        return false\n      }\n    })();\n  var hasArrayBufferViewSupport =\n    hasBlobConstructor &&\n    window.Uint8Array &&\n    (function () {\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100\n      } catch (e) {\n        return false\n      }\n    })();\n  var BlobBuilder =\n    window.BlobBuilder ||\n    window.WebKitBlobBuilder ||\n    window.MozBlobBuilder ||\n    window.MSBlobBuilder;\n  var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n  var dataURLtoBlob =\n    (hasBlobConstructor || BlobBuilder) &&\n    window.atob &&\n    window.ArrayBuffer &&\n    window.Uint8Array &&\n    function (dataURI) {\n      var matches,\n        mediaType,\n        isBase64,\n        dataString,\n        byteString,\n        arrayBuffer,\n        intArray,\n        i,\n        bb;\n      // Parse the dataURI components as per RFC 2397\n      matches = dataURI.match(dataURIPattern);\n      if (!matches) {\n        throw new Error('invalid data URI')\n      }\n      // Default to text/plain;charset=US-ASCII\n      mediaType = matches[2]\n        ? matches[1]\n        : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n      isBase64 = !!matches[4];\n      dataString = dataURI.slice(matches[0].length);\n      if (isBase64) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataString);\n      } else {\n        // Convert base64/URLEncoded data component to raw binary:\n        byteString = decodeURIComponent(dataString);\n      }\n      // Write the bytes of the string to an ArrayBuffer:\n      arrayBuffer = new ArrayBuffer(byteString.length);\n      intArray = new Uint8Array(arrayBuffer);\n      for (i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i);\n      }\n      // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n      if (hasBlobConstructor) {\n        return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n          type: mediaType\n        })\n      }\n      bb = new BlobBuilder();\n      bb.append(arrayBuffer);\n      return bb.getBlob(mediaType)\n    };\n  if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n    if (CanvasPrototype.mozGetAsFile) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        var self = this;\n        setTimeout(function () {\n          if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n            callback(dataURLtoBlob(self.toDataURL(type, quality)));\n          } else {\n            callback(self.mozGetAsFile('blob', type));\n          }\n        });\n      };\n    } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        var self = this;\n        setTimeout(function () {\n          callback(dataURLtoBlob(self.toDataURL(type, quality)));\n        });\n      };\n    }\n  }\n  if (typeof undefined === 'function' && undefined.amd) {\n    undefined(function () {\n      return dataURLtoBlob\n    });\n  } else if (module.exports) {\n    module.exports = dataURLtoBlob;\n  } else {\n    window.dataURLtoBlob = dataURLtoBlob;\n  }\n})(window);\n});\n\n/* globals Blob */\nvar toString = Object.prototype.toString;\n\nvar isBlob = function (x) {\n\treturn x instanceof Blob || toString.call(x) === '[object Blob]';\n};\n\nvar DEFAULTS = {\n  /**\n   * Indicates if read the image's Exif Orientation information,\n   * and then rotate or flip the image automatically.\n   * @type {boolean}\n   */\n  checkOrientation: true,\n\n  /**\n   * The max width of the output image.\n   * @type {number}\n   */\n  maxWidth: Infinity,\n\n  /**\n   * The max height of the output image.\n   * @type {number}\n   */\n  maxHeight: Infinity,\n\n  /**\n   * The min width of the output image.\n   * @type {number}\n   */\n  minWidth: 0,\n\n  /**\n   * The min height of the output image.\n   * @type {number}\n   */\n  minHeight: 0,\n\n  /**\n   * The width of the output image.\n   * If not specified, the natural width of the source image will be used.\n   * @type {number}\n   */\n  width: undefined,\n\n  /**\n   * The height of the output image.\n   * If not specified, the natural height of the source image will be used.\n   * @type {number}\n   */\n  height: undefined,\n\n  /**\n   * The quality of the output image.\n   * It must be a number between `0` and `1`,\n   * and only available for `image/jpeg` and `image/webp` images.\n   * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n   * @type {number}\n   */\n  quality: 0.8,\n\n  /**\n   * The mime type of the output image.\n   * By default, the original mime type of the source image file will be used.\n   * @type {string}\n   */\n  mimeType: 'auto',\n\n  /**\n   * PNG files over this value (5M by default) will be converted to JPEGs.\n   * To disable this, just set the value to `Infinity`.\n   * Check out {@link https://github.com/xkeshi/image-compressor/issues/2 #2}.\n   * @type {number}\n   */\n  convertSize: 5000000,\n\n  /**\n   * The hook function to execute before draw the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) { context.fillStyle = '#fff' }\n   */\n  beforeDraw: null,\n\n  /**\n   * The hook function to execute after drew the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) { context.filter = grayscale(100%) }\n   */\n  drew: null,\n\n  /**\n   * The hook function to execute when success to compress the image.\n   * @type {Function}\n   * @param {File} file - The compressed image File object.\n   * @example\n   * function (file) { console.log(file) }\n   */\n  success: null,\n\n  /**\n   * The hook function to execute when fail to compress the image.\n   * @type {Function}\n   * @param {Error} err - An Error object.\n   * @example\n   * function (err) { console.log(err.message) }\n   */\n  error: null\n};\n\nvar REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n\n/**\n * Check if the given value is a mime type of image.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n */\nfunction isImageType(value) {\n  return REGEXP_IMAGE_TYPE.test(value);\n}\n\n/**\n * Convert image type to extension.\n * @param {string} value - The image type to convert.\n * @param {boolean} [includeDot=true] - Include a leading dot or not.\n * @returns {boolean} Returns the image extension.\n */\nfunction imageTypeToExtension(value) {\n  var includeDot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  var extension = isImageType(value) ? value.substr(6) : '';\n\n  if (extension === 'jpeg') {\n    extension = 'jpg';\n  }\n\n  if (extension && includeDot) {\n    extension = '.' + extension;\n  }\n\n  return extension;\n}\n\nvar fromCharCode = String.fromCharCode;\n\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i = void 0;\n\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nvar _window = window,\n    btoa = _window.btoa;\n\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\n\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var uint8 = new Uint8Array(arrayBuffer);\n  var data = '';\n\n  // TypedArray.prototype.forEach is not supported in some browsers as IE.\n  if (typeof uint8.forEach === 'function') {\n    uint8.forEach(function (value) {\n      data += fromCharCode(value);\n    });\n  } else {\n    var length = uint8.length;\n\n\n    for (var i = 0; i < length; i += 1) {\n      data += fromCharCode(uint8[i]);\n    }\n  }\n\n  return 'data:' + mimeType + ';base64,' + btoa(data);\n}\n\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\nfunction getOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation = void 0;\n  var littleEndian = void 0;\n  var app1Start = void 0;\n  var ifdStart = void 0;\n\n  // Only handle JPEG image (start by 0xFFD8)\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    var length = dataView.byteLength;\n    var offset = 2;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n\n      offset += 1;\n    }\n  }\n\n  if (app1Start) {\n    var exifIDCode = app1Start + 4;\n    var tiffOffset = app1Start + 10;\n\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      var endianness = dataView.getUint16(tiffOffset);\n\n      littleEndian = endianness === 0x4949;\n\n      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n    }\n  }\n\n  if (ifdStart) {\n    var _length = dataView.getUint16(ifdStart, littleEndian);\n    var _offset = void 0;\n    var i = void 0;\n\n    for (i = 0; i < _length; i += 1) {\n      _offset = ifdStart + i * 12 + 2;\n\n      if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n          // 8 is the offset of the current tag's value\n          _offset += 8;\n\n          // Get the original orientation value\n          orientation = dataView.getUint16(_offset, littleEndian);\n\n          // Override the orientation with its default value\n          dataView.setUint16(_offset, 1, littleEndian);\n          break;\n        }\n    }\n  }\n\n  return orientation;\n}\n\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n\n    // Rotate left 180°\n    case 3:\n      rotate = -180;\n      break;\n\n    // Flip vertical\n    case 4:\n      scaleY = -1;\n      break;\n\n    // Flip vertical and rotate right 90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n\n    // Rotate right 90°\n    case 6:\n      rotate = 90;\n      break;\n\n    // Flip horizontal and rotate right 90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n\n    // Rotate left 90°\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/i;\n\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _window$1 = window,\n    ArrayBuffer$1 = _window$1.ArrayBuffer,\n    FileReader = _window$1.FileReader;\n\nvar URL = window.URL || window.webkitURL;\nvar REGEXP_EXTENSION = /\\.\\w+$/;\n\n/**\n * Creates a new image compressor.\n * @class\n */\n\nvar ImageCompressor = function () {\n  /**\n   * The constructor of ImageCompressor.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   */\n  function ImageCompressor(file, options) {\n    classCallCheck(this, ImageCompressor);\n\n    this.result = null;\n\n    if (file) {\n      this.compress(file, options);\n    }\n  }\n\n  /**\n   * The main compress method.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   * @returns {Promise} - A Promise instance.\n   */\n\n\n  createClass(ImageCompressor, [{\n    key: 'compress',\n    value: function compress(file, options) {\n      var _this = this;\n\n      var image = new Image();\n\n      options = _extends({}, DEFAULTS, options);\n\n      if (!ArrayBuffer$1) {\n        options.checkOrientation = false;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!isBlob(file)) {\n          reject(new Error('The first argument must be a File or Blob object.'));\n          return;\n        }\n\n        var mimeType = file.type;\n\n        if (!isImageType(mimeType)) {\n          reject(new Error('The first argument must be an image File or Blob object.'));\n          return;\n        }\n\n        if (!URL && !FileReader) {\n          reject(new Error('The current browser does not support image compression.'));\n          return;\n        }\n\n        if (URL && !options.checkOrientation) {\n          resolve({\n            url: URL.createObjectURL(file)\n          });\n        } else if (FileReader) {\n          var reader = new FileReader();\n          var checkOrientation = options.checkOrientation && mimeType === 'image/jpeg';\n\n          reader.onload = function (_ref) {\n            var target = _ref.target;\n            var result = target.result;\n\n\n            resolve(checkOrientation ? _extends({\n              url: arrayBufferToDataURL(result, mimeType)\n            }, parseOrientation(getOrientation(result))) : {\n              url: result\n            });\n          };\n          reader.onabort = function () {\n            reject(new Error('Aborted to load the image with FileReader.'));\n          };\n          reader.onerror = function () {\n            reject(new Error('Failed to load the image with FileReader.'));\n          };\n\n          if (checkOrientation) {\n            reader.readAsArrayBuffer(file);\n          } else {\n            reader.readAsDataURL(file);\n          }\n        }\n      }).then(function (data) {\n        return new Promise(function (resolve, reject) {\n          image.onload = function () {\n            return resolve(_extends({}, data, {\n              naturalWidth: image.naturalWidth,\n              naturalHeight: image.naturalHeight\n            }));\n          };\n          image.onabort = function () {\n            reject(new Error('Aborted to load the image.'));\n          };\n          image.onerror = function () {\n            reject(new Error('Failed to load the image.'));\n          };\n          image.alt = file.name;\n          image.src = data.url;\n        });\n      }).then(function (_ref2) {\n        var naturalWidth = _ref2.naturalWidth,\n            naturalHeight = _ref2.naturalHeight,\n            _ref2$rotate = _ref2.rotate,\n            rotate = _ref2$rotate === undefined ? 0 : _ref2$rotate,\n            _ref2$scaleX = _ref2.scaleX,\n            scaleX = _ref2$scaleX === undefined ? 1 : _ref2$scaleX,\n            _ref2$scaleY = _ref2.scaleY,\n            scaleY = _ref2$scaleY === undefined ? 1 : _ref2$scaleY;\n        return new Promise(function (resolve) {\n          var canvas = document.createElement('canvas');\n          var context = canvas.getContext('2d');\n          var aspectRatio = naturalWidth / naturalHeight;\n          var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n          var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n          var minWidth = Math.max(options.minWidth, 0) || 0;\n          var minHeight = Math.max(options.minHeight, 0) || 0;\n          var width = naturalWidth;\n          var height = naturalHeight;\n\n          if (maxWidth < Infinity && maxHeight < Infinity) {\n            if (maxHeight * aspectRatio > maxWidth) {\n              maxHeight = maxWidth / aspectRatio;\n            } else {\n              maxWidth = maxHeight * aspectRatio;\n            }\n          } else if (maxWidth < Infinity) {\n            maxHeight = maxWidth / aspectRatio;\n          } else if (maxHeight < Infinity) {\n            maxWidth = maxHeight * aspectRatio;\n          }\n\n          if (minWidth > 0 && minHeight > 0) {\n            if (minHeight * aspectRatio > minWidth) {\n              minHeight = minWidth / aspectRatio;\n            } else {\n              minWidth = minHeight * aspectRatio;\n            }\n          } else if (minWidth > 0) {\n            minHeight = minWidth / aspectRatio;\n          } else if (minHeight > 0) {\n            minWidth = minHeight * aspectRatio;\n          }\n\n          if (options.width > 0) {\n            var _options = options;\n            width = _options.width;\n\n            height = width / aspectRatio;\n          } else if (options.height > 0) {\n            var _options2 = options;\n            height = _options2.height;\n\n            width = height * aspectRatio;\n          }\n\n          width = Math.min(Math.max(width, minWidth), maxWidth);\n          height = Math.min(Math.max(height, minHeight), maxHeight);\n\n          var destX = -width / 2;\n          var destY = -height / 2;\n          var destWidth = width;\n          var destHeight = height;\n\n          if (Math.abs(rotate) % 180 === 90) {\n            var _width$height = {\n              width: height,\n              height: width\n            };\n            width = _width$height.width;\n            height = _width$height.height;\n          }\n\n          canvas.width = normalizeDecimalNumber(width);\n          canvas.height = normalizeDecimalNumber(height);\n\n          if (!isImageType(options.mimeType)) {\n            options.mimeType = file.type;\n          }\n\n          var defaultFillStyle = 'transparent';\n\n          // Converts PNG files over the `convertSize` to JPEGs.\n          if (file.size > options.convertSize && options.mimeType === 'image/png') {\n            defaultFillStyle = '#fff';\n            options.mimeType = 'image/jpeg';\n          }\n\n          // Override the default fill color (#000, black)\n          context.fillStyle = defaultFillStyle;\n          context.fillRect(0, 0, width, height);\n          context.save();\n          context.translate(width / 2, height / 2);\n          context.rotate(rotate * Math.PI / 180);\n          context.scale(scaleX, scaleY);\n\n          if (options.beforeDraw) {\n            options.beforeDraw.call(_this, context, canvas);\n          }\n\n          context.drawImage(image, Math.floor(normalizeDecimalNumber(destX)), Math.floor(normalizeDecimalNumber(destY)), Math.floor(normalizeDecimalNumber(destWidth)), Math.floor(normalizeDecimalNumber(destHeight)));\n\n          if (options.drew) {\n            options.drew.call(_this, context, canvas);\n          }\n\n          context.restore();\n\n          var done = function done(result) {\n            resolve({\n              naturalWidth: naturalWidth,\n              naturalHeight: naturalHeight,\n              result: result\n            });\n          };\n\n          if (canvas.toBlob) {\n            canvas.toBlob(done, options.mimeType, options.quality);\n          } else {\n            done(canvasToBlob(canvas.toDataURL(options.mimeType, options.quality)));\n          }\n        });\n      }).then(function (_ref3) {\n        var naturalWidth = _ref3.naturalWidth,\n            naturalHeight = _ref3.naturalHeight,\n            result = _ref3.result;\n\n        if (URL && !options.checkOrientation) {\n          URL.revokeObjectURL(image.src);\n        }\n\n        if (result) {\n          // Returns original file if the result is greater than it and without size related options\n          if (result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight)) {\n            result = file;\n          } else {\n            var date = new Date();\n\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name;\n\n            // Convert the extension to match its type\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // Returns original file if the result is null in some cases.\n          result = file;\n        }\n\n        _this.result = result;\n\n        if (options.success) {\n          options.success.call(_this, result);\n        }\n\n        return Promise.resolve(result);\n      }).catch(function (err) {\n        if (!options.error) {\n          throw err;\n        }\n\n        options.error.call(_this, err);\n      });\n    }\n  }]);\n  return ImageCompressor;\n}();\n\nexport default ImageCompressor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/image-compressor.js/dist/image-compressor.esm.js\n// module id = ./node_modules/image-compressor.js/dist/image-compressor.esm.js\n// module chunks = 2","module.exports = \"<div ng-show=$ctrl.compressing class=file-wait> <div class=loader></div> <div>Please wait...</div> </div> <label for=docGroup class=screen-reader-only>Document group</label> <div style=margin-bottom:10px ng-class=\\\"{'has-error': $ctrl.submitted && $ctrl.file.validationError.noGroup}\\\"> <custom-select> <select id=docGroup name=docGroup class=form-control ng-model=$ctrl.file.documentGroup ng-disabled=$ctrl.file.documentGroup ng-options=\\\"group for group in $ctrl.documentGroups\\\" ng-change=$ctrl.documentGroupChange() required> <option value=\\\"\\\" disabled=disabled>Please select</option> </select> </custom-select> </div> <div class=upload-container style=margin-bottom:10px> <button class=button-outline ng-if=!$ctrl.file.document ng-click=$ctrl.triggerUpload() ng-disabled=!$ctrl.file.documentGroup> Upload a document </button> <div class=bottom-div ng-class=\\\"{'hidden-field': $ctrl.selectedImages[0].document}\\\"> <div ng-if=$ctrl.isStaffJourney> <input type=file id={{$ctrl.fileId}} class=hidden-field accept=image/* capture=camera onchange=angular.element(this).scope().$ctrl.previewImage(this,angular.element(this).scope().$ctrl.index)> </div> <div ng-if=!$ctrl.isStaffJourney> <input type=file id={{$ctrl.fileId}} class=hidden-field accept=\\\"image/*, application/pdf\\\" onchange=angular.element(this).scope().$ctrl.previewImage(this,angular.element(this).scope().$ctrl.index)> </div> <input type=text id=file1Name class=hidden-field name=file1Name ng-model=$ctrl.selectedImages[0].documentName required> </div> <img ng-src={{$ctrl.file.document}} aria-label=\\\"reupload this document\\\" ng-click=$ctrl.triggerUpload() class=img-responsive ng-if=\\\"$ctrl.file.document && $ctrl.file.documentType!=='application/pdf'\\\"> <span class=\\\"icon icon-pdf\\\" ng-click=$ctrl.triggerUpload() ng-if=\\\"$ctrl.file.documentType==='application/pdf'\\\"></span> </div> <div> <div ng-if=\\\"$ctrl.file.documentGroup === 'Bank Statement' || $ctrl.file.documentGroup === 'Salary Slip'\\\"> <label class=textbox-label> (If document is password protected) </label> <input type=password id=docPassword name=docPassword class=form-control ng-class=\\\"{'has-error': $ctrl.submitted && $ctrl.file.validationError.noGroup}\\\" placeholder=\\\"Enter the document Password\\\" ng-model=$ctrl.file.docPassword /> </div> </div> <div ng-if=$ctrl.file.document class=remove-btn-container> <button class=button-outline ng-click=$ctrl.removeFile()> <span class=\\\"icon icon-bin\\\"></span> Remove </button> </div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/step11/file-upload/file-upload.component.html\n// module id = ./src/app/components/journey/step11/file-upload/file-upload.component.html\n// module chunks = 2","(function () {\r\n    \"use strict\";\r\n    require(\"./file-upload.component.scss\");\r\n    var ImageCompressor = require(\"image-compressor.js\");\r\n    var uploadCtrl = function ($scope, $rootScope, $timeout, journeyService, step11Service, appState) {\r\n        var vm = this, fileTypes;\r\n\r\n        vm.$onInit = function () {\r\n            // vm.fileId = \"file\" + vm.index;\r\n            vm.isStaffJourney = journeyService.isStaffJourney();\r\n            vm.hubSalaryFlag = appState.getHubSalaryFlag() === 'success';\r\n            // vm.hubSalaryFlag=true;\r\n            console.log(\"hubSalaryFlag\",vm.hubSalaryFlag);\r\n            vm.documentGroups = step11Service.getDocumentGroups();\r\n            fileTypes = ['image/jpg', 'image/jpeg', 'image/png','application/pdf'];\r\n            if (!vm.isStaffJourney) {\r\n                // Remove BoilerPlate option\r\n                vm.documentGroups.splice(0, 3);\r\n               // vm.documentGroups.splice(1, 1);\r\n                //fileTypes.push(\"application/pdf\");\r\n            }\r\n            if (vm.hubSalaryFlag) {\r\n                var valuesToRemove = ['Bank Statement', 'Salary Slip'];\r\n                var newDocumentGroups = [];\r\n                for (var i = 0; i < vm.documentGroups.length; i++) {\r\n                     valuesToRemove.indexOf(vm.documentGroups[i]) === -1 ? newDocumentGroups.push(vm.documentGroups[i]):'';\r\n                }\r\n                vm.documentGroups = newDocumentGroups;\r\n            }\r\n            console.log(\"documentGroupsAfterCalculatedSalaryFlagCheck \",vm.documentGroups);\r\n        };\r\n\r\n        vm.triggerUpload = function () {\r\n            var fileElem = angular.element(document.querySelector(\"#\" + vm.fileId))[0];\r\n            fileElem.click();\r\n            vm.file.resetValidationError();\r\n        };\r\n\r\n        var validateFile = function (filetype, filesize) {\r\n            var maxfilesize = 3145728; //3MB in bytes\r\n            vm.file.validationError.maxSize = false;\r\n            vm.file.validationError.minSize = false;\r\n            vm.file.validationError.format = false;\r\n            if (fileTypes.indexOf(filetype) === -1) {\r\n                vm.file.validationError.format = true;\r\n                // vm.onValidationError();\r\n                var fileElem = angular.element(document.querySelector(\"#\" + vm.fileId))[0];\r\n                fileElem.value = '';\r\n                return false;\r\n            }\r\n            if (filesize > maxfilesize) {\r\n                vm.file.validationError.maxSize = true;\r\n                // vm.onValidationError();\r\n                var fileElem = angular.element(document.querySelector(\"#\" + vm.fileId))[0];\r\n                fileElem.value = '';\r\n                return false;\r\n            } else if (filesize === 0) {\r\n                vm.file.validationError.minSize = true;\r\n                // vm.onValidationError();\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        };\r\n\r\n        vm.previewImage = function (element, imageindex) {\r\n            $timeout(function () {\r\n                var selectedfile = element.files[0];\r\n                var filename = selectedfile.name;\r\n                alert(\"\"+filename+\"  uploaded succesfully \\n \\n Please click OK to continue\");\r\n                if (fileTypes.indexOf(selectedfile.type) > -1 && selectedfile.type.indexOf('pdf') === -1) {\r\n                    // Show Please wait...\r\n                    vm.compressing = true;\r\n                    var selectedfile = element.files[0];\r\n                    var quality = 0, sizeMB = selectedfile.size / (1024 * 1024), sizeKB = selectedfile.size / 1024;\r\n                    if (sizeMB > 1.5) {\r\n                        quality = 0.1;\r\n                    } else if (sizeMB <= 1.5 && sizeKB > 750) {\r\n                        quality = 0.2;\r\n                    } else if (sizeKB <= 750 && sizeKB > 500) {\r\n                        quality = 0.3;\r\n                    } else {\r\n                        quality = 1;\r\n                    }\r\n                    // alert((selectedfile.size / (1024 * 1024)) + 'MB');\r\n                    new ImageCompressor.default(selectedfile, {\r\n                        quality: quality,\r\n                        success: function (resultFile) {\r\n                            $scope.$apply(function (scope) {\r\n                                readFile(resultFile);\r\n                            });\r\n                        },\r\n                        error: function (err) {\r\n                            // Hide Please wait...\r\n                            vm.compressing = false;\r\n                        }\r\n                    });\r\n                } else {\r\n                    readFile(selectedfile);\r\n                }\r\n            });\r\n        };\r\n\r\n        vm.compress = function (element, imageindex) {\r\n            $timeout(function () {\r\n                // Show Please wait...\r\n                vm.compressing = true;\r\n                var selectedfile = element.files[0];\r\n                var quality = 0, sizeMB = selectedfile.size / (1024 * 1024), sizeKB = selectedfile.size / 1024;\r\n                if (sizeMB > 1.5) {\r\n                    quality = 0.1;\r\n                } else if (sizeMB <= 1.5 && sizeKB > 750) {\r\n                    quality = 0.2;\r\n                } else if (sizeKB <= 750 && sizeKB > 500) {\r\n                    quality = 0.3;\r\n                } else {\r\n                    quality = 1;\r\n                }\r\n                // alert((selectedfile.size / (1024 * 1024)) + 'MB');\r\n                new ImageCompressor.default(selectedfile, {\r\n                    quality: quality,\r\n                    success: function (resultFile) {\r\n                        $scope.$apply(function (scope) {\r\n                            // alert((resultFile.size / (1024 * 1024)) + 'MB');\r\n                            if (validateFile(resultFile.type, resultFile.size)) {\r\n                                var fileReader = new FileReader();\r\n                                fileReader.onload = function (e) {\r\n                                    $scope.$apply(function (scope) {\r\n                                        vm.file.validationError.format = false;\r\n                                        vm.file.validationError.maxSize = false;\r\n                                        vm.file.validationError.minSize = false;\r\n                                        vm.file.document = e.target.result;\r\n                                        vm.file.documentName = selectedfile.name;\r\n                                        vm.file.documentType = resultFile.type;\r\n                                        // $rootScope.$broadcast(\"on-document-selected\");\r\n                                        // Hide Please wait...\r\n                                        vm.compressing = false;\r\n                                    });\r\n                                };\r\n                                fileReader.readAsDataURL(resultFile);\r\n                            } else {\r\n                                vm.onValidationError({ index: vm.index });\r\n                                // Hide Please wait...\r\n                                vm.compressing = false;\r\n                            }\r\n                        });\r\n                    },\r\n                    error: function (err) {\r\n                        // Hide Please wait...\r\n                        vm.compressing = false;\r\n                    }\r\n                });\r\n            });\r\n        };\r\n\r\n        var readFile = function (resultFile) {\r\n            if (validateFile(resultFile.type, resultFile.size)) {\r\n                var fileReader = new FileReader();\r\n                fileReader.onload = function (e) {\r\n                    $scope.$apply(function (scope) {\r\n                        vm.file.validationError.format = false;\r\n                        vm.file.validationError.maxSize = false;\r\n                        vm.file.validationError.minSize = false;\r\n                        vm.file.document = e.target.result;\r\n                        vm.file.documentName = resultFile.name;\r\n                        vm.file.documentType = resultFile.type;\r\n                        // $rootScope.$broadcast(\"on-document-selected\");\r\n                        // Hide Please wait...\r\n                        vm.compressing = false;\r\n                    });\r\n                };\r\n                fileReader.readAsDataURL(resultFile);\r\n            } else {\r\n                vm.onValidationError({ index: vm.index });\r\n                // Hide Please wait...\r\n                vm.compressing = false;\r\n            }\r\n        };\r\n\r\n        vm.removeFile = function () {\r\n            vm.onRemove({ index: vm.index });\r\n        };\r\n\r\n        vm.documentGroupChange = function () {\r\n            if (vm.file.documentGroup) {\r\n                vm.file.validationError.noGroup = false;\r\n            } else {\r\n                vm.file.validationError.noGroup = true;\r\n            }\r\n            vm.onValidationError({ index: vm.index });\r\n        };\r\n    };\r\n\r\n    var fileUploadComp = angular.module(\"journey.module\").component(\"fileUpload\", {\r\n        template: require(\"./file-upload.component.html\"),\r\n        controller: [\"$scope\", \"$rootScope\", \"$timeout\", \"journeyService\", \"step11Service\",\"appState\", uploadCtrl],\r\n        bindings: {\r\n            index: \"<\",\r\n            submitted: '<',\r\n            fileId: \"@\",\r\n            file: \"=\",\r\n            onRemove: \"&\",\r\n            onValidationError: \"&\"\r\n        }\r\n    });\r\n\r\n    module.exports = fileUploadComp.name;\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/step11/file-upload/file-upload.component.js\n// module id = ./src/app/components/journey/step11/file-upload/file-upload.component.js\n// module chunks = 2","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/step11/file-upload/file-upload.component.scss\n// module id = ./src/app/components/journey/step11/file-upload/file-upload.component.scss\n// module chunks = 2","module.exports = \"<div class=modal-header> <div class=heading-container> <h4 class=brand-bar></h4> </div> <div class=close-button-container> <span aria-label=Close title=Close class=\\\"icon icon-2x icon-delete-small\\\" ng-click=$ctrl.cancel()></span> </div> </div> <div class=modal-body> <p> You will be redirected to Account Aggregator page. Please click OK to proceed and do not close current tab. </p> <p style=color:red;font-weight:700> Please close the Account Aggregator browser once consent has been given. </p> </div> <div class=modal-footer> <div class=buttons-container> <button class=button-succes ng-click=$ctrl.cancel()>Close</button> <button class=button-primary ng-click=$ctrl.Close(true)>OK</button> </div> </div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/step11/openBankingModal/openBankingModal.modal.component.html\n// module id = ./src/app/components/journey/step11/openBankingModal/openBankingModal.modal.component.html\n// module chunks = 2","(function () {\r\n    'use strict';\r\n    var angular = require('angular');\r\n// this file added for open Banking popup confirmation message by @akshaypise\r\n    var modalController = function (analyticService) {\r\n        var vm = this;\r\n\r\n        vm.$onInit = function () {\r\n            console.log(\"analyticService\",analyticService);\r\n          //  analyticService.buttonList.popup.event_content = \"Assignment of Esignzy adhar e signing\";\r\n            //analyticService.trackUserAction(analyticService.buttonList.popup);\r\n        };\r\n\r\n        vm.Close = function (isSelected) {\r\n            vm.close({\r\n                $value: isSelected\r\n            });\r\n        };\r\n\r\n        vm.cancel = function () {\r\n            vm.dismiss({\r\n                $value: 'cancel'\r\n            });\r\n        };\r\n    };\r\n\r\n    var modalComp = angular.module('journey.module').component('openBankingModal', {\r\n        template: require('./openBankingModal.modal.component.html'),\r\n        bindings: {\r\n            resolve: '<',\r\n            close: '&',\r\n            dismiss: '&'\r\n        },\r\n        controller: ['analyticService', modalController]\r\n    });\r\n    module.exports = modalComp.name;\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/step11/openBankingModal/openBankingModal.modal.component.js\n// module id = ./src/app/components/journey/step11/openBankingModal/openBankingModal.modal.component.js\n// module chunks = 2","module.exports = \"<div class=row ng-hide=$ctrl.showLoader> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\" ui-view=step11View> <form name=step11Form focus-on-error novalidate ng-hide=$ctrl.showLoader> <input type=text class=hidden-field ng-model=$ctrl.robocheck tabindex=-1> <alert-msg ng-if=$ctrl.model.errorMsg type=ERROR> {{$ctrl.model.errorMsg}} </alert-msg> <alert-msg ng-if=$ctrl.model.successMsg type=SUCCESS close=$ctrl.closeSuccessMsg()> {{$ctrl.model.successMsg}} </alert-msg> <div class=row> <div class=\\\"col-md-12 col-sm-12\\\"> <h1 class=\\\"brand-bar no-margin-top\\\">Document Information</h1> </div> </div> <div id=poi ng-if=$ctrl.isStaffJourney> <div class=row> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\" ng-if=\\\"$ctrl.ekyc!='Yes'\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=poiType>Select POI Type</label> <div ng-class=\\\"{'has-error': step11Form.poiType.$invalid && (step11Form.poiType.$touched || $ctrl.model.submitted)}\\\"> <custom-select> <select id=poiType name=poiType class=form-control ng-model=$ctrl.model.poiType ng-options=\\\"item for item in $ctrl.poiType\\\" aria-describedby=poiTypeErrMsg aria-invalid=\\\"{{step11Form.poiType.$invalid && (step11Form.poiType.$touched || $ctrl.model.submitted)}}\\\" required> <option value=\\\"\\\">Please select</option> </select> </custom-select> </div> <div id=poiTypeErrMsg ng-class=\\\"{'has-error': step11Form.poiType.$invalid}\\\"> <validation-msg ng-if=\\\"step11Form.poiType.$error.required && (step11Form.poiType.$touched || $ctrl.model.submitted)\\\"> Please select your POI Type. </validation-msg> </div> </div> </div> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\" ng-if=\\\"$ctrl.ekyc=='Yes'\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=poiType>Select POI Type</label> <div ng-class=\\\"{'has-error': step11Form.poiType.$invalid && (step11Form.poiType.$touched || $ctrl.model.submitted)}\\\"> <custom-select> <select id=poiType name=poiType class=form-control ng-model=$ctrl.model.poiType ng-options=\\\"item for item in $ctrl.poiType\\\" aria-describedby=poiTypeErrMsg aria-invalid=\\\"{{step11Form.poiType.$invalid && (step11Form.poiType.$touched || $ctrl.model.submitted)}}\\\" disabled=disabled> <option value=\\\"\\\">{{$ctrl.poiType[3]}}</option> </select> </custom-select> </div> </div> </div> <div id=passport ng-if=\\\"$ctrl.model.poiType == 'Passport'\\\"> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=poiNumber>POI Number</label> <div ng-class=\\\"{'has-error': step11Form.poiNumber.$invalid && ($ctrl.model.submitted || step11Form.poiNumber.$touched)}\\\"> <input trim type=text id=poiNumber name=poiNumber trim auto-caps class=form-control ng-model=$ctrl.model.poiNumber alpha-num=8 ng-pattern=/^[A-Z][0-9]{7}$/ ng-maxlength=8 placeholder=\\\"Enter Passport Number\\\" aria-describedby=poiNumberErrMsg aria-invalid=\\\"{{step11Form.poiNumber.$invalid && ($ctrl.model.submitted || step11Form.poiNumber.$touched)}}\\\" required> </div> <div id=poiNumberErrMsg ng-class=\\\"{'has-error': step11Form.poiNumber.$invalid}\\\"> <validation-msg ng-if=\\\"step11Form.poiNumber.$error.required && (step11Form.poiNumber.$touched || $ctrl.model.submitted)\\\"> Please enter your Passport Number. </validation-msg> <validation-msg ng-if=\\\"step11Form.poiNumber.$error.pattern && step11Form.poiNumber.$touched\\\"> Please enter valid Passport Number. </validation-msg> </div> </div> </div> </div> <div id=voterId ng-if=\\\"$ctrl.model.poiType == 'Voter Id'\\\"> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=poiNumber>POI Number</label> <div ng-class=\\\"{'has-error': step11Form.poiNumber.$invalid && ($ctrl.model.submitted || step11Form.poiNumber.$touched)}\\\"> <input trim type=text id=poiNumber name=poiNumber trim auto-caps class=form-control ng-model=$ctrl.model.poiNumber alpha-num=10 ng-pattern=/^([a-zA-Z]){3}([0-9]){7}$/ ng-maxlength=10 placeholder=\\\"Enter Voter Id\\\" aria-describedby=poiNumberErrMsg aria-invalid=\\\"{{step11Form.poiNumber.$invalid && ($ctrl.model.submitted || step11Form.poiNumber.$touched)}}\\\" required> </div> <div id=poiNumberErrMsg ng-class=\\\"{'has-error': step11Form.poiNumber.$invalid}\\\"> <validation-msg ng-if=\\\"step11Form.poiNumber.$error.required && (step11Form.poiNumber.$touched || $ctrl.model.submitted)\\\"> Please enter your Voter Id. </validation-msg> <validation-msg ng-if=\\\"step11Form.poiNumber.$error.pattern && step11Form.poiNumber.$touched\\\"> Please enter valid Voter Id. </validation-msg> </div> </div> </div> </div> <div id=DrivingLicense ng-if=\\\"$ctrl.model.poiType == 'Driving License'\\\"> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=poiNumber>POI Number</label> <div ng-class=\\\"{'has-error': step11Form.poiNumber.$invalid && ($ctrl.model.submitted || step11Form.poiNumber.$touched)}\\\"> <input trim type=text id=poiNumber name=poiNumber trim auto-caps class=form-control ng-model=$ctrl.model.poiNumber ng-pattern=\\\"/^(([A-Z]{2}[0-9]{2})( )|([A-Z]{2}-[0-9]{2}))((19|20)[0-9][0-9])[0-9]{7}$/\\\" ng-maxlength=16 placeholder=\\\"Enter Driving License Number\\\" aria-describedby=poiNumberErrMsg aria-invalid=\\\"{{step11Form.poiNumber.$invalid && ($ctrl.model.submitted || step11Form.poiNumber.$touched)}}\\\" required> </div> <div id=poiNumberErrMsg ng-class=\\\"{'has-error': step11Form.poiNumber.$invalid}\\\"> <validation-msg ng-if=\\\"step11Form.poiNumber.$error.required && (step11Form.poiNumber.$touched || $ctrl.model.submitted)\\\"> Please enter your Driving License Number. </validation-msg> <validation-msg ng-if=\\\"step11Form.poiNumber.$error.pattern && step11Form.poiNumber.$touched\\\"> Please enter valid Driving License Number. </validation-msg> </div> </div> </div> </div> <div id=AadharCard ng-if=\\\"$ctrl.model.poiType == 'Aadhar Card' && $ctrl.ekyc !='Yes'\\\"> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=poiNumber>POI Number</label> <div ng-class=\\\"{'has-error': step11Form.poiNumber.$invalid && ($ctrl.model.submitted || step11Form.poiNumber.$touched)}\\\"> <input trim type=text id=poiNumber name=poiNumber trim auto-caps class=form-control ng-model=$ctrl.model.poiNumber only-number=4 ng-pattern=/^[0-9]{4}$/ ng-maxlength=16 placeholder=\\\"Enter Last 4 Digit of Aadhar\\\" aria-describedby=poiNumberErrMsg aria-invalid=\\\"{{step11Form.poiNumber.$invalid && ($ctrl.model.submitted || step11Form.poiNumber.$touched)}}\\\" required> </div> <div id=poiNumberErrMsg ng-class=\\\"{'has-error': step11Form.poiNumber.$invalid}\\\"> <validation-msg ng-if=\\\"step11Form.poiNumber.$error.required && (step11Form.poiNumber.$touched || $ctrl.model.submitted)\\\"> Please enter your Last 4 Digit of Aadhar. </validation-msg> <validation-msg ng-if=\\\"step11Form.poiNumber.$error.pattern && step11Form.poiNumber.$touched\\\"> Please enter valid Last 4 Digit of Aadhar. </validation-msg> </div> </div> </div> </div> <div id=AadharCard ng-if=\\\"$ctrl.ekyc=='Yes'\\\"> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=poiNumber>POI Number</label> <div ng-class=\\\"{'has-error': step11Form.poiNumber.$invalid && ($ctrl.model.submitted || step11Form.poiNumber.$touched)}\\\"> <input trim type=text id=poiNumber name=poiNumber trim auto-caps class=form-control ng-model=$ctrl.model.poiNumber only-number=4 ng-pattern=/^[0-9]{4}$/ ng-maxlength=16 placeholder=\\\"Enter Last 4 Digit of Aadhar\\\" aria-describedby=poiNumberErrMsg aria-invalid=\\\"{{step11Form.poiNumber.$invalid && ($ctrl.model.submitted || step11Form.poiNumber.$touched)}}\\\" ng-value=$ctrl.redactedAadhaar required disabled=disabled> </div> </div> </div> </div> <div id=NREGAJobCard ng-if=\\\"$ctrl.model.poiType == 'NREGA Job Card'\\\"> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=poiNumber>POI Number</label> <div ng-class=\\\"{'has-error': step11Form.poiNumber.$invalid && ($ctrl.model.submitted || step11Form.poiNumber.$touched)}\\\"> <input trim type=text id=poiNumber name=poiNumber trim auto-caps class=form-control ng-model=$ctrl.model.poiNumber placeholder=\\\"Enter NREGA Job Card Number\\\" aria-describedby=poiNumberErrMsg aria-invalid=\\\"{{step11Form.poiNumber.$invalid && ($ctrl.model.submitted || step11Form.poiNumber.$touched)}}\\\" required> </div> <div id=poiNumberErrMsg ng-class=\\\"{'has-error': step11Form.poiNumber.$invalid}\\\"> <validation-msg ng-if=\\\"step11Form.poiNumber.$error.required && (step11Form.poiNumber.$touched || $ctrl.model.submitted)\\\"> Please enter your NREGA Job Card Number. </validation-msg> <validation-msg ng-if=\\\"step11Form.poiNumber.$error.pattern && step11Form.poiNumber.$touched\\\"> Please enter valid NREGA Job Card Number. </validation-msg> </div> </div> </div> </div> </div> <div class=row> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\" ng-if=\\\"$ctrl.ekyc=='Yes'\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=poaType>Select POA Type</label> <div ng-class=\\\"{'has-error': step11Form.poaType.$invalid && (step11Form.poaType.$touched || $ctrl.model.submitted)}\\\"> <custom-select> <select id=poaType name=poaType class=form-control ng-model=$ctrl.model.poaType ng-options=\\\"item for item in $ctrl.poaType\\\" aria-describedby=poaTypeErrMsg aria-invalid=\\\"{{step11Form.poaType.$invalid && (step11Form.poaType.$touched || $ctrl.model.submitted)}}\\\" disabled=disabled> <option value=\\\"\\\">{{$ctrl.poiType[3]}}</option> </select> </custom-select> </div> </div> </div> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\" ng-if=\\\"$ctrl.ekyc!='Yes'\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=poaType>Select POA Type</label> <div ng-class=\\\"{'has-error': step11Form.poaType.$invalid && (step11Form.poaType.$touched || $ctrl.model.submitted)}\\\"> <custom-select> <select id=poaType name=poaType class=form-control ng-model=$ctrl.model.poaType ng-options=\\\"item for item in $ctrl.poaType\\\" aria-describedby=poaTypeErrMsg aria-invalid=\\\"{{step11Form.poaType.$invalid && (step11Form.poaType.$touched || $ctrl.model.submitted)}}\\\" required> <option value=\\\"\\\">Please select</option> </select> </custom-select> </div> <div id=poaTypeErrMsg ng-class=\\\"{'has-error': step11Form.poaType.$invalid}\\\"> <validation-msg ng-if=\\\"step11Form.poaType.$error.required && (step11Form.poaType.$touched || $ctrl.model.submitted)\\\"> Please select your POA Type. </validation-msg> </div> </div> </div> <div id=passport ng-if=\\\"$ctrl.model.poaType == 'Passport'\\\"> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=poaNumber>POA Number</label> <div ng-class=\\\"{'has-error': step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}\\\"> <div ng-if=\\\"$ctrl.model.poiType == 'Passport'\\\"> <input trim type=text id=poaNumber name=poaNumber ng-init=\\\"$ctrl.model.poaNumber=$ctrl.model.poiNumber\\\" trim auto-caps class=form-control ng-model=$ctrl.model.poaNumber alpha-num=8 ng-pattern=/^[A-Z][0-9]{7}$/ ng-maxlength=8 placeholder=\\\"Enter Passport Number\\\" aria-describedby=poaNumberErrMsg aria-invalid=\\\"{{step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}}\\\" required> </div> <div ng-if=\\\"$ctrl.model.poiType != 'Passport'\\\"> <input trim type=text id=poaNumber name=poaNumber trim auto-caps class=form-control ng-model=$ctrl.model.poaNumber alpha-num=8 ng-pattern=/^[A-Z][0-9]{7}$/ ng-maxlength=8 placeholder=\\\"Enter Passport Number\\\" aria-describedby=poaNumberErrMsg aria-invalid=\\\"{{step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}}\\\" required> </div> </div> <div id=poaNumberErrMsg ng-class=\\\"{'has-error': step11Form.poaNumber.$invalid}\\\"> <validation-msg ng-if=\\\"step11Form.poaNumber.$error.required && (step11Form.poaNumber.$touched || $ctrl.model.submitted)\\\"> Please enter your Passport Number. </validation-msg> <validation-msg ng-if=\\\"step11Form.poaNumber.$error.pattern && step11Form.poaNumber.$touched\\\"> Please enter valid Passport Number. </validation-msg> </div> </div> </div> </div> <div id=voterId ng-if=\\\"$ctrl.model.poaType == 'Voter Id'\\\"> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=poaNumber>POA Number</label> <div ng-class=\\\"{'has-error': step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}\\\"> <div ng-if=\\\"$ctrl.model.poiType == 'Voter Id'\\\"> <input trim type=text id=poaNumber name=poaNumber ng-init=\\\"$ctrl.model.poaNumber=$ctrl.model.poiNumber\\\" trim auto-caps class=form-control ng-model=$ctrl.model.poaNumber alpha-num=10 ng-pattern=/^([a-zA-Z]){3}([0-9]){7}$/ ng-maxlength=10 placeholder=\\\"Enter Voter Id\\\" aria-describedby=poaNumberErrMsg aria-invalid=\\\"{{step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}}\\\" required> </div> <div ng-if=\\\"$ctrl.model.poiType != 'Voter Id'\\\"> <input trim type=text id=poaNumber name=poaNumber trim auto-caps class=form-control ng-model=$ctrl.model.poaNumber alpha-num=10 ng-pattern=/^([a-zA-Z]){3}([0-9]){7}$/ ng-maxlength=10 placeholder=\\\"Enter Voter Id\\\" aria-describedby=poaNumberErrMsg aria-invalid=\\\"{{step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}}\\\" required> </div> </div> <div id=poaNumberErrMsg ng-class=\\\"{'has-error': step11Form.poaNumber.$invalid}\\\"> <validation-msg ng-if=\\\"step11Form.poaNumber.$error.required && (step11Form.poaNumber.$touched || $ctrl.model.submitted)\\\"> Please enter your Voter Id. </validation-msg> <validation-msg ng-if=\\\"step11Form.poaNumber.$error.pattern && step11Form.poaNumber.$touched\\\"> Please enter valid Voter Id. </validation-msg> </div> </div> </div> </div> <div id=DrivingLicense ng-if=\\\"$ctrl.model.poaType == 'Driving License'\\\"> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=poaNumber>POA Number</label> <div ng-class=\\\"{'has-error': step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}\\\"> <div ng-if=\\\"$ctrl.model.poiType == 'Driving License'\\\"> <input trim type=text id=poaNumber name=poaNumber ng-init=\\\"$ctrl.model.poaNumber=$ctrl.model.poiNumber\\\" trim auto-caps class=form-control ng-model=$ctrl.model.poaNumber ng-pattern=\\\"/^(([A-Z]{2}[0-9]{2})( )|([A-Z]{2}-[0-9]{2}))((19|20)[0-9][0-9])[0-9]{7}$/\\\" ng-maxlength=16 placeholder=\\\"Enter Driving License Number\\\" aria-describedby=poaNumberErrMsg aria-invalid=\\\"{{step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}}\\\" required> </div> <div ng-if=\\\"$ctrl.model.poiType != 'Driving License'\\\"> <input trim type=text id=poaNumber name=poaNumber trim auto-caps class=form-control ng-model=$ctrl.model.poaNumber ng-pattern=\\\"/^(([A-Z]{2}[0-9]{2})( )|([A-Z]{2}-[0-9]{2}))((19|20)[0-9][0-9])[0-9]{7}$/\\\" ng-maxlength=16 placeholder=\\\"Enter Driving License Number\\\" aria-describedby=poaNumberErrMsg aria-invalid=\\\"{{step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}}\\\" required> </div> </div> <div id=poaNumberErrMsg ng-class=\\\"{'has-error': step11Form.poaNumber.$invalid}\\\"> <validation-msg ng-if=\\\"step11Form.poaNumber.$error.required && (step11Form.poaNumber.$touched || $ctrl.model.submitted)\\\"> Please enter your Driving License Number. </validation-msg> <validation-msg ng-if=\\\"step11Form.poaNumber.$error.pattern && step11Form.poaNumber.$touched\\\"> Please enter valid Driving License Number. </validation-msg> </div> </div> </div> </div> <div id=AadharCard ng-if=\\\"$ctrl.model.poaType == 'Aadhar Card' && $ctrl.ekyc !='Yes'\\\"> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=poaNumber>POA Number</label> <div ng-class=\\\"{'has-error': step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}\\\"> <div ng-if=\\\"$ctrl.model.poiType == 'Aadhar Card'\\\"> <input trim type=text id=poaNumber name=poaNumber ng-init=\\\"$ctrl.model.poaNumber=$ctrl.model.poiNumber\\\" trim auto-caps class=form-control ng-model=$ctrl.model.poaNumber only-number=4 ng-pattern=/^[0-9]{4}$/ ng-maxlength=16 placeholder=\\\"Enter Last 4 Digit of Aadhar\\\" aria-describedby=poaNumberErrMsg aria-invalid=\\\"{{step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}}\\\" required> </div> <div ng-if=\\\"$ctrl.model.poiType != 'Aadhar Card'\\\"> <input trim type=text id=poaNumber name=poaNumber trim auto-caps class=form-control ng-model=$ctrl.model.poaNumber only-number=4 ng-pattern=/^[0-9]{4}$/ ng-maxlength=16 placeholder=\\\"Enter Last 4 Digit of Aadhar\\\" aria-describedby=poaNumberErrMsg aria-invalid=\\\"{{step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}}\\\" required> </div> </div> <div id=poaNumberErrMsg ng-class=\\\"{'has-error': step11Form.poaNumber.$invalid}\\\"> <validation-msg ng-if=\\\"step11Form.poaNumber.$error.required && (step11Form.poaNumber.$touched || $ctrl.model.submitted)\\\"> Please enter your Last 4 Digit of Aadhar. </validation-msg> <validation-msg ng-if=\\\"step11Form.poaNumber.$error.pattern && step11Form.poaNumber.$touched\\\"> Please enter valid Last 4 Digit of Aadhar. </validation-msg> </div> </div> </div> </div> <div id=AadharCard ng-if=\\\"$ctrl.ekyc=='Yes'\\\"> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=poaNumber>POA Number</label> <div ng-class=\\\"{'has-error': step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}\\\"> <div ng-if=\\\"$ctrl.ekyc=='Yes'\\\"> <input trim type=text id=poaNumber name=poaNumber ng-init=\\\"$ctrl.model.poaNumber=$ctrl.model.poiNumber\\\" trim auto-caps class=form-control ng-model=$ctrl.model.poaNumber only-number=4 ng-pattern=/^[0-9]{4}$/ ng-maxlength=16 placeholder=\\\"Enter Last 4 Digit of Aadhar\\\" aria-describedby=poaNumberErrMsg aria-invalid=\\\"{{step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}}\\\" ng-value=$ctrl.redactedAadhaar required disabled=disabled> </div> <div ng-if=\\\"$ctrl.ekyc!='Yes'\\\"> <input trim type=text id=poaNumber name=poaNumber trim auto-caps class=form-control ng-model=$ctrl.model.poaNumber only-number=4 ng-pattern=/^[0-9]{4}$/ ng-maxlength=16 placeholder=\\\"Enter Last 4 Digit of Aadhar\\\" aria-describedby=poaNumberErrMsg aria-invalid=\\\"{{step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}}\\\" required> </div> </div> </div> </div> </div> <div id=NREGAJobCard ng-if=\\\"$ctrl.model.poaType == 'NREGA Job Card'\\\"> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=poaNumber>POA Number</label> <div ng-class=\\\"{'has-error': step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}\\\"> <div ng-if=\\\"$ctrl.model.poiType == 'NREGA Job Card'\\\"> <input trim type=text id=poaNumber name=poaNumber ng-init=\\\"$ctrl.model.poaNumber=$ctrl.model.poiNumber\\\" trim auto-caps class=form-control ng-model=$ctrl.model.poaNumber placeholder=\\\"Enter NREGA Job Card Number\\\" aria-describedby=poaNumberErrMsg aria-invalid=\\\"{{step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}}\\\" required> </div> <div ng-if=\\\"$ctrl.model.poiType != 'NREGA Job Card'\\\"> <input trim type=text id=poaNumber name=poaNumber trim auto-caps class=form-control ng-model=$ctrl.model.poaNumber placeholder=\\\"Enter NREGA Job Card Number\\\" aria-describedby=poaNumberErrMsg aria-invalid=\\\"{{step11Form.poaNumber.$invalid && ($ctrl.model.submitted || step11Form.poaNumber.$touched)}}\\\" required> </div> </div> <div id=poaNumberErrMsg ng-class=\\\"{'has-error': step11Form.poaNumber.$invalid}\\\"> <validation-msg ng-if=\\\"step11Form.poaNumber.$error.required && (step11Form.poaNumber.$touched || $ctrl.model.submitted)\\\"> Please enter your NREGA Job Card Number. </validation-msg> <validation-msg ng-if=\\\"step11Form.poaNumber.$error.pattern && step11Form.poaNumber.$touched\\\"> Please enter valid NREGA Job Card Number. </validation-msg> </div> </div> </div> </div> </div> <hr class=line-spacer> </div> <div> <div ng-if=!$ctrl.hubSalaryFlag> <div class=row> <div class=\\\"col-md-3 col-lg-3 col-sm-6 col-xs-12\\\"> <label> <input type=radio ng-model=$ctrl.selectedOption ng-value=\\\"'SAA'\\\" ng-change=$ctrl.checkStuff($ctrl.selectedOption) ng-disabled=$ctrl.hidesecondoption> Share using Account Aggregator <br> <font size=1> (By choosing this option you do not need to upload any income document)</font> </label> </div> <div class=\\\"col-md-3 col-lg-3 col-sm-6 col-xs-12\\\"> <label> <input type=radio ng-model=$ctrl.selectedOption ng-value=\\\"'MDU'\\\" ng-change=$ctrl.checkStuff($ctrl.selectedOption) ng-disabled=$ctrl.hidesecondoption> Manual Document Upload </label> </div> </div> </div> <div class=row ng-if=$ctrl.reloadFileUpload style=margin-top:20px> <div class=\\\"col-md-3 col-lg-3 col-sm-6 col-xs-12\\\" ng-class=\\\"{'line-spacer-xs': !$first}\\\" ng-repeat=\\\"file in $ctrl.model.incomeDocs\\\"> <file-upload index=$index submitted=$ctrl.model.submitted file-id=\\\"{{'file'+$index}}\\\" file=file on-remove=$ctrl.removeDoc(index) ng-class=\\\"{ 'disabled': $ctrl.hidesecondoption }\\\" on-validation-error=$ctrl.handleValidationError(index)></file-upload> </div> <div ng-if=\\\"$ctrl.model.incomeDocs[$ctrl.model.incomeDocs.length-1].document && $ctrl.model.incomeDocs.length < $ctrl.maxDocs\\\" class=\\\"col-md-3 col-lg-3 col-sm-6 col-xs-12\\\"> <div class=upload-add-container> <div class=inner-add-section> <div class=button-label ng-click=$ctrl.addIncomeDoc()> <span class=\\\"icon icon-add add-remove-toogle__icon\\\"></span> <span class=add-remove-toogle__linkText>Add another document</span> </div> </div> </div> </div> </div> </div> <br> <div ng-if=!$ctrl.isStaffJourney> <h2 class=\\\"h5 no-margin-t\\\"> <ul class=note> <li> Please upload latest salary slip </li> <li> If you are employed in a private company, please also upload bank statement having latest salary credit </li> </ul> </h2> <h2 class=h5> <b>Note:</b> </h2> <ul class=note> <li> The supported document formats are .png, .jpg, .jpeg, .pdf and each document should not be more than 3MB in size. </li> <li> Do remember to upload both front and back of documents. </li> </ul> </div> <div class=row ng-if=$ctrl.isStaffJourney> <div class=\\\"col-md-9 col-sm-12 col-xs-12\\\"> <h2 class=\\\"h5 no-margin-t\\\">For income documents, you can upload any of the following</h2> <ul> <li> Salaried: <br> <br> <ul> <li> Form 16 </li> <li>Salary Slip / Salary certificate / Bank statement showing salary credit</li> <li>Appointment letter</li> <li>Latest Personal ITR</li> </ul> </li> <li> Self Employed - Latest personal income tax returns </li> </ul> </div> <div class=\\\"col-md-9 col-sm-12 col-xs-12\\\"> <h2 class=h5> <b>Note:</b> </h2> <ul class=note> <li> The supported document formats are .png, .jpg, .jpeg, .pdf and each document should not be more than 3MB in size </li> <li> A maximum of 10 documents can be uploaded. </li> <li> Do remember to upload both front and back of documents </li> <li>Please keep all the documents ready at the time of meeting bank representative</li> </ul> </div> </div> <div ng-if=false> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <div class=table-container> <table> <thead> <tr> <th>Month</th> <th ng-repeat=\\\"data in $ctrl.salary\\\">{{ data.month }}</th> <th>Average</th> <th>Annual</th> <th>Final</th> <th>Variance</th> </tr> </thead> <tbody> <tr> <td>Salary</td> <td ng-repeat=\\\"data in $ctrl.salary\\\">{{ data.salary }}</td> <td>{{$ctrl.averageSalary}}</td> <td>{{$ctrl.annualSalary | number : 2}}</td> <td><input type=number ng-model=$ctrl.finalAnnualIncome ng-keyup=$ctrl.update($ctrl.finalAnnualIncome,$ctrl.annualSalary) placeholder={{$ctrl.annualSalary|number:2}}> <div ng-class=\\\"'has-error'\\\"> <validation-msg ng-if=$ctrl.varianceValidation> Please Enter Final in between 0 to 10 Variance. </validation-msg> </div> </td> <td ng-disabled=true>{{$ctrl.variance?$ctrl.variance:00 | number : 2}}%</td> </tr> </tbody> </table> </div> </div> </div> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\" ng-class=\\\"{'has-error': (($ctrl.incomeDocReq || $ctrl.validationError.noGroup ) && $ctrl.model.submitted) \\r\\n                    || $ctrl.validationError.minSize || $ctrl.validationError.maxSize || $ctrl.validationError.format  \\r\\n                    || $ctrl.nameMissmatch || !$ctrl.isSalrayAndBank}\\\"> <validation-msg ng-if=\\\"($ctrl.incomeDocReq && $ctrl.model.submitted && !$ctrl.hubSalaryFlag && !$ctrl.noDoccumentUploadHPR)\\\"> <span class=font-14> Please upload your documents to continue with your application. </span> </validation-msg> <validation-msg ng-if=\\\"$ctrl.validationError.maxSize && !$ctrl.incomeDocReq\\\"> <span class=font-14> Please upload maximum 3 MB of document to continue with your application.</span> </validation-msg> <validation-msg ng-if=\\\"$ctrl.validationError.format && !$ctrl.incomeDocReq\\\"> <span class=font-14> Please upload jpg/jpeg/png/pdf type of document to continue with your application.</span> </validation-msg> <validation-msg ng-if=\\\"($ctrl.validationError.noGroup && $ctrl.model.submitted) && !$ctrl.incomeDocReq\\\"> <span class=font-14> Please select document group to continue with your application.</span> </validation-msg> <validation-msg ng-if=\\\"(!$ctrl.isSalrayAndBank ) && $ctrl.model.submitted && !$ctrl.incomeDocReq && !$ctrl.noDoccumentUploadHPR\\\"> <span class=font-14> Please upload Bank Statement/Salary Slip.</span> </validation-msg> </div> </div> <step-footer show-verify=$ctrl.verifyAAFlag verify-callback=$ctrl.verifyAA() show-continue=$ctrl.showContinue continue-disabled=!$ctrl.disabledContinue continue-callback=$ctrl.next() show-back=true back-callback=$ctrl.goback() show-save=true save-callback=$ctrl.save()> </step-footer> </form> </div> </div> <loading ng-show=$ctrl.showLoader></loading> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/step11/step11.component.html\n// module id = ./src/app/components/journey/step11/step11.component.html\n// module chunks = 2","(function () {\r\n    'use strict';\r\n    var angular = require('angular');\r\n    require('./step11.component.scss');\r\n    require('./step11.component.service');\r\n    require(\"./file-upload/file-upload.component\");\r\n    require('./openBankingModal/openBankingModal.modal.component');// line added for OB @akshaypise march24\r\n\r\n    var step11Comp = angular.module('journey.module').component('step11', {\r\n        template: require('./step11.component.html'),\r\n        controller: ['$rootScope', '$scope', '$uibModal', '$anchorScroll', '$state', '$filter', '$q', 'step11Service', 'appState', 'journeyService', 'analyticService', '$timeout', function ($rootScope, $scope, $uibModal, $anchorScroll, $state, $filter, $q, step11Service, appState, journeyService, analyticService, $timeout) {\r\n            var vm = this;\r\n            vm.securityParams = {   //add this varible as global @akshaypise OpenBanking\r\n                robocheck: vm.robocheck ? vm.robocheck : ''\r\n            };\r\n            vm.$onInit = function () {\r\n                $rootScope.$broadcast('hide-step-header', {\r\n                    hideHeader: false\r\n                });\r\n                $rootScope.showSelectedCard = true;\r\n                $rootScope.showARN = true;\r\n                $anchorScroll();\r\n                $rootScope.stepsHeader.currentStep = 4;\r\n                vm.incomeDocReq = false;\r\n                vm.incomeDocOBReq = true;\r\n                vm.virusCheck = false;\r\n                vm.isStaffJourney = journeyService.isStaffJourney();\r\n                //console.log(\"isStaffJourney from contact details =======\", vm.isStaffJourney);\r\n                vm.selectedCard = journeyService.getSelectedCard();\r\n                vm.ekycFlag = journeyService.getDataFromStorage().primaryApplicant.ekycFlag;\r\n                vm.disabledContinue = false;\r\n                vm.noDoccumentUpload = false;\r\n                vm.noDoccumentUploadHPR = false;\r\n                vm.reloadFileUpload = false;\r\n                vm.hubSalaryFlag = appState.getHubSalaryFlag() === 'success'; //added @akshaypise sep2024 CSS-1\r\n                // vm.hubSalaryFlag = true;\r\n                console.log( \"hubSalaryFlag11\",vm.hubSalaryFlag);\r\n\r\n                if (vm.hubSalaryFlag) {\r\n                    vm.reloadFileUpload = true;\r\n                    // vm.checkStuff('MDU');\r\n                    // vm.selectedOption = 'MDU';\r\n                    // vm.hidesecondoption = true;\r\n                    vm.disabledContinue = true;\r\n                    vm.noDoccumentUpload = true;\r\n                }\r\n                // console.log(\"vm.ekycFlag =======\", vm.ekycFlag);\r\n                // vm.maxDocs = vm.isStaffJourney ? 6 : 2;\r\n                vm.maxDocs = 10;\r\n                vm.validationError = {};\r\n                vm.model = {};\r\n                //start added for OB @akshaypise march24.\r\n                vm.verifyAAFlag = false;\r\n                vm.showLoader = false;\r\n                vm.showContinue = true;\r\n\r\n                // vm.validation_BankSte_SalarySlip = false;\r\n                vm.nameMissmatch = false;\r\n                vm.hidesecondoption;    //hide the second radio button @akshaypise OpenBanking\r\n                // vm.averageSalary = 0;\r\n                vm.annualSalary;\r\n                // vm.variance;\r\n                vm.salary = [];\r\n                vm.tableshow = false;\r\n                vm.hideOBCheckbox = false;\r\n                vm.incomeDocOBReq = true;\r\n                vm.selectedFileforMDU = null;\r\n                vm.model.successMsg = null;\r\n                vm.OBCheckbox = false;\r\n                //end added for OB @akshaypise march24.\r\n                step11Service.getUserDetails().then(function (result) {\r\n                    vm.model = result;\r\n                    vm.model.incomeDoc = vm.model.incomeDoc ? vm.model.incomeDoc : false;\r\n                });\r\n                vm.model.errorMsg = null;\r\n                //arun\r\n                vm.PerfiosSkip = journeyService.getPerfiosSkip();\r\n                var contactData = appState.getContactDetails();\r\n                vm.ekyc = contactData.ekyc;\r\n                // vm.ekyc = \"test\";\r\n                // console.log(\"Ekyc from contact details =======\", vm.ekyc);\r\n                vm.redactedAadhaar = journeyService.getDataFromStorage().primaryApplicant.redactedAadhaar;//can be put in if condition of ekyc yes/no\r\n                // console.log(\"Redacted aadhaar =======\", vm.redactedAadhaar);\r\n                vm.poiType = ['Passport', 'Voter Id', 'Driving License', 'Aadhar Card', 'NREGA Job Card'];\r\n                vm.poaType = ['Passport', 'Voter Id', 'Driving License', 'Aadhar Card', 'NREGA Job Card'];\r\n                // alert('vm.PerfiosSkip==='+vm.PerfiosSkip);\r\n                //alert('skipPerfios======='+vm.model.skipPerfios);\r\n                $rootScope.dipARN = journeyService.getDataFromStorage().primaryApplicant.dipDetails.dipArn;\r\n                analyticService.pageList.documentUpload.internal_reference_id = journeyService.getDataFromStorageContact().adobeId;\r\n                analyticService.trackPageLoad(analyticService.pageList.documentUpload);\r\n            };\r\n\r\n            // $rootScope.$on(\"on-document-selected\", function () {\r\n            //     if (vm.model.incomeDocs[0].isEmpty()) {\r\n            //         vm.incomeDocReq = true;\r\n            //     } else {\r\n            //         vm.incomeDocReq = false;\r\n            //     }\r\n            // });\r\n\r\n            vm.goback = function () {\r\n                // saveFormDetailsInStorage();\r\n                if (step11Service.supplementaryCardApplied) {\r\n                    $state.go('app.journey.supplementary', { 'cardKey': vm.selectedCard.key });\r\n                } else if (step11Service.balanceTransferTaken) {\r\n                    $state.go('app.journey.balance-transfer', { 'cardKey': vm.selectedCard.key });\r\n                } else {\r\n                    $state.go('app.journey.card-DIP', { 'cardKey': vm.selectedCard.key });\r\n                }\r\n                analyticService.buttonList.buttonClick.event_content = \"back\";\r\n                analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n            };\r\n\r\n            var saveFormDetailsInStorage = function () {\r\n                var formDetails = {\r\n                    \"primaryApplicant\": {\r\n                        \"documents\": prepareData()\r\n                    }\r\n                };\r\n                step11Service.setDataInStorage(formDetails);\r\n            };\r\n\r\n            vm.addIncomeDoc = function () {\r\n                // vm.incomeDoc++;\r\n                if (vm.model.incomeDocs.length < vm.maxDocs) {\r\n                    vm.model.incomeDocs.push(new step11Service.IncomeDoc());\r\n                }\r\n            };\r\n\r\n            vm.removeDoc = function (index) {\r\n                vm.model.incomeDocs.splice(index, 1);\r\n                if (vm.model.incomeDocs.length === 0) {\r\n                    vm.addIncomeDoc();\r\n                }\r\n                // angular.forEach(vm.model.incomeDocs, function (doc, index) {\r\n                //     if (!doc.isEmpty()) {\r\n                //         doc.documentName = \"IncomeDocument\" + (index + 1);\r\n                //     }\r\n                // });\r\n            };\r\n\r\n            vm.handleValidationError = function (index) {\r\n                var errIndex = 0;\r\n                for (var i = 0; i < vm.model.incomeDocs.length; i++) {\r\n                    if (i !== index || index === undefined) {\r\n                        vm.model.incomeDocs[i].resetValidationError();\r\n                    }\r\n                    if (vm.model.incomeDocs[i].hasValidationError()) {\r\n                        // vm.validationError = vm.model.incomeDocs[i].validationError;\r\n                        errIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                vm.validationError = vm.model.incomeDocs[errIndex].validationError;\r\n            };\r\n\r\n            var prepareData = function () {\r\n                var incomeDocs = angular.copy(vm.model.incomeDocs);\r\n                incomeDocs = $filter('filter')(incomeDocs, function (doc) {\r\n                    return !doc.isEmpty();\r\n                });\r\n                var documents = null;\r\n                if (incomeDocs.length > 0) {\r\n                    documents = incomeDocs.map(function (doc) {\r\n                        if (doc.document != \"\") {\r\n                            var arr = doc.document.split(',');\r\n                            if (arr.length > 1) {\r\n                                doc.document = arr[1];\r\n                            }\r\n                        }\r\n                        return {\r\n                            document: doc.document, documentName: doc.documentName, documentGroup: doc.documentGroup, documentType: doc.documentType,\r\n                            documentPassword: (doc.docPassword) ? doc.docPassword : null\r\n                        };\r\n                    });\r\n                    renameDocuments(documents);\r\n                }\r\n                return documents;\r\n            };\r\n\r\n            var renameDocuments = function (documentArray) {\r\n                var docIndexArr = documentArray.map(function (doc, index) {\r\n                    return angular.merge({}, doc, { index: index })\r\n                });\r\n\r\n                step11Service.getDocumentGroups().forEach(function (group) {\r\n                    var tempArr = docIndexArr.filter(function (x) { return x.documentGroup === group });\r\n                    if (tempArr.length > 0) {\r\n                        tempArr.forEach(function (z, i) {\r\n                            z.documentName = step11Service.documentName[z.documentGroup] + '-' + (i + 1);\r\n                            var originalIndex = z.index;\r\n                            delete z.index;\r\n                            documentArray[originalIndex] = z;\r\n                        })\r\n                    }\r\n                });\r\n            };\r\n\r\n            // vm.update = function (finalChangeSalary, AnnualSalary) { //funtion added for OB akshaypise April2024\r\n            //     vm.variance = ((finalChangeSalary - AnnualSalary) / AnnualSalary) * 100;\r\n            //     vm.varianceValidation = (vm.variance >= 11 || vm.variance <= 0);\r\n\r\n            //     if (vm.variance === 0 || vm.variance === -100) {\r\n            //         vm.showContinue = true;\r\n            //         vm.varianceValidation = false;\r\n            //         vm.variance = 0;\r\n            //     }\r\n            //     return true;\r\n            // }\r\n\r\n            vm.checkStuff = function (value) {  //funtion added for OB akshaypise April2024 \r\n                //console.log(\"valueOBBBB--->\", value)\r\n                vm.radiBouttonValue = value;\r\n                value === \"MDU\" ? ( vm.reloadFileUpload = true, appState.setHubSalaryFlag('fail')) : ''\r\n                console.log(\"value-->\",value);\r\n                vm.uploadBankStatementFlag = value === \"SAA\" ? false : true;\r\n\r\n                vm.disabledContinue = value === \"SAA\" ? false : true;\r\n\r\n                value === \"SAA\" ? vm.openBankingModal() : console.log(\"vm.selectedFileforMDU\", vm.selectedFileforMDU);\r\n\r\n                //console.log(\"vm.disabledContinue\", vm.disabledContinue);\r\n                //console.log(\"vm.uploadBankStatementFlag\", vm.uploadBankStatementFlag);\r\n                console.log(value);\r\n            };\r\n            vm.openBankingModal = function () {//funtion added for OB akshaypise April2024\r\n\r\n                vm.reloadFileUpload = false;\r\n\r\n                //console.log(\"vm.OBCheckbox\", vm.OBCheckbox);\r\n                var modalConsentInstance = $uibModal.open({\r\n                    backdrop: 'static',\r\n                    keyboard: false,\r\n                    modalFade: true,\r\n                    component: \"openBankingModal\",\r\n                    windowClass: 'card-detail-modal'\r\n                });\r\n\r\n                modalConsentInstance.result.then(function (isSelected) {\r\n                    if (isSelected) {\r\n                        //console.log(\"vm.OBCheckbox\", vm.OBCheckbox);\r\n                        vm.getOpenBankingURLlink();\r\n                        // step11Service.getOpenBankingURLlink(vm.securityParams).then(function (result) {\r\n                        //     console.log(\"result from getOpenBankingURLlink back==\", JSON.stringify(result));\r\n                        //     if (result.responseCode == 200) {\r\n                        //         console.log(\"result.redirectUrl responseCode 200\", result.redirectUrl);\r\n                        //         var url = result.redirectUrl;\r\n                        //         vm.disabledContinue = false;\r\n                        //         vm.verifyAAFlag = true;\r\n                        //         vm.showContinue = false;\r\n                        //         function openCenteredWindow(url, width, height) {\r\n                        //             const screenWidth = window.screen.width;\r\n                        //             const screenHeight = window.screen.height;\r\n                        //             const left = (screenWidth - width) / 2;\r\n                        //             const top = (screenHeight - height) / 2;\r\n                        //             window.open(url, \"_blank\", `width=${width},height=${height},left=${left},top=${top}`);\r\n                        //         }\r\n                        //         openCenteredWindow(url, 1024, 786);\r\n                        //         vm.hidesecondoption = true;\r\n                        //     }\r\n                        //     else {\r\n                        //         vm.checkStuff('MDU');\r\n                        //         vm.selectedOption = 'MDU';\r\n                        //         vm.hidesecondoption = false;\r\n                        //         // vm.model.errorMsg=\"Sorry! Some internal error has occured\";\r\n                        //         vm.model.errorMsg = result.responseMessage;\r\n                        //         vm.model.errorMsg = (result.success == false) ? result.message : result.responseMessage;\r\n                        //         $timeout(function () {\r\n                        //             vm.model.errorMsg = false;\r\n                        //         }, 10000);\r\n                        //     }\r\n                        // })\r\n\r\n                        //new\r\n                        // step11Service.getOpenBankingURLlink(vm.securityParams).then(function (result) {\r\n                        //     console.log(\"result from getOpenBankingURLlink back==\", JSON.stringify(result));\r\n                        //     if (result.responseCode == 200) {\r\n                        //         console.log(\"result.redirectUrl responseCode 200\", result.redirectUrl);\r\n                        //         var url = result.redirectUrl;\r\n                        //         vm.disabledContinue = false;\r\n                        //         vm.verifyAAFlag = true;\r\n                        //         vm.showContinue = false;\r\n                        //         function openCenteredWindow(url, width, height) {\r\n                        //             const screenWidth = window.screen.width;\r\n                        //             const screenHeight = window.screen.height;\r\n                        //             const left = (screenWidth - width) / 2;\r\n                        //             const top = (screenHeight - height) / 2;\r\n                        //             window.open(url, \"_blank\", `width=${width},height=${height},left=${left},top=${top}`);\r\n                        //         }\r\n                        //         openCenteredWindow(url, 1024, 786);\r\n                        //         vm.hidesecondoption = true;\r\n                        //     }\r\n                        //     else {\r\n                        //         console.log(\"result.other responseCode found\");\r\n                        //         // vm.checkStuff('MDU'); // remove for new changes\r\n                        //         // vm.selectedOption = 'MDU'; // remove for new changes\r\n                        //         vm.OBCheckbox = false;\r\n                        //         vm.hidesecondoption = false;\r\n                        //         // vm.model.errorMsg=\"Sorry! Some internal error has occured\";\r\n                        //         // vm.model.errorMsg=result.responseMessage;\r\n                        //         vm.model.errorMsg = (result.success == false) ? result.message : \"Sorry! Seems Account Aggregator Service is Unavailable. Please try after sometime.\";\r\n                        //         $timeout(function () {\r\n                        //             vm.model.errorMsg = false;\r\n                        //         }, 10000);\r\n                        //     }\r\n                        // });\r\n\r\n                    }\r\n                }, function (isDeSelected) {\r\n                    // vm.hideDocUpload = false;\r\n                    vm.OBCheckbox = false;\r\n                    vm.selectedOption = '';\r\n                    vm.disabledContinue = false;\r\n                    //console.log(\"vm.OBCheckbox\", vm.OBCheckbox);\r\n                });\r\n            };\r\n\r\n            vm.getOpenBankingURLlink = function () {\r\n                step11Service.getOpenBankingURLlink(vm.securityParams).then(function (result) {\r\n                    console.log(\"result from getOpenBankingURLlink back==\", (result));\r\n\r\n                    if (result.responseCode == 200) {\r\n                        // vm.hideDocUpload = true;\r\n\r\n                        //console.log(\"result.redirectUrl responseCode 200\", result.redirectUrl);\r\n                        var url = result.redirectUrl;\r\n                        vm.disabledContinue = false;\r\n                        vm.verifyAAFlag = true;\r\n                        vm.showContinue = false;\r\n\r\n                        //console.log(vm.model.incomeDocs);\r\n\r\n                        function removeDocuments(incomeDocs) {\r\n                            var result = []; // Array to hold the remaining documents\r\n                            for (var i = 0; i < incomeDocs.length; i++) {\r\n                                // Check if the documentGroup is neither \"Bank Statement\" nor \"Salary Slip\"\r\n                                if (incomeDocs[i].documentGroup !== \"Bank Statement\" && incomeDocs[i].documentGroup !== \"Salary Slip\") {\r\n                                    result.push(incomeDocs[i]); // Add to result if it should not be removed\r\n                                }\r\n                            }\r\n\r\n                            return result; // Return the new array\r\n                        }\r\n                        vm.model.incomeDocs = removeDocuments(vm.model.incomeDocs);\r\n\r\n                        //console.log(vm.model.incomeDocs);\r\n\r\n                        function openCenteredWindow(url, width, height) {\r\n                            const screenWidth = window.screen.width;\r\n                            const screenHeight = window.screen.height;\r\n                            const left = (screenWidth - width) / 2;\r\n                            const top = (screenHeight - height) / 2;\r\n                            window.open(url, \"_blank\", `width=${width},height=${height},left=${left},top=${top}`);\r\n                        }\r\n                        openCenteredWindow(url, 1024, 786);\r\n                        vm.hidesecondoption = true;\r\n                    }\r\n                    else {\r\n\r\n                        vm.checkStuff('MDU');\r\n                        vm.selectedOption = 'MDU';\r\n                        vm.hidesecondoption = false;\r\n                        // vm.model.errorMsg=\"Sorry! Some internal error has occured\";\r\n                        vm.model.errorMsg = result.responseMessage;\r\n                        vm.model.errorMsg = (result.success == false) ? result.message : result.responseMessage;\r\n                        $timeout(function () {\r\n                            vm.model.errorMsg = false;\r\n                        }, 10000);\r\n                    }\r\n                })\r\n            }\r\n            vm.verifyAA = function () { //funtion added for OB akshaypise April2024\r\n                vm.showLoader = true;\r\n                $rootScope.$broadcast(\"trigger-verification-loader\", {\r\n                    showLoader: true,\r\n                    showCard: false,\r\n                    loaderType: \"ANUMATI\",\r\n                });\r\n\r\n                $timeout(function () {\r\n\r\n                    var reqData = {\r\n                        \"reqCounter\": 1\r\n                    }\r\n                    // step11Service.sendConsentData(reqData, vm.securityParams).then(function (result) {\r\n                    \r\n                    //     console.log('Response code ===', result);\r\n                    //     console.log(\"stop3\")\r\n                    //     // if(!result.success){\r\n                    //     // 200- consent Ready ,and salary details ready   \r\n                    //     // 201- consent is rejected\r\n                    //     // 202- consent not received\r\n                    //     // 203- report is not ready    --Retry\r\n                    //     // 204- report status : error i.e datafetch ,data processing error....stop timer\r\n                    //     // 205- TXNID is not present in db\r\n                    //     // }\r\n                    //     vm.showLoader = false;\r\n                    //     vm.showContinue = true;\r\n                    //     vm.verifyAAFlag = false;\r\n                    //     vm.disabledContinue = true;\r\n                    //     if (result.responseCode == 200) {\r\n                    //         vm.model.successMsg = result.fetchReportDetailsResponse.responseMessage;\r\n                    //         vm.salary = result.fetchReportDetailsResponse.salaryDetails;\r\n                    //         vm.averageSalary = result.fetchReportDetailsResponse.averageSalary;\r\n                    //         vm.annualSalary = result.fetchReportDetailsResponse.annualSalary;\r\n                    //         vm.tableshow = true;\r\n                    //         $timeout(function () {\r\n                    //             vm.model.successMsg = false;\r\n                    //         }, 7000);\r\n                    //     } else {\r\n                    //         vm.checkStuff('MDU');\r\n                    //         vm.selectedOption = 'MDU';\r\n                    //         vm.hidesecondoption = false;\r\n\r\n                    //         if (result.responseCode == 204) {\r\n                    //             // Specific actions for responseCode 204\r\n                    //             vm.model.errorMsg = result.fetchReportDetailsResponse.responseMessage;\r\n                    //         } else {\r\n                    //             // Actions for other responseCodes\r\n                    //             vm.model.errorMsg = (result.responseCode === 201 || result.responseCode === 202) ?\r\n                    //                 \"It seems you have not Approved the consent on Anumati page. Please proceed with Manual Document Upload.\" :\r\n                    //                 (result.responseCode === 203) ? result.fetchReportDetailsResponse.responseMessage : result.message;\r\n                    //         }\r\n                    //         $timeout(function () {\r\n                    //             vm.model.errorMsg = false;\r\n                    //         }, 10000);\r\n                    //     }\r\n                    // });\r\n\r\n\r\n                    //new\r\n                    step11Service.sendConsentData(reqData, vm.securityParams).then(function (result) {\r\n                       \r\n                        console.log('Response code ===', result);\r\n                        vm.showLoader = false;\r\n                        vm.showContinue = true;\r\n                        vm.verifyAAFlag = false;\r\n                        vm.disabledContinue = true;\r\n                        if (result.responseCode == 200) {\r\n                            //console.log(\"result\", result);\r\n                            if (result.aaRejectReason || result.fetchReportDetailsResponse.annualSalary == 0) {\r\n                                // vm.model.successMsg = \"not fetach deatils, please upload salary slip/bank statement\"\r\n                                vm.model.successMsg = \"It seems your Salary Details could not be fetched. Please upload Salary Slip or Bank Statement.\"\r\n                                vm.nameMissmatch = true;\r\n                                vm.checkStuff('MDU');\r\n                                vm.selectedOption = 'MDU';\r\n                                // vm.hideDocUpload = false; \r\n                            } else {\r\n                                // vm.model.successMsg = result.fetchReportDetailsResponse.responseMessage;\r\n                                vm.model.successMsg = \"Report is COMPLETED. please click on continue button for next process.\";\r\n                                appState.setHubSalaryFlag('success');\r\n                                // vm.checkStuff('SAA');\r\n                                vm.selectedOption = 'SAA';\r\n                                vm.hideDocUpload = true;\r\n                                vm.reloadFileUpload = true;\r\n                                vm.noDoccumentUpload = true;\r\n                            }\r\n                            // vm.hideOBCheckbox = true;\r\n                            $timeout(function () {\r\n                                vm.model.successMsg = false;\r\n                            }, 15000);\r\n                            vm.annualSalary = result.fetchReportDetailsResponse.annualSalary;\r\n\r\n                        } else if (result.responseCode == 205 || result.responseCode == 206) {\r\n                            $state.go('app.card-declined', { 'cardKey': vm.selectedCard.key });\r\n                            //console.log(\"result.responseCode---->\", result.responseCode);\r\n                            // result.responseCode == 205 ? appState.setOBPanNameFlag(true) : appState.setOBPanNameFlag(false);\r\n                           \r\n                            // (result.responseCode == 205) ? appState.setPanMissMatchFlag(true) : appState.setPanMissMatchFlag(false);\r\n                            // (result.responseCode == 206) ? appState.setPanNameMissMatchFlag(true) : appState.setPanNameMissMatchFlag(false);\r\n                            // $state.go('app.card-declinedOB', { 'cardKey': vm.selectedCard.key });\r\n                            // } else if(result.responseCode == 207){\r\n                        }else if (result.responseCode == 204) {\r\n                            vm.checkStuff('MDU');\r\n                            vm.selectedOption = 'MDU';\r\n                            vm.model.errorMsg = result.fetchReportDetailsResponse.responseMessage;\r\n                            //console.log(\"result.responseCode 204---->\", result.responseCode);\r\n                        } else {\r\n                            // Actions for other responseCodes\r\n                            vm.OBCheckbox = false;\r\n                            // vm.checkStuff('MDU');\r\n                            // vm.selectedOption = 'MDU';\r\n                            // vm.hidesecondoption = false;\r\n                            if (result.responseCode === 201 || result.responseCode === 202 || result.responseCode === 203) {\r\n                                vm.selectedOption = ' ';\r\n                                vm.hidesecondoption = false;\r\n                                vm.disabledContinue = false;\r\n                            }\r\n                            vm.model.errorMsg = (result.responseCode === 201 || result.responseCode === 202)\r\n                                    ? \"It seems you have not Approved the consent on Anumati page.\"\r\n                                    : result.responseCode === 203 ? result.fetchReportDetailsResponse.responseMessage : result.message;\r\n                            $timeout(function () {\r\n                                vm.model.errorMsg = false;\r\n                            }, 10000);\r\n                        }\r\n                    });\r\n                    analyticService.buttonList.buttonClick.event_content = \"continue\";\r\n                    analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n                }, 5000);\r\n            }\r\n\r\n\r\n            vm.next = function (result) {\r\n\r\n                // \r\n                // \r\n                // \r\n                // \r\n                // vm.boilerflag = false;\r\n                // var documents = null;\r\n                // if (vm.isStaffJourney) {\r\n\r\n                    //console.log(vm.selectedCard.key);\r\n                //     var incomeDocs = angular.copy(vm.model.incomeDocs);\r\n\r\n                //     if (incomeDocs.length > 0) {\r\n                //         documents = incomeDocs.map(function (doc, index) {\r\n\r\n                //         });\r\n                //     }\r\n                // }\r\n\r\n                // if (vm.model.incomeDocs[0].isEmpty()) {\r\n                //     vm.incomeDocReq = true;\r\n                // } else {\r\n                //     vm.incomeDocReq = false;\r\n                // }\r\n\r\n                // vm.model.incomeDocs.some(function (doc) {\r\n                //     if(doc.documentGroup === \"Others (Optional)\"){\r\n                //         var incomeDocs = angular.copy(vm.model.incomeDocs);\r\n                //         console.log(incomeDocs);\r\n\r\n                //         if(incomeDocs.length > 1){\r\n\r\n                //             vm.incomeDocReq = false;\r\n                //         }else{\r\n                //             vm.incomeDocReq = true;\r\n                //         }\r\n                //     } \r\n                // });\r\n\r\n                // vm.validation_BankSte_SalarySlip = vm.model.incomeDocs.some(function (doc) { // validation check for bankStatement/salarySlip as PDF @akshaybspise 15 jun\r\n                //     //    pDF validation\r\n                //     if (doc.documentGroup === \"Bank Statement (pdf)\" || doc.documentGroup === \"Salary Slip\") {\r\n                //         return doc.documentType !== \"application/pdf\";\r\n                //     }\r\n                //     return false;\r\n                // });\r\n\r\n                // if (vm.nameMissmatch) {\r\n                //     vm.incomeDocReq = vm.model.incomeDocs.some(function (doc) {\r\n                //         return doc.documentGroup != \"Salary Slip\";\r\n                //     });\r\n                //      vm.model.errorMsg = \"Please upload Salary Slip as PDF format.\"\r\n                //     console.log(\"vm.nameMissmatch\", vm.nameMissmatch);\r\n                //     $timeout(function () {\r\n                //         vm.model.errorMsg = false;\r\n                //     }, 10000);\r\n                // }\r\n                // vm.handleValidationError();\r\n                // var isValidationError = vm.validationError.maxSize || vm.validationError.minSize || vm.validationError.format || vm.validationError.noGroup;\r\n                //     if ((!vm.validation_BankSte_SalarySlip && !vm.incomeDocReq && !isValidationError) || (vm.calculatedSalaryFlag && vm.ekyc == \"Yes\")) {//funtion Or condition for CCS akshaypise April2024\r\n\r\n\r\n\r\n\r\n                var incomeDocs = angular.copy(vm.model.incomeDocs);\r\n\r\n                if (incomeDocs.length > 0) {\r\n                    function validateIncomeDocs(incomeDocs) {\r\n                        // Check if at least one document is either \"Bank Statement (pdf)\" or \"Salary Slip\"\r\n                        return incomeDocs.some(function (doc) {\r\n                            return doc.documentGroup === \"Bank Statement\" || doc.documentGroup === \"Salary Slip\";\r\n                        });\r\n                    }\r\n                    if (!validateIncomeDocs(incomeDocs)) {\r\n                        // console.error('At least one document must be either a Bank Statement (pdf) or a Salary Slip.');\r\n                        vm.isSalrayAndBank = false;\r\n                    } else {\r\n                        vm.isSalrayAndBank = true;\r\n                    }\r\n\r\n                }\r\n                if (vm.model.incomeDocs[0].isEmpty()) {\r\n                    vm.incomeDocReq = true;\r\n                } else {\r\n                    vm.incomeDocReq = false;\r\n                }\r\n                vm.noDoccumentUploadHPR = (vm.isStaffJourney && vm.selectedCard.key == \"HPR\") ;\r\n\r\n                // vm.validation_BankSte_SalarySlip = vm.model.incomeDocs.some(function (doc) { // validation check for bankStatement/salarySlip as PDF @akshaybspise 15 jun\r\n                //     //    pdf validation for OB\r\n                //     if (doc.documentGroup === \"Bank Statement (pdf)\" || doc.documentGroup === \"Salary Slip\") {\r\n                //         return doc.documentType !== \"application/pdf\";\r\n                //     }\r\n                //     return false;\r\n                // });\r\n\r\n                // if (vm.nameMissmatch) { //added for OB_v3 @akshaypise 24/07/2024\r\n                //   //  console.log(\"vm.model.incomeDocs name missmatch\",vm.model.incomeDocs);\r\n                //     vm.incomeDocOBReq = vm.model.incomeDocs.some(function (doc) {\r\n                //         return doc.documentGroup === \"Salary Slip\";\r\n                //     });\r\n\r\n                //     !vm.incomeDocOBReq ? vm.model.errorMsg = \"Please upload Salary Slip as PDF format.\" : '';\r\n                //     $timeout(function () {\r\n                //         vm.model.errorMsg = false;\r\n                //     }, 10000);\r\n                // }\r\n                console.log(\"noDoccumentUploadHPR-->\"+vm.noDoccumentUploadHPR);\r\n                vm.handleValidationError();\r\n                var isValidationError = vm.validationError.maxSize || vm.validationError.minSize || vm.validationError.format || vm.validationError.noGroup;\r\n                if ((!vm.incomeDocReq && !isValidationError && vm.incomeDocOBReq && vm.isSalrayAndBank) || vm.noDoccumentUpload || vm.noDoccumentUploadHPR) {//funtion Or condition for CCS akshaypise April2024\r\n\r\n                    var documentData = prepareData();\r\n                    uploadDocument(documentData, 0);\r\n\r\n                } else {\r\n                    vm.virusCheck = false;\r\n                    vm.model.submitted = true;\r\n                    $anchorScroll();\r\n                }\r\n                analyticService.buttonList.buttonClick.event_content = \"continue\";\r\n                analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n            };\r\n\r\n            var uploadDocument = function (documents, index) {\r\n                if (vm.ekyc == 'Yes' && vm.isStaffJourney) {\r\n                    // console.log(\"Ekyc from contact details =======\", vm.ekyc);\r\n                    vm.model.poiType = vm.poiType[3];\r\n                    vm.model.poiNumber = vm.redactedAadhaar\r\n                    vm.model.poaType = vm.poaType[3];\r\n                    vm.model.poaNumber = vm.redactedAadhaar;\r\n                    // console.log(\"poiType and redact =======\", vm.model.poiType + \"==\" + vm.redactedAadhaar);\r\n                }\r\n\r\n                var data = {\r\n                    incomeProof: null,\r\n                    isFirstDocument: index === 0,\r\n                    isLastDocument: documents === null ? true : index === documents.length - 1,\r\n                    poiType: vm.model.poiType,\r\n                    poiNumber: vm.model.poiNumber,\r\n                    poaType: vm.model.poaType,\r\n                    poaNumber: vm.model.poaNumber\r\n                };\r\n                if (documents && documents.length > 0) {\r\n                    data.incomeProof = [documents[index]];\r\n                }\r\n                // vm.OBCheckbox ?\r\n                //     (data.isOpenBanking = \"Yes\", data.finalAnnualIncome = vm.annualSalary) : ''; //commented by akshaypise for OB Checkbox sep2024\r\n\r\n                vm.radiBouttonValue == \"SAA\" ? (\r\n                    data.isOpenBanking = \"Yes\",\r\n                    data.finalAnnualIncome = vm.annualSalary\r\n                ) : ''; //added for OB Checkbox akshaypise sep2024\r\n\r\n\r\n                //console.log(\"sendDocumentData req data\", data);\r\n                step11Service.sendDocumentData(data, vm.securityParams, false).then(function (result) {\r\n                    console.log(\"result from back==\", (result));\r\n                    if (result.success) {\r\n                        // if (documents == null || (index === (documents.length - 1))) {\r\n                        //     vm.virusCheck = false;\r\n                        //     $state.go('app.journey.signature', { 'cardKey': vm.selectedCard.key });\r\n                        // } else {\r\n                        //     uploadDocument(documents, ++index);\r\n                        // }\r\n\r\n                        // }//adding to hadle docu,ment error\r\n                        // else if (!result.success && result.errorCode == '100010') {\r\n                        //     $state.go('app.journey.signature', { 'cardKey': vm.selectedCard.key });\r\n                        // } else if (result.errorCode === 12000) {\r\n                        //     vm.model.errorMsg = \"Please select POA Type to proceed\";\r\n                        //     //evtContent = \"Invalid OTP error\";\r\n                        // } else if (result.errorCode === 12001) {\r\n                        //     vm.model.errorMsg = \"Please select POA Number to proceed\";\r\n                        //     //evtContent = \"Invalid OTP error\";\r\n                        // } else if (result.errorCode === 12002) {\r\n                        //     vm.model.errorMsg = \"Please select POI Type to proceed\";\r\n                        //     //evtContent = \"Invalid OTP error\";\r\n                        // } else if (result.errorCode === 12003) {\r\n                        //     vm.model.errorMsg = \"Please select POI Number to proceed\";\r\n                        //     //evtContent = \"Invalid OTP error\";\r\n                        // }\r\n                        // else if(result.errorCode === 300){\r\n                        //     vm.model.errorMsg = \"Please Enter Correct Password\";\r\n                        //     //Password protected error;\r\n                        // }\r\n\r\n                        // else {\r\n                        //     vm.virusCheck = true;\r\n                        //     vm.model.errorMsg = result.message;\r\n                        //     vm.model.submitted = true;\r\n                        //     $anchorScroll();\r\n                        // }\r\n                        // $timeout(function () {\r\n                        //     vm.model.errorMsg = false;\r\n                        // }, 10000);\r\n\r\n\r\n                        // code changed for bank statement \r\n\r\n                        (!documents || index === (documents.length - 1)) ? (\r\n                            vm.virusCheck = false,\r\n                            $state.go('app.journey.signature', { 'cardKey': vm.selectedCard.key })\r\n                        ) : (\r\n                            uploadDocument(documents, ++index)\r\n                        );\r\n                    } else {\r\n                        vm.model.errorMsg =\r\n                            result.errorCode == '100010' ? (\r\n                                $state.go('app.journey.signature', { 'cardKey': vm.selectedCard.key }), \"\"\r\n                            ) :\r\n                                // result.errorCode === 12000 ? \"Please select POA Type to proceed\" :\r\n                                // result.errorCode === 12001 ? \"Please select POA Number to proceed\" :\r\n                                // result.errorCode === 12002 ? \"Please select POI Type to proceed\" :\r\n                                // result.errorCode === 12003 ? \"Please select POI Number to proceed\" :\r\n                                // result.errorCode === 12004 ?  vm.model.errorMsg =  result.message:\r\n                                vm.model.errorMsg = result.message;\r\n\r\n                        (vm.virusCheck = true, result.message);\r\n\r\n                        // if (!result.success && result.errorCode !== '100010') {\r\n                        //     vm.model.submitted = true;\r\n                        //     $anchorScroll();\r\n                        // }\r\n                        vm.model.submitted = true;\r\n                        $anchorScroll();\r\n\r\n                    }\r\n\r\n                    $timeout(function () {\r\n                        vm.model.errorMsg = false;\r\n                    }, 10000);\r\n                });\r\n            };\r\n\r\n            vm.save = function () {\r\n                var modalInstance = $uibModal.open({\r\n                    backdrop: 'static',\r\n                    keyboard: false,\r\n                    modalFade: true,\r\n                    component: \"overlaySaveConfirmation\",\r\n                    windowClass: 'card-detail-modal'\r\n                });\r\n                modalInstance.result.then(function (isSelected) {\r\n                    if (isSelected) {\r\n                        var securityParams = {\r\n                            robocheck: vm.robocheck ? vm.robocheck : ''\r\n                        };\r\n                        var documentData = prepareData();\r\n                        var data = { incomeProof: documentData ? [documentData[0]] : [], isFirstDocument: true };\r\n                        step11Service.sendDocumentData(data, securityParams, true).then(function (result) {\r\n                            if (result.success) {\r\n                                var promises = [];\r\n                                if (documentData) {\r\n                                    documentData.splice(0, 1);\r\n                                }\r\n                                if (documentData && documentData.length > 0) {\r\n\r\n                                    angular.forEach(documentData, function (doc, index) {\r\n                                        var data = { incomeProof: [doc], isFirstDocument: false };\r\n                                        promises.push(step11Service.sendDocumentData(data, securityParams, true));\r\n                                    });\r\n                                    $q.all(promises).then(function (responses) {\r\n                                        var isSuccess = true;\r\n                                        for (var i = 0; i < responses.length; i++) {\r\n                                            if (responses[i].success === false) {\r\n                                                // result.errorCode == 6000 || result.errorCode == 6001 || result.errorCode == 6002 || result.errorCode == 6003 || result.errorCode == 6004 || result.errorCode == 2\r\n                                                isSuccess = false;\r\n                                                vm.virusCheck = true;\r\n                                                vm.model.errorMsg = responses[i].message;\r\n                                                vm.model.submitted = true;\r\n                                                $anchorScroll();\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                        if (isSuccess) {\r\n                                            $state.go('app.save-exit', {\r\n                                                saveData: {\r\n                                                    name: step11Service.fullName\r\n                                                }, cardKey: vm.selectedCard.key\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                } else {\r\n                                    $state.go('app.save-exit', {\r\n                                        saveData: {\r\n                                            name: step11Service.fullName\r\n                                        }, cardKey: vm.selectedCard.key\r\n                                    });\r\n                                }\r\n                            }//added to handle customer journey document saving \r\n                            else if (!result.success && result.errorCode == '100010') {\r\n                                $state.go('app.save-exit', {\r\n                                    saveData: {\r\n                                        name: step11Service.fullName\r\n                                    }, cardKey: vm.selectedCard.key\r\n                                });\r\n                            }\r\n                            else {\r\n                                vm.virusCheck = true;\r\n                                vm.model.errorMsg = result.message;\r\n                                vm.model.submitted = true;\r\n                                $anchorScroll();\r\n                            }\r\n                        });\r\n                    }\r\n                }, function () { });\r\n                analyticService.buttonList.buttonClick.event_content = \"save for later\";\r\n                analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n            };\r\n\r\n            /*vm.closeError = function () {\r\n                vm.model.errorMsg = false;\r\n            };*/\r\n        }]\r\n    });\r\n\r\n    module.exports = step11Comp.name;\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/step11/step11.component.js\n// module id = ./src/app/components/journey/step11/step11.component.js\n// module chunks = 2","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/step11/step11.component.scss\n// module id = ./src/app/components/journey/step11/step11.component.scss\n// module chunks = 2","(function () {\r\n    'use strict';\r\n\r\n    var step11Service = angular.module('journey.module').service('step11Service', ['$rootScope', '$http', '$q', '$timeout', 'appState', 'CONFIG', 'UtilService','$interval', function ($rootScope, $http, $q, $timeout, appState, CONFIG, UtilService, $interval) {\r\n        var self = this;\r\n        self.arn = null;\r\n        self.fullName = null;\r\n\r\n        self.documentName = {\r\n            \"KYC - AddressProof\": \"kyc-address-proof\",\r\n            // \"BoilerPlate\": \"boiler-plate\",\r\n            \"Primary Applicant Photo\": \"primary-applicant-photo\",\r\n            \"KYC-ID Proof\": \"kyc-id-proof\",\r\n            // \"Income Documents\": \"income-document\",// commented added by akshay april24 OB changes\r\n            \"Others\": \"others\",\r\n             \"Salary Slip\": \"salary-slip\",//added by akshay april24 OB changes\r\n            \"Bank Statement\": \"bank-statement\",//added by akshay april24 OB changes\r\n        }\r\n\r\n        self.getDocumentGroups = function () {\r\n            return [\r\n                \"KYC - AddressProof\",\r\n                // \"BoilerPlate\",\r\n                \"Primary Applicant Photo\",\r\n                \"KYC-ID Proof\",\r\n                   // \"PVC-Declaration\",\r\n                    \"Salary Slip\",//added by akshay april24 OB changes\r\n                    \"Bank Statement\",//added by akshay april24 OB changes\r\n                    // \"Income Documents\", // commented added by akshay april24 OB changes\r\n                    \"Others\"     \r\n            ];\r\n        };\r\n\r\n        self.setDataInStorage = function (formDetails) {\r\n            var arnData = angular.merge({}, appState.getApplicationData(), formDetails);\r\n            appState.setApplicationData(arnData);\r\n            // callback(null, formDetails);\r\n        };\r\n\r\n        self.getDataFromStorage = function () {\r\n            return appState.getApplicationData();\r\n        };\r\n\r\n\r\n        self.sendConsentData = function (reqData, securityParams) { // function added  for OB akshaypise April2024\r\n            var retryDip = {\r\n                active: true,\r\n                pollTimeout: 2500,\r\n                pollInterval: 40000,\r\n                pollCount: 5\r\n            };\r\n            var defer = $q.defer();\r\n        \r\n            sendConsentDataToBack(securityParams, defer, retryDip, reqData);\r\n        \r\n            var countOfPoll = 0;\r\n            $timeout(function () {\r\n                //console.log(\"I am running after \" + retryDip.pollTimeout + \" Milliseconds delay\");\r\n                var intervalPromise = $interval(function () {\r\n                    countOfPoll++;\r\n                    //console.log(\"inside intervalPromise\", countOfPoll);\r\n                    //console.log(\"counter value at start of interval is =\", reqData.reqCounter);\r\n        \r\n                    if (retryDip.active && countOfPoll <= 6) {\r\n                        //console.log(\"retryDip.active  true===\", retryDip.active + \" And value of counter =\", reqData.reqCounter);\r\n                        sendConsentDataToBack(securityParams, defer, retryDip, reqData);\r\n                    } else {\r\n                        //console.log(\"retryDip.active  false===\", retryDip.active + \" And value of counter =\", reqData.reqCounter);\r\n                        $interval.cancel(intervalPromise);\r\n                    }\r\n                    //console.log(\"counter value here is =\", reqData.reqCounter);\r\n        \r\n                    if (retryDip.active && reqData.reqCounter > 6) {\r\n                        //console.log(\"Specific condition met, resolving defer and cancelling interval\");\r\n                        var resolvedObject = {\r\n                            responseCode: 404,\r\n                            success: false,\r\n                            message: \"Sorry! Some internal processing error has occurred\"\r\n                        };\r\n                        defer.resolve(resolvedObject);\r\n                        $interval.cancel(intervalPromise);\r\n                    } else {\r\n                        //console.log(\"this run after wrong error code\", countOfPoll);\r\n                        // var resolvedObject = {\r\n                        //     responseCode: 404,\r\n                        //     success: false,\r\n                        //     message: \"Sorry! Some internal processing error has occurred\"\r\n                        // };\r\n                        // defer.resolve(resolvedObject);\r\n                        // $interval.cancel(intervalPromise);\r\n                    }\r\n                }, retryDip.pollInterval, retryDip.pollCount);\r\n            }, retryDip.pollTimeout);\r\n        \r\n            //console.log(\"yes reached here==\");\r\n            return defer.promise;\r\n        };\r\n        var sendConsentDataToBack = function (securityParams, defer, retryDip, reqData) {       // function added  for OB akshaypise April2024\r\n            var apiURL = $rootScope.integrationsActive ? CONFIG.apiUrl + '/OpenBanking/fetchConsentDetails/' + self.arn + '/' + '?hash_id=' + Math.random() :\r\n                'resources/data/mock/step11_document/open-banking-consent.json';\r\n            return $http({\r\n                method: $rootScope.integrationsActive ? \"POST\" : \"GET\",\r\n                url: apiURL,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                params: securityParams,\r\n                data: JSON.stringify(reqData)\r\n            }).then(function (response) {\r\n                reqData.reqCounter++;\r\n                console.log(\"response from backend  ===\", response.data);\r\n                //console.log(\"for counter \", reqData.reqCounter + \" response from backend  for poll count has value==\", response.data);\r\n        \r\n                if (response.status === 200 && response.data) { //api success\r\n                    if (response.data.responseCode === 203 && retryDip.active && reqData.reqCounter > 6) { // after try many time resolve\r\n                        //console.log(\"lops go---->reqData.reqCounter\",reqData.reqCounter);\r\n                        //console.log(\"code go inside 203activereqcounter\");\r\n                        retryDip.active = false;\r\n                        defer.resolve(response.data);\r\n                    } else if (response.data.responseCode === 203) { // try again call same API\r\n                        //console.log(\"code go inside 203looping\");\r\n                        retryDip.active = true;\r\n                    } else if (response.data.responseCode === 200 || response.data.responseCode === 201 || response.data.responseCode === 202 || response.data.responseCode === 204 || response.data.responseCode === 205 || response.data.responseCode === 206) {\r\n                        //console.log(\"200/201/202/204/205/206 response current value of counter==\", reqData.reqCounter)\r\n                        retryDip.active = false;\r\n                        defer.resolve(response.data);\r\n                        reqData.reqCounter = 7;\r\n                    } else {\r\n                        //console.log(\"//console goes else condtion if other error message show else--1\");\r\n                        retryDip.active = false;\r\n                        response.data.message= \"Sorry! Some internal error has occurred\";\r\n                        defer.resolve(response.data);\r\n                    }\r\n                } else {\r\n                    //console.log(\"else of 200\", response);\r\n                    defer.reject(\"Sorry! Some internal error has occured\");\r\n                    return {    success: false,\r\n                                message: \"Sorry! Some internal error has occured\"\r\n                            };\r\n                }\r\n            }, function (response) {\r\n                //console.log(\"last 1\", response);\r\n                return {\r\n                    success: false,\r\n                    message: \"Sorry! Some internal error has occurred\",\r\n                    errorCode: 404\r\n                };\r\n            });\r\n        };\r\n\r\n        self.getOpenBankingURLlink = function () {          // function added for OB akshaypise march2024 (get the OB URL)\r\n            var apiURL = $rootScope.integrationsActive ? CONFIG.apiUrl + '/OpenBanking/consentInitiate/' + self.arn + '/' + '?hash_id=' + Math.random() : 'resources/data/mock/step11_document/open-banking-url.json';\r\n            return $http({\r\n                method: $rootScope.integrationsActive ? \"POST\" : \"GET\",\r\n                url: apiURL,\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }).then(function (response) {\r\n                if (response.status == 200 && response.data) {\r\n                    return response.data;\r\n                } else {\r\n                    return {\r\n                        success: false,\r\n                        message: \"Sorry! there seems to be some technical error.\"\r\n                    };\r\n                }\r\n            }, function (error) {\r\n                return {\r\n                    success: false,\r\n                    message: \"Sorry! there seems to be some technical error.\"\r\n                };\r\n            });\r\n        };\r\n        self.sendDocumentData = function (docData, securityParams, isSaveExit) {\r\n            var deferred = $q.defer(),\r\n                apiURL, httpMethod, resolved = false;\r\n              \r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = \"POST\";\r\n                apiURL = CONFIG.apiUrl + '/documentupload/saveDocument/' + self.arn + '/' + isSaveExit + '?hash_id=' + Math.random();\r\n            } else {\r\n                httpMethod = \"GET\";\r\n                apiURL = 'resources/data/mock/step11_document/document_save.json';\r\n            }\r\n            $timeout(function () {\r\n                if (!resolved) {\r\n                    deferred.reject();\r\n                }\r\n            }, 120 * 1000);\r\n            $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: JSON.stringify(docData),\r\n                params: securityParams\r\n            }).then(function (response) {\r\n                if (response.status === 200 && response.data) {\r\n                    resolved = true;\r\n                    deferred.resolve(response.data);\r\n                } else {\r\n                    resolved = true;\r\n                    deferred.reject();\r\n                }\r\n            }, function (response) {\r\n                resolved = true;\r\n                deferred.reject();\r\n            });\r\n            return deferred.promise;\r\n        };\r\n\r\n        self.getUserDetails = function () {\r\n            var userDTO = {},\r\n                localState = appState.getApplicationData();\r\n            if (localState) {\r\n                if (localState.primaryApplicant) {\r\n                    self.arn = localState.primaryApplicant.arn;\r\n                    self.fullName = localState.primaryApplicant.fullName ? localState.primaryApplicant.fullName : null;\r\n                    userDTO.addressDoc = localState.primaryApplicant.addressOptions ? localState.primaryApplicant.addressOptions : null;\r\n                    if (userDTO.addressDoc == 'Alternate residence') {\r\n                        userDTO.addressDoc = true;\r\n                    } else {\r\n                        userDTO.addressDoc = false;\r\n                    }\r\n                    if (localState.primaryApplicant.employmentDetails) {\r\n                        var companyName = localState.primaryApplicant.employmentDetails.changedCompanyName ? localState.primaryApplicant.employmentDetails.changedCompanyName : 'N';\r\n                        var skipPerfios = localState.primaryApplicant.employmentDetails.hasSkippedPerfios ? localState.primaryApplicant.employmentDetails.hasSkippedPerfios : 'N';\r\n                    \r\n                        var panStatusFlag = localState.primaryApplicant.panStatusFlag ? localState.primaryApplicant.panStatusFlag : 'N';\r\n                        if (companyName == 'Y' || skipPerfios == 'Y' || panStatusFlag == 'NO_PAN_FOUND')\r\n                            userDTO.incomeDoc = true;\r\n                        else\r\n                            userDTO.incomeDoc = false;\r\n                    }\r\n                    if (localState.primaryApplicant.dipDetails) {\r\n                        self.balanceTransferTaken = localState.primaryApplicant.dipDetails.balanceTransferTaken ? localState.primaryApplicant.dipDetails.balanceTransferTaken : 'N';\r\n                        if (self.balanceTransferTaken == 'N') {\r\n                            self.balanceTransferTaken = false;\r\n                        } else {\r\n                            self.balanceTransferTaken = true;\r\n                        }\r\n                        self.supplementaryCardApplied = localState.primaryApplicant.dipDetails.supplementaryCardApplied ? localState.primaryApplicant.dipDetails.supplementaryCardApplied : 'N';\r\n                        if (self.supplementaryCardApplied == 'N') {\r\n                            self.supplementaryCardApplied = false;\r\n                        } else {\r\n                            self.supplementaryCardApplied = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            userDTO.incomeDocs = [];\r\n            userDTO.poiType = null;\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = \"POST\";\r\n                apiURL = CONFIG.apiUrl + '/documentupload/fetchDocuments/' + self.arn + '?hash_id=' + Math.random();\r\n            } else {\r\n                httpMethod = \"GET\";\r\n                apiURL = 'resources/data/mock/step11_document/document_fetch.json';\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then(function (response) {\r\n                if (response.status === 200 && response.data) {\r\n                    var tempDocs = response.data.incomeProof;\r\n                    if (angular.isArray(tempDocs) && tempDocs.length > 0) {\r\n                        userDTO.poiType=response.data.poiType;\r\n                        userDTO.poiNumber=response.data.poiNumber;\r\n                        userDTO.poaType=response.data.poaType;\r\n                        userDTO.poaNumber=response.data.poaNumber;\r\n                        angular.forEach(tempDocs, function (file) {\r\n                            if (!UtilService.isEmpty(file.document)) {\r\n                                file.document = \"data:\" + file.documentType + \";base64,\" + file.document;\r\n                            }\r\n                            var newFile = new self.IncomeDoc(file.document, file.documentName, file.documentGroup, file.documentType);\r\n                            userDTO.incomeDocs.push(newFile);\r\n                        });\r\n                        // Sort the Documents array by document name\r\n                        userDTO.incomeDocs.sort(function (a, b) {\r\n                            if (a.documentName < b.documentName) {\r\n                                return -1;\r\n                            }\r\n                            if (a.documentName > b.documentName) {\r\n                                return 1;\r\n                            }\r\n                        });\r\n                    } else {\r\n                        userDTO.incomeDocs.push(new self.IncomeDoc());\r\n                    }\r\n                } else {\r\n                    userDTO.incomeDocs.push(new self.IncomeDoc());\r\n                }\r\n                return userDTO;\r\n            }, function (response) {\r\n                userDTO.incomeDocs.push(new self.IncomeDoc());\r\n                return userDTO;\r\n            });\r\n        };\r\n\r\n        self.IncomeDoc = function (document, documentName, documentGroup, documentType) {\r\n            this.document = document || \"\";\r\n            this.documentName = documentName || \"\";\r\n            this.documentGroup = documentGroup || \"\";\r\n            // this.documentGroup = documentGroup || \"INCOME PROOF\";\r\n            this.documentType = documentType || \"\";\r\n            this.validationError = {\r\n                maxSize: false,\r\n                minSize: false,\r\n                format: false,\r\n                noGroup: false\r\n            };\r\n            this.hasValidationError = function () {\r\n                return this.validationError.maxSize || this.validationError.minSize || this.validationError.format || this.validationError.noGroup;\r\n            };\r\n            this.isEmpty = function () {\r\n                return UtilService.isEmpty(this.document);\r\n            };\r\n            this.resetValidationError = function () {\r\n                this.validationError.maxSize = false;\r\n                this.validationError.minSize = false;\r\n                this.validationError.format = false;\r\n                if (UtilService.isEmpty(this.document)) {\r\n                    this.validationError.noGroup = false;\r\n                }\r\n            };\r\n        };\r\n\r\n    }]);\r\n\r\n    module.exports = step11Service.name;\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/step11/step11.component.service.js\n// module id = ./src/app/components/journey/step11/step11.component.service.js\n// module chunks = 2"],"sourceRoot":""}