{"version":3,"sources":["webpack:///resources/js/d12b2ad5fcbcd4583cea5.js","webpack:///./src/app/components/journey/otp-auth/otp-auth.service.js","webpack:///./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.html","webpack:///./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.js","webpack:///./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.service.js","webpack:///./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.html","webpack:///./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.js"],"names":["webpackJsonp","./src/app/components/journey/otp-auth/otp-auth.service.js","module","exports","__webpack_require__","service","$http","$q","CONFIG","appState","$rootScope","self","this","generateOTP","nric","mobile","email","integrationsActive","resolve","defer","method","url","apiUrl","headers","Content-Type","data","then","response","status","reject","validationErrors","promise","getOTP","validateOTP","requestParam","params","apiURL","httpMethod","Math","random","leadData","getContactDetails","modelData","aadhar","otp","pan","toUpperCase","transactionNumber","otpRetryCount","urlParamId","getUrlParamId","leadId","hideLoader","validateRetrieveOTP","arn","retryCount","txnId","./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.html","./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.js","otpVerify","$scope","$state","$window","$timeout","$uibModal","$anchorScroll","UtilService","otpService","otpVerifyService","journeyService","analyticService","otpEnter","navigateData","vm","isEmpty","showSelectedCard","$onInit","regenerateOTP","inputs","Array","OTPHidden","cardkey","otpData","stateData","setStateDataInStorage","getDataFromStorage","dialCode","signatureConsent","stepsHeader","currentStep","fullName","trackPageLoad","pageList","esign","$broadcast","hideHeader","retrieveVerification","verfication","setFocus","$onDestroy","document","body","addEventListener","event","target","nodeName","current","name","getElementById","focus","delOTP","which","popOTP","keyCode","length","continue","isNaN","key","pushOTP","parseInt","value","i","join","kycValidate","securityParams","robocheck","primaryApplicant","aadhaar","success","clearOTP","$watch","newVal","oldVal","retrievalApp","buttonList","buttonClick","event_content","trackUserAction","gotoView","viewNumber","go","cardKey","console","log","requestData","eMudraData","errorCode","saveData","statusCode","errMsg","err","card","setRetrievalDataInStorage","$emit","isStaffJourney","isStaffPlatform","window","location","href","showLoader","showCard","loaderType","error","mobileNumber","residenceCity","leadReason","leadGenerationReason","step2data","setDataInStorage","retrieveInstance","open","component","result","isSelected","back","closeError","angular","template","controller","./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.scss","./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.service.js","$filter","formDetails","arnData","merge","getApplicationData","setApplicationData","modifiedPageState","kycData","check","JSON","stringify","setStaffJourney","primaryApplicantDetails","modifiedPageStateContact","ekyc","ekycDone","frnNumber","employmentStatus","employmentDetails","consents","dipDetails","balanceTransfer","supplementaryCard","documents","hasSkippedPerfios","setContactDetails","./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.html","./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.js","modalController","Close","close","$value","cancel","dismiss","modalComp","bindings","./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.scss"],"mappings":"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","file":"resources/js/d12b2ad5fcbcd4583cea5.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ \"./src/app/components/journey/otp-auth/otp-auth.service.js\":\n/* unknown exports provided */\n/* all exports used */\n/*!*****************************************************************!*\\\n  !*** ./src/app/components/journey/otp-auth/otp-auth.service.js ***!\n  \\*****************************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n(function () {\r\n    'use strict';\r\n    var angular = __webpack_require__(/*! angular */ \"./node_modules/angular/index.js\");\r\n\r\n    angular.module('app').service('otpService', ['$http', '$q', 'CONFIG', 'appState', '$rootScope', function ($http, $q, CONFIG, appState, $rootScope) {\r\n        var self = this;\r\n\r\n        self.generateOTP = function (nric, mobile, email) {\r\n\r\n            if (!$rootScope.integrationsActive) {\r\n                return $q.resolve(true);\r\n            }\r\n\r\n            var defer = $q.defer();\r\n            $http({\r\n                method: 'POST',\r\n                url: CONFIG.apiUrl + '/otp/',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: {\r\n                    nric: nric,\r\n                    mobile: mobile,\r\n                    email: email\r\n                }\r\n            }).then(function (response) {\r\n                if (response && response.status === 200) {\r\n                    defer.resolve(true);\r\n                } else if (response && response.status === 204) {\r\n                    defer.reject(\"No application found for the given information\");\r\n                } else if (response && response.validationErrors) {\r\n                    defer.reject(\"Please ensure the values added in form fields are appropriate, and retry.\");\r\n                } else {\r\n                    defer.reject(\"Please ensure the values added in form fields are appropriate, and retry.\");\r\n                }\r\n            }, function (response) {\r\n                defer.reject(\"Some error occured while commnicating with the server. Please ensure the values added in form fields are appropriate, and retry.\");\r\n            });\r\n            return defer.promise;\r\n        };\r\n\r\n        self.getOTP = function (nric, mobile, email) {\r\n\r\n            if (!$rootScope.integrationsActive) {\r\n                return $q.resolve(123456);\r\n            }\r\n\r\n            var defer = $q.defer();\r\n            $http({\r\n                method: 'GET',\r\n                url: CONFIG.apiUrl + '/otp/?nric=' + nric + '&mobile=' + mobile + '&email=' + email,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then(function (response) {\r\n                if (response && response.status === 200) {\r\n                    defer.resolve(response.data);\r\n                } else if (response && response.validationErrors) {\r\n                    defer.reject(\"Please ensure the values added in form fields are appropriate, and retry.\");\r\n                } else {\r\n                    defer.reject(\"Please ensure the values added in form fields are appropriate, and retry.\");\r\n                }\r\n            }, function (response) {\r\n                return defer.reject(\"Some error occured while commnicating with the server. Please ensure the values added in form fields are appropriate, and retry.\");\r\n            });\r\n            return defer.promise;\r\n        };\r\n\r\n        self.validateOTP = function (requestParam, params) {\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = \"POST\";\r\n                apiURL = CONFIG.apiUrl + '/kyc/otpvalidate' + '?hash_id=' + Math.random();\r\n            } else {\r\n                httpMethod = \"GET\";\r\n                apiURL = 'resources/data/mock/otp-verify/kyc_otp_validate.json';\r\n            }\r\n            var leadData = appState.getContactDetails();\r\n            var modelData = {\r\n                \"aadhar\": requestParam.aadhar,\r\n                \"otp\": requestParam.otp,\r\n                \"pan\": requestParam.pan.toUpperCase(),\r\n                \"transactionNumber\": requestParam.transactionNumber,\r\n                \"otpRetryCount\": requestParam.otpRetryCount,\r\n                \"urlParamId\": appState.getUrlParamId(),\r\n                \"leadId\": leadData.leadId\r\n            };\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                data: modelData,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                params: params,\r\n                hideLoader: true\r\n            }).then(function (response) {\r\n                if (response && response.status === 200) {\r\n                    return response.data;\r\n                } else {\r\n                    //return defer.reject(\"Please ensure the values added in form fields are appropriate, and retry.\");\r\n                }\r\n            }, function (response) {\r\n                return response.data;\r\n            });\r\n        };\r\n\r\n        self.validateRetrieveOTP = function (requestParam, params) {\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = \"POST\";\r\n                apiURL = CONFIG.apiUrl + '/retrieveapplication/fetchapplication/' + '?hash_id=' + Math.random();\r\n            } else {\r\n                httpMethod = \"GET\";\r\n                apiURL = 'resources/data/mock/otp-verify/retrieve_fetch_application.json';\r\n            }\r\n            var modelData = {\r\n                \"otp\": requestParam.otp,\r\n                \"arn\": requestParam.arn,\r\n                \"retryCount\": requestParam.otpRetryCount,\r\n                \"txnId\": requestParam.txnId\r\n            };\r\n\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                data: modelData,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                params: params\r\n            }).then(function (response) {\r\n                if (response && response.status === 200) {\r\n                    return response.data;\r\n                } else {\r\n                    //return defer.reject(\"Please ensure the values added in form fields are appropriate, and retry.\");\r\n                }\r\n            }, function (response) {\r\n                return response.data;\r\n            });\r\n        };\r\n    }]);\r\n})();\r\n\n\n/***/ }),\n\n/***/ \"./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.html\":\n/* unknown exports provided */\n/* all exports used */\n/*!**********************************************************************************!*\\\n  !*** ./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.html ***!\n  \\**********************************************************************************/\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=row> <div ng-hide=$ctrl.showLoader class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <form name=otpForm autocomplete=off novalidate> <div class=row> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\"> <h1 class=\\\"brand-bar no-margin-top\\\" tabindex=0> Please enter the OTP sent to your mobile number </h1> </div> <div class=\\\"col-md-6 col-sm-6 col-xs-12 align-generate\\\"> <button class=\\\"button-outline generate-code\\\" ng-disabled=!$ctrl.regenerateOTP ng-click=$ctrl.kycValidate()> Resend OTP <span class=\\\"icon icon-chevron-right red-icon\\\"></span> </button> </div> </div> <alert-msg ng-if=$ctrl.errMsg type=ERROR> {{$ctrl.errMsg}} </alert-msg> <div class=otp-control-container> <div id=terminal> <input type=text tabindex=-1 class=hidden-field ng-model=$ctrl.robocheck> <input type=text id=otpTxt name=otpTxt autofocus autocomplete=off only-number limit-to=6 class=enter-otp ng-keyup=$ctrl.delOTP($event) ng-model=$ctrl.OTPHidden required tabindex=-1> <div id=getter> <span id=writer></span> <b class=cursor id=cursor></b> </div> </div> <div class=otp-input> <label ng-class=\\\"{'active':!$ctrl.isEmpty(input)}\\\" ng-repeat=\\\"input in $ctrl.inputs track by $index\\\"> <span>{{$ctrl.isEmpty(input)?'&nbsp;':input}}</span> </label> </div> <div class=input-pad> <div class=key-group> <span class=input-key aria-label=1 ng-click=$ctrl.pushOTP(1)>1</span> <span class=input-key aria-label=2 ng-click=$ctrl.pushOTP(2)>2</span> <span class=input-key aria-label=3 ng-click=$ctrl.pushOTP(3)>3</span> </div> <div class=key-group> <span class=input-key aria-label=4 ng-click=$ctrl.pushOTP(4)>4</span> <span class=input-key aria-label=5 ng-click=$ctrl.pushOTP(5)>5</span> <span class=input-key aria-label=6 ng-click=$ctrl.pushOTP(6)>6</span> </div> <div class=key-group> <span class=input-key aria-label=7 ng-click=$ctrl.pushOTP(7)>7</span> <span class=input-key aria-label=8 ng-click=$ctrl.pushOTP(8)>8</span> <span class=input-key aria-label=9 ng-click=$ctrl.pushOTP(9)>9</span> </div> <div class=key-group> <span class=input-key>&nbsp;</span> <span class=input-key aria-label=0 ng-click=$ctrl.pushOTP(0)>0</span> <span class=input-key aria-label=\\\"Clear Input\\\" ng-click=$ctrl.popOTP()> <span class=\\\"icon icon-circle-delete-solid\\\"></span> </span> </div> </div> </div> <step-footer show-back=true back-callback=$ctrl.back() show-continue=true continue-callback=$ctrl.continue() continue-disabled=\\\"otpForm.$invalid || $ctrl.OTPHidden.length < 6\\\"></step-footer> </form> </div> <loading ng-show=$ctrl.showLoader></loading> </div>\";\n\n/***/ }),\n\n/***/ \"./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.js\":\n/* unknown exports provided */\n/* all exports used */\n/*!********************************************************************************!*\\\n  !*** ./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.js ***!\n  \\********************************************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n(function () {\r\n    'use strict';\r\n    var angular = __webpack_require__(/*! angular */ \"./node_modules/angular/index.js\");\r\n    __webpack_require__(/*! ./retrieve.modal/retrieve.modal.component */ \"./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.js\");\r\n    __webpack_require__(/*! ./../otp-auth.service */ \"./src/app/components/journey/otp-auth/otp-auth.service.js\");\r\n    __webpack_require__(/*! ./otp-verify.component.service */ \"./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.service.js\");\r\n    __webpack_require__(/*! ./otp-verify.component.scss */ \"./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.scss\");\r\n\r\n    function otpVerify($rootScope, $scope, $state, $window, $timeout, $uibModal, $anchorScroll, UtilService, otpService, otpVerifyService, journeyService, analyticService) {\r\n        var vm = this, otpEnter;\r\n        var navigateData;\r\n        vm.isEmpty = UtilService.isEmpty;\r\n        $rootScope.showSelectedCard = false;\r\n        vm.$onInit = function () {\r\n            $anchorScroll();\r\n            vm.otpRetryCount = 0;\r\n            vm.regenerateOTP = true;\r\n            var count = 0;\r\n            vm.inputs = new Array(6);\r\n            vm.OTPHidden = \"\";\r\n            vm.cardkey=\"\";\r\n            if ($state.params.otpData) {\r\n                navigateData = {\r\n                    stateData: $state.params\r\n                };\r\n                otpVerifyService.setStateDataInStorage(navigateData);\r\n            }\r\n            if (journeyService.getDataFromStorage())\r\n                vm.stateData = journeyService.getDataFromStorage().stateData;\r\n            if (vm.stateData) {\r\n                if (!vm.stateData.otpData) {\r\n                    vm.mobile = null;\r\n                    vm.dialCode = null;\r\n                    vm.transactionNumber = null;\r\n                    vm.arn = null;\r\n                    vm.txnId = null;\r\n                    vm.signatureConsent = null;\r\n                    $rootScope.stepsHeader.currentStep = 1;\r\n                    analyticService.trackPageLoad(analyticService.pageList.verfication);\r\n                } else {\r\n                    vm.mobile = vm.stateData.otpData.mobile;\r\n                    vm.dialCode = vm.stateData.otpData.dialCode;\r\n                    vm.transactionNumber = vm.stateData.otpData.transactionNumber;\r\n                    vm.arn = vm.stateData.otpData.arn;\r\n                    vm.txnId = vm.stateData.otpData.txnId;\r\n                    if (vm.stateData.otpData.signatureConsent) {\r\n                        $rootScope.stepsHeader.currentStep = 4;\r\n                        vm.signatureConsent = vm.stateData.otpData.signatureConsent;\r\n                        vm.fullName = vm.stateData.otpData.fullName;\r\n                        analyticService.trackPageLoad(analyticService.pageList.esign);\r\n                    } else if (vm.arn) {\r\n                        $rootScope.$broadcast('hide-step-header', {\r\n                            hideHeader: true\r\n                        });\r\n                        analyticService.trackPageLoad(analyticService.pageList.retrieveVerification);\r\n                    } else {\r\n                        analyticService.trackPageLoad(analyticService.pageList.verfication);\r\n                        $rootScope.stepsHeader.currentStep = 1;\r\n                    }\r\n                }\r\n            }\r\n            setFocus();\r\n        };\r\n\r\n        vm.$onDestroy = function () {\r\n            navigateData = {\r\n                stateData: null\r\n            };\r\n            otpVerifyService.setStateDataInStorage(navigateData);\r\n        };\r\n\r\n        document.body.addEventListener(\"click\", function (event) {\r\n            setFocus();\r\n        });\r\n\r\n        document.body.addEventListener(\"keydown\", function (event) {\r\n            // This is to prevent kycValidate() call on enter key press on OTP hidden input\r\n            if (event.target.nodeName === 'INPUT') {\r\n                otpEnter = true;\r\n            } else {\r\n                otpEnter = false;\r\n            }\r\n        });\r\n\r\n        var setFocus = function () {\r\n            if ($state.current.name == 'app.journey.otp-verify') {\r\n                var name = $window.document.getElementById('otpTxt');\r\n                if (name) {\r\n                    name.focus();\r\n                }\r\n            }\r\n        }\r\n\r\n        vm.delOTP = function (event) {\r\n            if (event.which == 8 || event.which == 46) {\r\n                vm.popOTP();\r\n                // vm.OTPHidden = vm.OTPHidden.slice(0, -1);\r\n            } else if (event.which == 13 || event.keyCode == 13) {\r\n                if (vm.OTPHidden.length === 6) {\r\n                    vm.continue();\r\n                }\r\n                return false;\r\n            } else {\r\n                if (!isNaN(event.key)) {\r\n                    vm.pushOTP(parseInt(event.key));\r\n                    // if (vm.OTPHidden) {\r\n                    //     // var lastone = vm.OTPHidden.toString().split('').pop();\r\n                    //     // vm.input(parseInt(lastone));\r\n                    // }\r\n                }\r\n            }\r\n        };\r\n\r\n        vm.pushOTP = function (value) {\r\n            for (var i = 0; i < vm.inputs.length; i++) {\r\n                if (UtilService.isEmpty(vm.inputs[i])) {\r\n                    vm.inputs[i] = value;\r\n                    break;\r\n                }\r\n            }\r\n            vm.OTPHidden = vm.inputs.join('');\r\n        };\r\n\r\n        vm.popOTP = function () {\r\n            for (var i = vm.inputs.length - 1; i >= 0; i--) {\r\n                if (!UtilService.isEmpty(vm.inputs[i])) {\r\n                    vm.inputs[i] = '';\r\n                    break;\r\n                }\r\n            }\r\n            vm.OTPHidden = vm.inputs.join('');\r\n        };\r\n\r\n        vm.kycValidate = function () {\r\n            if (otpEnter) {\r\n                return;\r\n            }\r\n            var securityParams = {\r\n                robocheck: vm.robocheck ? vm.robocheck : ''\r\n            };\r\n            if (vm.regenerateOTP) {\r\n                vm.regenerateOTP = false;\r\n                var requestParam = {};\r\n                if (vm.signatureConsent) {\r\n                    requestParam.aadhar = parseInt(journeyService.getDataFromStorage().primaryApplicant.aadhaar);\r\n                    requestParam.arn = journeyService.getDataFromStorage().primaryApplicant.arn;\r\n                    otpVerifyService.kycValidate(requestParam, 'mudra', securityParams).then(function (data) {\r\n                        if (data.success) {\r\n                            vm.transactionNumber = data.transactionNumber;\r\n                            clearOTP();\r\n                            $scope.$watch(function () {\r\n                                return vm.regenerateOTP;\r\n                            }, function (newVal, oldVal) {\r\n                                $timeout(function () {\r\n                                    vm.regenerateOTP = true;\r\n                                }, 30000);\r\n                            });\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (vm.arn) {\r\n                        requestParam.pan = journeyService.getDataFromStorage().stateData.otpData.pan;\r\n                        requestParam.dialCode = journeyService.getDataFromStorage().stateData.otpData.dialCode;\r\n                        requestParam.mobile = journeyService.getDataFromStorage().stateData.otpData.mobile;\r\n                        otpVerifyService.retrievalApp(requestParam, securityParams).then(function (data) {\r\n                            if (data.success) {\r\n                                vm.txnId = data.txnId;\r\n                                vm.arn = data.arn;//added this line to get latest arn\r\n                                clearOTP();\r\n                                $scope.$watch(function () {\r\n                                    return vm.regenerateOTP;\r\n                                }, function (newVal, oldVal) {\r\n                                    $timeout(function () {\r\n                                        vm.regenerateOTP = true;\r\n                                    }, 30000);\r\n                                });\r\n                            }\r\n                        });\r\n                    } else {\r\n                        requestParam.aadhar = parseInt(journeyService.getDataFromStorage().primaryApplicant.aadhaar);\r\n                        requestParam.pan = journeyService.getDataFromStorage().primaryApplicant.pan;\r\n                        otpVerifyService.kycValidate(requestParam, 'personal', securityParams).then(function (data) {\r\n                            if (data.success) {\r\n                                vm.transactionNumber = data.transactionNumber;\r\n                                clearOTP();\r\n                                $scope.$watch(function () {\r\n                                    return vm.regenerateOTP;\r\n                                }, function (newVal, oldVal) {\r\n                                    $timeout(function () {\r\n                                        vm.regenerateOTP = true;\r\n                                    }, 30000);\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                analyticService.buttonList.buttonClick.event_content = \"Verify OTP: Generate another OTP\";\r\n                analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n            }\r\n        };\r\n\r\n        var clearOTP = function () {\r\n            vm.OTPHidden = \"\";\r\n            if (vm.inputs) {\r\n                for (var i = vm.inputs.length - 1; i >= 0; i--) {\r\n                    if (!UtilService.isEmpty(vm.inputs[i])) {\r\n                        vm.inputs[i] = '';\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var gotoView = function (viewNumber,cardkey) {\r\n           // alert(\"in view card key\" + cardkey);\r\n            switch (viewNumber) {\r\n                // case 0:\r\n                //     $state.go('app.journey.s4-personalDemographic');\r\n                //     break;\r\n                case 1:\r\n                    $state.go('app.journey.s6-incomeDetails',{'cardKey':cardkey});\r\n                    break;\r\n                case 2:\r\n                    $state.go('app.journey.s7-review',{'cardKey':cardkey});\r\n                    break;\r\n                case 3:\r\n                    $state.go('app.journey.card-DIP',{'cardKey':cardkey});\r\n                    break;\r\n                case 4:\r\n                    $state.go('app.journey.balance-transfer',{'cardKey':cardkey});\r\n                    break;\r\n                case 5:\r\n                    $state.go('app.journey.supplementary',{'cardKey':cardkey});\r\n                    break;\r\n                case 6:\r\n                    $state.go('app.journey.document',{'cardKey':cardkey});\r\n                    break;\r\n                case 7:\r\n                    $state.go('app.journey.signature',{'cardKey':cardkey});\r\n                    break;\r\n                case 8:\r\n                    $state.go('app.journey.signature',{'cardKey':cardkey});\r\n                    break;\r\n                case 9:\r\n                    $state.go('app.journey.staff-details',{'cardKey':cardkey});\r\n                    break;\r\n                case 10:\r\n                    $state.go('app.journey.s5-employmentDetails',{'cardKey':cardkey});\r\n                    break;\r\n                case 11:\r\n                    $state.go('app.journey.s3-personalDetails',{'cardKey':cardkey});\r\n                    break;\r\n                default:\r\n                    $state.go('app.journey.s1-cards');\r\n            }\r\n        };\r\n\r\n        vm.continue = function () {\r\n            var securityParams = {\r\n                robocheck: vm.robocheck ? vm.robocheck : ''\r\n            };\r\n            console.log(\"WHAT IS ARN===\",vm.arn);\r\n            if (vm.arn) {\r\n                console.log(\"WHAT IS signatureConsent===\",vm.signatureConsent);\r\n                if (vm.signatureConsent) {\r\n                    var requestData = {\r\n                        \"aadhar\": parseInt(journeyService.getDataFromStorage().primaryApplicant.aadhaar),\r\n                        \"otp\": vm.inputs.join(''),\r\n                        \"otpRetryCount\": vm.otpRetryCount,\r\n                        \"pan\": journeyService.getDataFromStorage().primaryApplicant.pan,\r\n                        \"transactionNumber\": vm.transactionNumber\r\n                    };\r\n                    otpVerifyService.eMudraData(requestData, vm.arn, securityParams).then(function (data) {\r\n                        if (data.errorCode === 7000 || data.errorCode === 7001 || data.errorCode === 7002) {\r\n                            $state.go('app.complete-ack', {\r\n                                saveData: {\r\n                                    name: vm.fullName,\r\n                                    arn: vm.arn,\r\n                                    statusCode: data.errorCode\r\n                                },cardKey:cardkey\r\n                            });\r\n                        } else if (data.errorCode == 1003) {\r\n                            vm.otpRetryCount = data.otpRetryCount + 1;\r\n                            vm.errMsg = 'Sorry! You seem to have entered invalid OTP. Please try again.';\r\n                            clearOTP();\r\n                            $anchorScroll();\r\n                        } else if (data.errorCode == 4005) {\r\n                            $state.go('app.exception');\r\n                        } else if (data.errorCode == 1015) {\r\n                            $state.go('app.max-otp');\r\n                        } else {\r\n                            vm.errMsg = \"Sorry! There seems to be a technical problem. We are unable to progress further. We will contact you within 2 working days to proceed with your Credit Card application.\";\r\n                            clearOTP();\r\n                            $anchorScroll();\r\n                        }\r\n                    }, function (err) {\r\n                        vm.errMsg = \"Sorry! There seems to be a technical problem. We are unable to progress further. We will contact you within 2 working days to proceed with your Credit Card application.\";\r\n                        clearOTP();\r\n                        $anchorScroll();\r\n                    });\r\n                } else {\r\n                    var requestParam = {};\r\n                    requestParam.otp = vm.inputs.join('');\r\n                    requestParam.arn = vm.arn;\r\n                    requestParam.txnId = vm.txnId;\r\n                    requestParam.otpRetryCount = vm.otpRetryCount;\r\n                    otpService.validateRetrieveOTP(requestParam, securityParams).then(function (data) {\r\n                      //  alert(\"inside validate\");\r\n                       //// alert(\"card key\"+data.card.key);\r\n                        vm.cardkey=data.card.key;\r\n                       // alert(vm.cardkey);\r\n                        if (data.errorCode == 1) {\r\n                            otpVerifyService.setRetrievalDataInStorage(data, vm.arn);\r\n                            //arun\r\n                            $rootScope.$broadcast(\"show-FRN\");\r\n                            $scope.$emit('card-selected');\r\n                            if (data.isStaffJourney === \"Y\") {\r\n                                if (UtilService.isStaffPlatform()) {\r\n                                    gotoView(data.viewNumber,vm.cardkey);\r\n                                } else {\r\n                                    window.location.href = \"resources/templates/staff-unsupported-env.html\";\r\n                                }\r\n                            } else {\r\n                                gotoView(data.viewNumber,vm.cardkey);\r\n                            }\r\n                        } else if (data.errorCode == 1003) {\r\n                            vm.otpRetryCount = data.otpRetryCount + 1;\r\n                            vm.errMsg = 'Sorry! You seem to have entered invalid OTP. Please try again.';\r\n                            clearOTP();\r\n                            $anchorScroll();\r\n                        } else if (data.errorCode == 1015) {\r\n                            $state.go('app.app-retrieval');\r\n                        } else if (data.errorCode == 1005) {\r\n                            vm.otpRetryCount = data.otpRetryCount + 1;\r\n                            vm.errMsg = 'OTP expired.Please generate new OTP.';\r\n                            clearOTP();\r\n                            $anchorScroll();\r\n                        }else if (data.errorCode == 10006) {\r\n                            //arun else if condition\r\n                           // vm.errMsg = \"Sorry! there seems to be some technical error. Please try again\";\r\n                            $state.go('app.journey.s1-cards');\r\n                        }\r\n                         else {\r\n                            $state.go('app.app-retrieval');\r\n                        }\r\n                    }, function (err) {\r\n                        vm.errMsg = \"Sorry! There seems to be a technical problem. We are unable to progress further. We will contact you within 2 working days to proceed with your Credit Card application.\";\r\n                        clearOTP();\r\n                        $anchorScroll();\r\n                    });\r\n                }\r\n            } else {\r\n                $rootScope.$broadcast('trigger-verification-loader', {\r\n                    showLoader: true,\r\n                    showCard: false,\r\n                    loaderType: 'AADHAR'\r\n                });\r\n                vm.showLoader = true;\r\n                var requestParam = {};\r\n                requestParam.aadhar = journeyService.getDataFromStorage().primaryApplicant.aadhaar;\r\n                requestParam.pan = journeyService.getDataFromStorage().primaryApplicant.pan;\r\n                requestParam.otp = vm.inputs.join('');\r\n                requestParam.transactionNumber = vm.transactionNumber;\r\n                requestParam.otpRetryCount = vm.otpRetryCount;\r\n                otpService.validateOTP(requestParam, securityParams).then(function (data) {\r\n                    if (data.errorCode !== 4001) {\r\n                        if (data.errorCode == 2 || data.errorCode == 1007 || data.errorCode == 1015 || data.errorCode == 1016 || data.errorCode == 1017 || data.errorCode == 1018 || data.errorCode == 1201 || data.errorCode == 5007) {\r\n                            hideLoader();\r\n                            if (data.errorCode == 1007) {\r\n                                analyticService.buttonList.error.event_content = \"Already a prestige customer\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            } else if (data.errorCode == 1015) {\r\n                                analyticService.buttonList.error.event_content = \"Max OTP attempt exceeded error\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            } else if (data.errorCode == 1016) {\r\n                                analyticService.buttonList.error.event_content = \"Aadhaar/Pan input - max attempt exceeded\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            } else if (data.errorCode == 1018) {\r\n                                analyticService.buttonList.error.event_content = \"Mobile number not registered with Aadhaar\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            } else if (data.errorCode == 1201) {\r\n                                analyticService.buttonList.error.event_content = \"Inelegible age error\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            } else if (data.errorCode == 2 || data.errorCode == 5007) {\r\n                                analyticService.buttonList.error.event_content = \"Connectivity issue error\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            }\r\n                            $state.go(\"app.journey.lead-generation\", {\r\n                                leadData: {\r\n                                    statusCode: data.errorCode,\r\n                                    fullName: data.fullName,\r\n                                    mobileNumber: data.mobile,\r\n                                    email: data.email,\r\n                                    residenceCity: data.residenceCity,\r\n                                    leadReason: data.leadGenerationReason\r\n                                },cardKey:cardkey\r\n                            });\r\n                        } else if (data.errorCode == 1002 || data.errorCode == 1014) {\r\n                            hideLoader();\r\n                            $state.go('app.journey.s2-qualifying', {\r\n                                step2data: {\r\n                                    errorCode: data.errorCode\r\n                                }\r\n                            });\r\n                        } else if (data.errorCode == 1 || data.errorCode == 1004) {\r\n                            $timeout(function () {\r\n                                otpVerifyService.setDataInStorage(data);\r\n                                $state.go('app.journey.s3-personalDetails', {\r\n                                    stateData: {\r\n                                        errorCode: data.errorCode\r\n                                    },cardKey:cardkey\r\n                                });\r\n                            }, 15000);\r\n                        } else if (data.errorCode == 1011) {\r\n                            hideLoader();\r\n                            //$state.go('app.app-retrieval');\r\n                            var retrieveInstance = $uibModal.open({\r\n                                component: 'retrieveModal'\r\n                            });\r\n                            retrieveInstance.result.then(function (isSelected) {\r\n                                if (isSelected) {\r\n                                    $state.go('app.app-retrieval');\r\n                                }\r\n                            }, function () { });\r\n                        } else if (data.errorCode == 1012 || data.errorCode == 1019 || data.errorCode == 1020) {\r\n                            // Existing pending application\r\n                            hideLoader();\r\n                            analyticService.buttonList.error.event_content = \"Existing submitted application error\";\r\n                            analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            $state.go('app.submitted-application',{cardKey:cardkey});\r\n                        } else if (data.errorCode == 1003) {\r\n                            hideLoader();\r\n                            vm.otpRetryCount = data.otpRetryCount + 1;\r\n                            vm.errMsg = 'Sorry! You seem to have entered invalid OTP. Please try again.';\r\n                            clearOTP();\r\n                            $anchorScroll();\r\n                        } else if (data.errorCode == 1005) {\r\n                            hideLoader();\r\n                            vm.otpRetryCount = data.otpRetryCount + 1;\r\n                            vm.errMsg = 'OTP expired.Please generate new OTP.';\r\n                            clearOTP();\r\n                            $anchorScroll();\r\n                        } else {\r\n                            hideLoader();\r\n                            vm.errMsg = \"Sorry! There seems to be a technical problem. We are unable to progress further. We will contact you within 2 working days to proceed with your Credit Card application.\";\r\n                            clearOTP();\r\n                            $anchorScroll();\r\n                        }\r\n                    } else {\r\n                        hideLoader();\r\n                        vm.errMsg = \"Sorry! There seems to be a technical problem. We are unable to progress further. We will contact you within 2 working days to proceed with your Credit Card application.\";\r\n                        clearOTP();\r\n                        $anchorScroll();\r\n                    }\r\n                }, function (err) {\r\n                    hideLoader();\r\n                    vm.errMsg = \"Sorry! There seems to be a technical problem. We are unable to progress further. We will contact you wirhin 2 working days to proceed with your Credit Card application.\";\r\n                    clearOTP();\r\n                    $anchorScroll();\r\n                });\r\n            }\r\n            analyticService.buttonList.buttonClick.event_content = \"Verify OTP: Continue\";\r\n            analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n        };\r\n\r\n        var hideLoader = function () {\r\n            $rootScope.$broadcast('trigger-verification-loader', {\r\n                showLoader: false,\r\n                showCard: false,\r\n                loaderType: 'AADHAR'\r\n            });\r\n            vm.showLoader = false;\r\n        };\r\n\r\n        vm.back = function () {\r\n            journeyService.getDataFromStorage();\r\n            if (vm.arn) {\r\n                if (vm.signatureConsent)\r\n                    $state.go('app.journey.signature');\r\n                else\r\n                    $state.go('app.app-retrieval');\r\n            } else {\r\n                $state.go('app.journey.s2-qualifying');\r\n            }\r\n            analyticService.buttonList.buttonClick.event_content = \"OTP Verify: Back\";\r\n            analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n        };\r\n\r\n        vm.closeError = function () {\r\n            vm.errMsg = false;\r\n        };\r\n    }\r\n\r\n    var otpVerify = angular.module('app').component('otpVerify', {\r\n        template: __webpack_require__(/*! ./otp-verify.component.html */ \"./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.html\"),\r\n        controller: ['$rootScope', '$scope', '$state', '$window', '$timeout', '$uibModal', '$anchorScroll', 'UtilService', 'otpService', 'otpVerifyService', 'journeyService', 'analyticService', otpVerify]\r\n    });\r\n\r\n    module.exports = otpVerify.name;\r\n})();\n\n/***/ }),\n\n/***/ \"./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.scss\":\n/* unknown exports provided */\n/* all exports used */\n/*!**********************************************************************************!*\\\n  !*** ./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.scss ***!\n  \\**********************************************************************************/\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.service.js\":\n/* unknown exports provided */\n/* all exports used */\n/*!****************************************************************************************!*\\\n  !*** ./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.service.js ***!\n  \\****************************************************************************************/\n/***/ (function(module, exports) {\n\n(function () {\r\n    'use strict';\r\n\r\n    var otpVerifyService = angular.module('app').service('otpVerifyService', ['$rootScope', '$filter', 'appState', '$http', 'CONFIG', 'UtilService', function ($rootScope, $filter, appState, $http, CONFIG, UtilService) {\r\n\r\n        this.setStateDataInStorage = function (formDetails) {\r\n            var arnData = angular.merge({}, appState.getApplicationData(), formDetails);\r\n            appState.setApplicationData(arnData);\r\n        };\r\n\r\n        this.setDataInStorage = function (formDetails) {\r\n            /* var modifiedPageState = {\r\n                \"primaryApplicant\": formDetails\r\n            } */\r\n            var modifiedPageState = angular.merge({}, appState.getApplicationData().primaryApplicant, formDetails);\r\n            var arnData = {\r\n                \"primaryApplicant\": modifiedPageState\r\n            };\r\n            // var fatherName = arnData.primaryApplicant.fatherName;\r\n            // if (fatherName == null || fatherName == '') {\r\n            //     arnData.primaryApplicant.fatherEditable = true;\r\n            // } else {\r\n            //     arnData.primaryApplicant.fatherEditable = false;\r\n            // }\r\n            appState.setApplicationData(arnData);\r\n        };\r\n\r\n        this.kycValidate = function (kycData, check, securityParams) {\r\n            var apiURL, httpMethod;\r\n            if (check == 'personal') {\r\n                if ($rootScope.integrationsActive) {\r\n                    httpMethod = \"POST\";\r\n                    apiURL = CONFIG.apiUrl + '/kyc/aadhaarpanvalidate' + '?hash_id=' + Math.random();\r\n                } else {\r\n                    httpMethod = \"GET\";\r\n                    apiURL = 'resources/data/mock/otp-verify/kyc_aadhar_pan_validate.json';\r\n                }\r\n                return $http({\r\n                    method: httpMethod,\r\n                    url: apiURL,\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    data: JSON.stringify(kycData),\r\n                    params: securityParams\r\n                }).then(function (response) {\r\n                    if (response && response.status === 200 && response.data) {\r\n                        return response.data;\r\n                    } else if (response && response.validationErrors) {\r\n                        //return pageError = \"Please ensure the values added in form fields are appropriate, and retry.\";\r\n                    } else {\r\n                        //Need to display \"response\" below page heading (above form).\r\n                        //vm.pageError = \"Some error occurred on the server side. Please try after some time.\";\r\n                    }\r\n                    return;\r\n                }, function (response) {\r\n                    return;\r\n                });\r\n            } else if (check == 'mudra') {\r\n                if ($rootScope.integrationsActive) {\r\n                    apiURL = CONFIG.apiUrl + '/emudhra/getOtp/' + kycData.aadhar + '/' + kycData.arn + '?hash_id=' + Math.random();\r\n                } else {\r\n                    apiURL = 'resources/data/mock/otp-verify/emudra_get_otp.json';\r\n                }\r\n                return $http({\r\n                    method: 'GET',\r\n                    url: apiURL,\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    params: securityParams\r\n                }).then(function (response) {\r\n                    if (response.status === 200 && response.data) {\r\n                        return response.data;\r\n                    } else if (response && response.validationErrors) { } else { }\r\n                    return;\r\n                }, function (response) {\r\n                    return;\r\n                });\r\n            }\r\n        };\r\n\r\n        this.eMudraData = function (eMudraData, arn, securityParams) {\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = \"POST\";\r\n                apiURL = CONFIG.apiUrl + '/emudhra/validateOtp/' + arn + '?hash_id=' + Math.random();\r\n            } else {\r\n                httpMethod = \"GET\";\r\n                apiURL = 'resources/data/mock/otp-verify/emudra_validate_otp.json';\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: JSON.stringify(eMudraData),\r\n                params: securityParams\r\n            }).then(function (response) {\r\n                if (response && response.status === 200 && response.data) {\r\n                    return response.data;\r\n                } else if (response && response.validationErrors) {\r\n                    //return pageError = \"Please ensure the values added in form fields are appropriate, and retry.\";\r\n                } else {\r\n                    //Need to display \"response\" below page heading (above form).\r\n                    //vm.pageError = \"Some error occurred on the server side. Please try after some time.\";\r\n                }\r\n                return;\r\n            }, function (response) {\r\n                return;\r\n            });\r\n        };\r\n\r\n        this.retrievalApp = function (data, securityParams) {\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = \"POST\";\r\n                apiURL = CONFIG.apiUrl + '/retrieveapplication/otpgenerate' + '?hash_id=' + Math.random();\r\n            } else {\r\n                httpMethod = \"GET\";\r\n                apiURL = 'resources/data/mock/otp-verify/kyc_aadhar_pan_validate.json';\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: JSON.stringify(data),\r\n                params: securityParams\r\n            }).then(function (response) {\r\n                if (response && response.status === 200 && response.data) {\r\n                    return response.data;\r\n                } else if (response && response.validationErrors) {\r\n                    //return pageError = \"Please ensure the values added in form fields are appropriate, and retry.\";\r\n                } else {\r\n                    //Need to display \"response\" below page heading (above form).\r\n                    //vm.pageError = \"Some error occurred on the server side. Please try after some time.\";\r\n                }\r\n                return;\r\n            }, function (response) {\r\n                return;\r\n            });\r\n        };\r\n\r\n        this.setRetrievalDataInStorage = function (formDetails, arn) {\r\n            var isStaffJourney = formDetails.isStaffJourney === 'Y';\r\n            appState.setStaffJourney(isStaffJourney);\r\n            var modifiedPageState = {\r\n                \"primaryApplicant\": formDetails.primaryApplicantDetails,\r\n            };\r\n            var modifiedPageStateContact = {\r\n                //\"vcipType\":appData.vcipFlag,\r\n                \"ekyc\":formDetails.ekycDone\r\n            };\r\n            modifiedPageState.primaryApplicant.arn = arn;\r\n            // modifiedPageState.primaryApplicant.demographicDetails = formDetails.demographicDetails;\r\n            //arun\r\n            modifiedPageState.primaryApplicant.frnNumber = formDetails.frnNumber;\r\n            modifiedPageState.primaryApplicant.employmentStatus = formDetails.employmentStatus;\r\n            modifiedPageState.primaryApplicant.employmentDetails = formDetails.employmentDetails;\r\n            modifiedPageState.primaryApplicant.consents = formDetails.consents;\r\n            modifiedPageState.primaryApplicant.dipDetails = formDetails.dipDetails;\r\n            modifiedPageState.primaryApplicant.balanceTransfer = formDetails.balanceTransfer;\r\n            modifiedPageState.primaryApplicant.supplementaryCard = formDetails.supplementaryCard;\r\n            modifiedPageState.primaryApplicant.documents = formDetails.documents;\r\n            modifiedPageState.primaryApplicant.hasSkippedPerfios = formDetails.hasSkippedPerfios;\r\n            modifiedPageState.primaryApplicant.card = formDetails.card;\r\n            // var incomeDocs = modifiedPageState.primaryApplicant.documents.incomeProof;\r\n            // if (!UtilService.isEmpty(incomeDocs) && incomeDocs.length > 0 && !UtilService.isEmpty(incomeDocs[0])) {\r\n            //     for (var i = 0; i < incomeDocs.length; i++) {\r\n            //         if (incomeDocs[i].document) {\r\n            //             var temp = \"\";\r\n            //             temp = \"data:\" + incomeDocs[i].documentType + \";base64,\" + incomeDocs[i].document;\r\n            //             incomeDocs[i].document = temp;\r\n            //         }\r\n            //     };\r\n            //     modifiedPageState.primaryApplicant.documents.incomeProof[0] = $filter('filter')(incomeDocs, { \"documentName\": \"IncomeDocument1\" })[0];\r\n            //     if (incomeDocs.length > 1) {\r\n            //         modifiedPageState.primaryApplicant.documents.incomeProof[1] = $filter('filter')(incomeDocs, { \"documentName\": \"IncomeDocument2\" })[0];\r\n            //     }\r\n            // }\r\n            var arnData = angular.merge({}, appState.getApplicationData(), modifiedPageState);\r\n            // var fatherName = arnData.primaryApplicant.fatherName;\r\n            // if (fatherName == null || fatherName == '') {\r\n            //     arnData.primaryApplicant.fatherEditable = true;\r\n            // } else {\r\n            //     arnData.primaryApplicant.fatherEditable = false;\r\n            // }\r\n            appState.setApplicationData(arnData);\r\n            appState.setContactDetails(modifiedPageStateContact);//to access vcip flag // to access ekyc done or not \r\n            console.log(\"Retrival data set in theContactDetails===\" ,JSON.stringify(modifiedPageStateContact));\r\n        };\r\n\r\n        this.getDataFromStorage = function () {\r\n            return appState.getApplicationData();\r\n        };\r\n\r\n    }]);\r\n\r\n    module.exports = otpVerifyService.name;\r\n})();\r\n\n\n/***/ }),\n\n/***/ \"./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.html\":\n/* unknown exports provided */\n/* all exports used */\n/*!*****************************************************************************************************!*\\\n  !*** ./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.html ***!\n  \\*****************************************************************************************************/\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=modal-header> <div class=heading-container> </div> <div class=close-button-container> <button type=button class=close aria-label=Close ng-click=$ctrl.cancel()> <span aria-hidden=true>×</span> </button> </div> </div> <div class=modal-body> <p class=no-margin-b> Our records indicate that you have a pending application with us in the past 30 days. Click OK to resume your application. </p> </div> <div class=modal-footer> <div class=buttons-container> <button class=button-primary ng-click=$ctrl.Close(true)>OK</button> </div> </div>\";\n\n/***/ }),\n\n/***/ \"./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.js\":\n/* unknown exports provided */\n/* all exports used */\n/*!***************************************************************************************************!*\\\n  !*** ./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.js ***!\n  \\***************************************************************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n(function () {\r\n    'use strict';\r\n    var angular = __webpack_require__(/*! angular */ \"./node_modules/angular/index.js\");\r\n    __webpack_require__(/*! ./retrieve.modal.component.scss */ \"./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.scss\")\r\n\r\n    var modalController = function () {\r\n        var vm = this;\r\n\r\n        vm.$onInit = function () {\r\n\r\n        };\r\n\r\n        /**\r\n         * This function is triggered when we select or unselect card.\r\n         * We push the selected card in selectedPrimaryCards array and\r\n         *  pop the unselected card.\r\n         */\r\n        vm.Close = function (isSelected) {\r\n            vm.close({\r\n                $value: isSelected\r\n            });\r\n        };\r\n\r\n        vm.cancel = function () {\r\n            vm.dismiss({\r\n                $value: 'cancel'\r\n            });\r\n        };\r\n    };\r\n\r\n    var modalComp = angular.module('app').component('retrieveModal', {\r\n        template: __webpack_require__(/*! ./retrieve.modal.component.html */ \"./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.html\"),\r\n        bindings: {\r\n            resolve: '<',\r\n            close: '&',\r\n            dismiss: '&'\r\n        },\r\n        controller: [modalController]\r\n    });\r\n    module.exports = modalComp.name;\r\n})();\r\n\n\n/***/ }),\n\n/***/ \"./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.scss\":\n/* unknown exports provided */\n/* all exports used */\n/*!*****************************************************************************************************!*\\\n  !*** ./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.scss ***!\n  \\*****************************************************************************************************/\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// resources/js/d12b2ad5fcbcd4583cea5.js","(function () {\r\n    'use strict';\r\n    var angular = require('angular');\r\n\r\n    angular.module('app').service('otpService', ['$http', '$q', 'CONFIG', 'appState', '$rootScope', function ($http, $q, CONFIG, appState, $rootScope) {\r\n        var self = this;\r\n\r\n        self.generateOTP = function (nric, mobile, email) {\r\n\r\n            if (!$rootScope.integrationsActive) {\r\n                return $q.resolve(true);\r\n            }\r\n\r\n            var defer = $q.defer();\r\n            $http({\r\n                method: 'POST',\r\n                url: CONFIG.apiUrl + '/otp/',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: {\r\n                    nric: nric,\r\n                    mobile: mobile,\r\n                    email: email\r\n                }\r\n            }).then(function (response) {\r\n                if (response && response.status === 200) {\r\n                    defer.resolve(true);\r\n                } else if (response && response.status === 204) {\r\n                    defer.reject(\"No application found for the given information\");\r\n                } else if (response && response.validationErrors) {\r\n                    defer.reject(\"Please ensure the values added in form fields are appropriate, and retry.\");\r\n                } else {\r\n                    defer.reject(\"Please ensure the values added in form fields are appropriate, and retry.\");\r\n                }\r\n            }, function (response) {\r\n                defer.reject(\"Some error occured while commnicating with the server. Please ensure the values added in form fields are appropriate, and retry.\");\r\n            });\r\n            return defer.promise;\r\n        };\r\n\r\n        self.getOTP = function (nric, mobile, email) {\r\n\r\n            if (!$rootScope.integrationsActive) {\r\n                return $q.resolve(123456);\r\n            }\r\n\r\n            var defer = $q.defer();\r\n            $http({\r\n                method: 'GET',\r\n                url: CONFIG.apiUrl + '/otp/?nric=' + nric + '&mobile=' + mobile + '&email=' + email,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then(function (response) {\r\n                if (response && response.status === 200) {\r\n                    defer.resolve(response.data);\r\n                } else if (response && response.validationErrors) {\r\n                    defer.reject(\"Please ensure the values added in form fields are appropriate, and retry.\");\r\n                } else {\r\n                    defer.reject(\"Please ensure the values added in form fields are appropriate, and retry.\");\r\n                }\r\n            }, function (response) {\r\n                return defer.reject(\"Some error occured while commnicating with the server. Please ensure the values added in form fields are appropriate, and retry.\");\r\n            });\r\n            return defer.promise;\r\n        };\r\n\r\n        self.validateOTP = function (requestParam, params) {\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = \"POST\";\r\n                apiURL = CONFIG.apiUrl + '/kyc/otpvalidate' + '?hash_id=' + Math.random();\r\n            } else {\r\n                httpMethod = \"GET\";\r\n                apiURL = 'resources/data/mock/otp-verify/kyc_otp_validate.json';\r\n            }\r\n            var leadData = appState.getContactDetails();\r\n            var modelData = {\r\n                \"aadhar\": requestParam.aadhar,\r\n                \"otp\": requestParam.otp,\r\n                \"pan\": requestParam.pan.toUpperCase(),\r\n                \"transactionNumber\": requestParam.transactionNumber,\r\n                \"otpRetryCount\": requestParam.otpRetryCount,\r\n                \"urlParamId\": appState.getUrlParamId(),\r\n                \"leadId\": leadData.leadId\r\n            };\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                data: modelData,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                params: params,\r\n                hideLoader: true\r\n            }).then(function (response) {\r\n                if (response && response.status === 200) {\r\n                    return response.data;\r\n                } else {\r\n                    //return defer.reject(\"Please ensure the values added in form fields are appropriate, and retry.\");\r\n                }\r\n            }, function (response) {\r\n                return response.data;\r\n            });\r\n        };\r\n\r\n        self.validateRetrieveOTP = function (requestParam, params) {\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = \"POST\";\r\n                apiURL = CONFIG.apiUrl + '/retrieveapplication/fetchapplication/' + '?hash_id=' + Math.random();\r\n            } else {\r\n                httpMethod = \"GET\";\r\n                apiURL = 'resources/data/mock/otp-verify/retrieve_fetch_application.json';\r\n            }\r\n            var modelData = {\r\n                \"otp\": requestParam.otp,\r\n                \"arn\": requestParam.arn,\r\n                \"retryCount\": requestParam.otpRetryCount,\r\n                \"txnId\": requestParam.txnId\r\n            };\r\n\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                data: modelData,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                params: params\r\n            }).then(function (response) {\r\n                if (response && response.status === 200) {\r\n                    return response.data;\r\n                } else {\r\n                    //return defer.reject(\"Please ensure the values added in form fields are appropriate, and retry.\");\r\n                }\r\n            }, function (response) {\r\n                return response.data;\r\n            });\r\n        };\r\n    }]);\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/otp-auth/otp-auth.service.js\n// module id = ./src/app/components/journey/otp-auth/otp-auth.service.js\n// module chunks = 5","module.exports = \"<div class=row> <div ng-hide=$ctrl.showLoader class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <form name=otpForm autocomplete=off novalidate> <div class=row> <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\"> <h1 class=\\\"brand-bar no-margin-top\\\" tabindex=0> Please enter the OTP sent to your mobile number </h1> </div> <div class=\\\"col-md-6 col-sm-6 col-xs-12 align-generate\\\"> <button class=\\\"button-outline generate-code\\\" ng-disabled=!$ctrl.regenerateOTP ng-click=$ctrl.kycValidate()> Resend OTP <span class=\\\"icon icon-chevron-right red-icon\\\"></span> </button> </div> </div> <alert-msg ng-if=$ctrl.errMsg type=ERROR> {{$ctrl.errMsg}} </alert-msg> <div class=otp-control-container> <div id=terminal> <input type=text tabindex=-1 class=hidden-field ng-model=$ctrl.robocheck> <input type=text id=otpTxt name=otpTxt autofocus autocomplete=off only-number limit-to=6 class=enter-otp ng-keyup=$ctrl.delOTP($event) ng-model=$ctrl.OTPHidden required tabindex=-1> <div id=getter> <span id=writer></span> <b class=cursor id=cursor></b> </div> </div> <div class=otp-input> <label ng-class=\\\"{'active':!$ctrl.isEmpty(input)}\\\" ng-repeat=\\\"input in $ctrl.inputs track by $index\\\"> <span>{{$ctrl.isEmpty(input)?'&nbsp;':input}}</span> </label> </div> <div class=input-pad> <div class=key-group> <span class=input-key aria-label=1 ng-click=$ctrl.pushOTP(1)>1</span> <span class=input-key aria-label=2 ng-click=$ctrl.pushOTP(2)>2</span> <span class=input-key aria-label=3 ng-click=$ctrl.pushOTP(3)>3</span> </div> <div class=key-group> <span class=input-key aria-label=4 ng-click=$ctrl.pushOTP(4)>4</span> <span class=input-key aria-label=5 ng-click=$ctrl.pushOTP(5)>5</span> <span class=input-key aria-label=6 ng-click=$ctrl.pushOTP(6)>6</span> </div> <div class=key-group> <span class=input-key aria-label=7 ng-click=$ctrl.pushOTP(7)>7</span> <span class=input-key aria-label=8 ng-click=$ctrl.pushOTP(8)>8</span> <span class=input-key aria-label=9 ng-click=$ctrl.pushOTP(9)>9</span> </div> <div class=key-group> <span class=input-key>&nbsp;</span> <span class=input-key aria-label=0 ng-click=$ctrl.pushOTP(0)>0</span> <span class=input-key aria-label=\\\"Clear Input\\\" ng-click=$ctrl.popOTP()> <span class=\\\"icon icon-circle-delete-solid\\\"></span> </span> </div> </div> </div> <step-footer show-back=true back-callback=$ctrl.back() show-continue=true continue-callback=$ctrl.continue() continue-disabled=\\\"otpForm.$invalid || $ctrl.OTPHidden.length < 6\\\"></step-footer> </form> </div> <loading ng-show=$ctrl.showLoader></loading> </div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.html\n// module id = ./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.html\n// module chunks = 5","(function () {\r\n    'use strict';\r\n    var angular = require('angular');\r\n    require('./retrieve.modal/retrieve.modal.component');\r\n    require('./../otp-auth.service');\r\n    require('./otp-verify.component.service');\r\n    require('./otp-verify.component.scss');\r\n\r\n    function otpVerify($rootScope, $scope, $state, $window, $timeout, $uibModal, $anchorScroll, UtilService, otpService, otpVerifyService, journeyService, analyticService) {\r\n        var vm = this, otpEnter;\r\n        var navigateData;\r\n        vm.isEmpty = UtilService.isEmpty;\r\n        $rootScope.showSelectedCard = false;\r\n        vm.$onInit = function () {\r\n            $anchorScroll();\r\n            vm.otpRetryCount = 0;\r\n            vm.regenerateOTP = true;\r\n            var count = 0;\r\n            vm.inputs = new Array(6);\r\n            vm.OTPHidden = \"\";\r\n            vm.cardkey=\"\";\r\n            if ($state.params.otpData) {\r\n                navigateData = {\r\n                    stateData: $state.params\r\n                };\r\n                otpVerifyService.setStateDataInStorage(navigateData);\r\n            }\r\n            if (journeyService.getDataFromStorage())\r\n                vm.stateData = journeyService.getDataFromStorage().stateData;\r\n            if (vm.stateData) {\r\n                if (!vm.stateData.otpData) {\r\n                    vm.mobile = null;\r\n                    vm.dialCode = null;\r\n                    vm.transactionNumber = null;\r\n                    vm.arn = null;\r\n                    vm.txnId = null;\r\n                    vm.signatureConsent = null;\r\n                    $rootScope.stepsHeader.currentStep = 1;\r\n                    analyticService.trackPageLoad(analyticService.pageList.verfication);\r\n                } else {\r\n                    vm.mobile = vm.stateData.otpData.mobile;\r\n                    vm.dialCode = vm.stateData.otpData.dialCode;\r\n                    vm.transactionNumber = vm.stateData.otpData.transactionNumber;\r\n                    vm.arn = vm.stateData.otpData.arn;\r\n                    vm.txnId = vm.stateData.otpData.txnId;\r\n                    if (vm.stateData.otpData.signatureConsent) {\r\n                        $rootScope.stepsHeader.currentStep = 4;\r\n                        vm.signatureConsent = vm.stateData.otpData.signatureConsent;\r\n                        vm.fullName = vm.stateData.otpData.fullName;\r\n                        analyticService.trackPageLoad(analyticService.pageList.esign);\r\n                    } else if (vm.arn) {\r\n                        $rootScope.$broadcast('hide-step-header', {\r\n                            hideHeader: true\r\n                        });\r\n                        analyticService.trackPageLoad(analyticService.pageList.retrieveVerification);\r\n                    } else {\r\n                        analyticService.trackPageLoad(analyticService.pageList.verfication);\r\n                        $rootScope.stepsHeader.currentStep = 1;\r\n                    }\r\n                }\r\n            }\r\n            setFocus();\r\n        };\r\n\r\n        vm.$onDestroy = function () {\r\n            navigateData = {\r\n                stateData: null\r\n            };\r\n            otpVerifyService.setStateDataInStorage(navigateData);\r\n        };\r\n\r\n        document.body.addEventListener(\"click\", function (event) {\r\n            setFocus();\r\n        });\r\n\r\n        document.body.addEventListener(\"keydown\", function (event) {\r\n            // This is to prevent kycValidate() call on enter key press on OTP hidden input\r\n            if (event.target.nodeName === 'INPUT') {\r\n                otpEnter = true;\r\n            } else {\r\n                otpEnter = false;\r\n            }\r\n        });\r\n\r\n        var setFocus = function () {\r\n            if ($state.current.name == 'app.journey.otp-verify') {\r\n                var name = $window.document.getElementById('otpTxt');\r\n                if (name) {\r\n                    name.focus();\r\n                }\r\n            }\r\n        }\r\n\r\n        vm.delOTP = function (event) {\r\n            if (event.which == 8 || event.which == 46) {\r\n                vm.popOTP();\r\n                // vm.OTPHidden = vm.OTPHidden.slice(0, -1);\r\n            } else if (event.which == 13 || event.keyCode == 13) {\r\n                if (vm.OTPHidden.length === 6) {\r\n                    vm.continue();\r\n                }\r\n                return false;\r\n            } else {\r\n                if (!isNaN(event.key)) {\r\n                    vm.pushOTP(parseInt(event.key));\r\n                    // if (vm.OTPHidden) {\r\n                    //     // var lastone = vm.OTPHidden.toString().split('').pop();\r\n                    //     // vm.input(parseInt(lastone));\r\n                    // }\r\n                }\r\n            }\r\n        };\r\n\r\n        vm.pushOTP = function (value) {\r\n            for (var i = 0; i < vm.inputs.length; i++) {\r\n                if (UtilService.isEmpty(vm.inputs[i])) {\r\n                    vm.inputs[i] = value;\r\n                    break;\r\n                }\r\n            }\r\n            vm.OTPHidden = vm.inputs.join('');\r\n        };\r\n\r\n        vm.popOTP = function () {\r\n            for (var i = vm.inputs.length - 1; i >= 0; i--) {\r\n                if (!UtilService.isEmpty(vm.inputs[i])) {\r\n                    vm.inputs[i] = '';\r\n                    break;\r\n                }\r\n            }\r\n            vm.OTPHidden = vm.inputs.join('');\r\n        };\r\n\r\n        vm.kycValidate = function () {\r\n            if (otpEnter) {\r\n                return;\r\n            }\r\n            var securityParams = {\r\n                robocheck: vm.robocheck ? vm.robocheck : ''\r\n            };\r\n            if (vm.regenerateOTP) {\r\n                vm.regenerateOTP = false;\r\n                var requestParam = {};\r\n                if (vm.signatureConsent) {\r\n                    requestParam.aadhar = parseInt(journeyService.getDataFromStorage().primaryApplicant.aadhaar);\r\n                    requestParam.arn = journeyService.getDataFromStorage().primaryApplicant.arn;\r\n                    otpVerifyService.kycValidate(requestParam, 'mudra', securityParams).then(function (data) {\r\n                        if (data.success) {\r\n                            vm.transactionNumber = data.transactionNumber;\r\n                            clearOTP();\r\n                            $scope.$watch(function () {\r\n                                return vm.regenerateOTP;\r\n                            }, function (newVal, oldVal) {\r\n                                $timeout(function () {\r\n                                    vm.regenerateOTP = true;\r\n                                }, 30000);\r\n                            });\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (vm.arn) {\r\n                        requestParam.pan = journeyService.getDataFromStorage().stateData.otpData.pan;\r\n                        requestParam.dialCode = journeyService.getDataFromStorage().stateData.otpData.dialCode;\r\n                        requestParam.mobile = journeyService.getDataFromStorage().stateData.otpData.mobile;\r\n                        otpVerifyService.retrievalApp(requestParam, securityParams).then(function (data) {\r\n                            if (data.success) {\r\n                                vm.txnId = data.txnId;\r\n                                vm.arn = data.arn;//added this line to get latest arn\r\n                                clearOTP();\r\n                                $scope.$watch(function () {\r\n                                    return vm.regenerateOTP;\r\n                                }, function (newVal, oldVal) {\r\n                                    $timeout(function () {\r\n                                        vm.regenerateOTP = true;\r\n                                    }, 30000);\r\n                                });\r\n                            }\r\n                        });\r\n                    } else {\r\n                        requestParam.aadhar = parseInt(journeyService.getDataFromStorage().primaryApplicant.aadhaar);\r\n                        requestParam.pan = journeyService.getDataFromStorage().primaryApplicant.pan;\r\n                        otpVerifyService.kycValidate(requestParam, 'personal', securityParams).then(function (data) {\r\n                            if (data.success) {\r\n                                vm.transactionNumber = data.transactionNumber;\r\n                                clearOTP();\r\n                                $scope.$watch(function () {\r\n                                    return vm.regenerateOTP;\r\n                                }, function (newVal, oldVal) {\r\n                                    $timeout(function () {\r\n                                        vm.regenerateOTP = true;\r\n                                    }, 30000);\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                analyticService.buttonList.buttonClick.event_content = \"Verify OTP: Generate another OTP\";\r\n                analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n            }\r\n        };\r\n\r\n        var clearOTP = function () {\r\n            vm.OTPHidden = \"\";\r\n            if (vm.inputs) {\r\n                for (var i = vm.inputs.length - 1; i >= 0; i--) {\r\n                    if (!UtilService.isEmpty(vm.inputs[i])) {\r\n                        vm.inputs[i] = '';\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var gotoView = function (viewNumber,cardkey) {\r\n           // alert(\"in view card key\" + cardkey);\r\n            switch (viewNumber) {\r\n                // case 0:\r\n                //     $state.go('app.journey.s4-personalDemographic');\r\n                //     break;\r\n                case 1:\r\n                    $state.go('app.journey.s6-incomeDetails',{'cardKey':cardkey});\r\n                    break;\r\n                case 2:\r\n                    $state.go('app.journey.s7-review',{'cardKey':cardkey});\r\n                    break;\r\n                case 3:\r\n                    $state.go('app.journey.card-DIP',{'cardKey':cardkey});\r\n                    break;\r\n                case 4:\r\n                    $state.go('app.journey.balance-transfer',{'cardKey':cardkey});\r\n                    break;\r\n                case 5:\r\n                    $state.go('app.journey.supplementary',{'cardKey':cardkey});\r\n                    break;\r\n                case 6:\r\n                    $state.go('app.journey.document',{'cardKey':cardkey});\r\n                    break;\r\n                case 7:\r\n                    $state.go('app.journey.signature',{'cardKey':cardkey});\r\n                    break;\r\n                case 8:\r\n                    $state.go('app.journey.signature',{'cardKey':cardkey});\r\n                    break;\r\n                case 9:\r\n                    $state.go('app.journey.staff-details',{'cardKey':cardkey});\r\n                    break;\r\n                case 10:\r\n                    $state.go('app.journey.s5-employmentDetails',{'cardKey':cardkey});\r\n                    break;\r\n                case 11:\r\n                    $state.go('app.journey.s3-personalDetails',{'cardKey':cardkey});\r\n                    break;\r\n                default:\r\n                    $state.go('app.journey.s1-cards');\r\n            }\r\n        };\r\n\r\n        vm.continue = function () {\r\n            var securityParams = {\r\n                robocheck: vm.robocheck ? vm.robocheck : ''\r\n            };\r\n            console.log(\"WHAT IS ARN===\",vm.arn);\r\n            if (vm.arn) {\r\n                console.log(\"WHAT IS signatureConsent===\",vm.signatureConsent);\r\n                if (vm.signatureConsent) {\r\n                    var requestData = {\r\n                        \"aadhar\": parseInt(journeyService.getDataFromStorage().primaryApplicant.aadhaar),\r\n                        \"otp\": vm.inputs.join(''),\r\n                        \"otpRetryCount\": vm.otpRetryCount,\r\n                        \"pan\": journeyService.getDataFromStorage().primaryApplicant.pan,\r\n                        \"transactionNumber\": vm.transactionNumber\r\n                    };\r\n                    otpVerifyService.eMudraData(requestData, vm.arn, securityParams).then(function (data) {\r\n                        if (data.errorCode === 7000 || data.errorCode === 7001 || data.errorCode === 7002) {\r\n                            $state.go('app.complete-ack', {\r\n                                saveData: {\r\n                                    name: vm.fullName,\r\n                                    arn: vm.arn,\r\n                                    statusCode: data.errorCode\r\n                                },cardKey:cardkey\r\n                            });\r\n                        } else if (data.errorCode == 1003) {\r\n                            vm.otpRetryCount = data.otpRetryCount + 1;\r\n                            vm.errMsg = 'Sorry! You seem to have entered invalid OTP. Please try again.';\r\n                            clearOTP();\r\n                            $anchorScroll();\r\n                        } else if (data.errorCode == 4005) {\r\n                            $state.go('app.exception');\r\n                        } else if (data.errorCode == 1015) {\r\n                            $state.go('app.max-otp');\r\n                        } else {\r\n                            vm.errMsg = \"Sorry! There seems to be a technical problem. We are unable to progress further. We will contact you within 2 working days to proceed with your Credit Card application.\";\r\n                            clearOTP();\r\n                            $anchorScroll();\r\n                        }\r\n                    }, function (err) {\r\n                        vm.errMsg = \"Sorry! There seems to be a technical problem. We are unable to progress further. We will contact you within 2 working days to proceed with your Credit Card application.\";\r\n                        clearOTP();\r\n                        $anchorScroll();\r\n                    });\r\n                } else {\r\n                    var requestParam = {};\r\n                    requestParam.otp = vm.inputs.join('');\r\n                    requestParam.arn = vm.arn;\r\n                    requestParam.txnId = vm.txnId;\r\n                    requestParam.otpRetryCount = vm.otpRetryCount;\r\n                    otpService.validateRetrieveOTP(requestParam, securityParams).then(function (data) {\r\n                      //  alert(\"inside validate\");\r\n                       //// alert(\"card key\"+data.card.key);\r\n                        vm.cardkey=data.card.key;\r\n                       // alert(vm.cardkey);\r\n                        if (data.errorCode == 1) {\r\n                            otpVerifyService.setRetrievalDataInStorage(data, vm.arn);\r\n                            //arun\r\n                            $rootScope.$broadcast(\"show-FRN\");\r\n                            $scope.$emit('card-selected');\r\n                            if (data.isStaffJourney === \"Y\") {\r\n                                if (UtilService.isStaffPlatform()) {\r\n                                    gotoView(data.viewNumber,vm.cardkey);\r\n                                } else {\r\n                                    window.location.href = \"resources/templates/staff-unsupported-env.html\";\r\n                                }\r\n                            } else {\r\n                                gotoView(data.viewNumber,vm.cardkey);\r\n                            }\r\n                        } else if (data.errorCode == 1003) {\r\n                            vm.otpRetryCount = data.otpRetryCount + 1;\r\n                            vm.errMsg = 'Sorry! You seem to have entered invalid OTP. Please try again.';\r\n                            clearOTP();\r\n                            $anchorScroll();\r\n                        } else if (data.errorCode == 1015) {\r\n                            $state.go('app.app-retrieval');\r\n                        } else if (data.errorCode == 1005) {\r\n                            vm.otpRetryCount = data.otpRetryCount + 1;\r\n                            vm.errMsg = 'OTP expired.Please generate new OTP.';\r\n                            clearOTP();\r\n                            $anchorScroll();\r\n                        }else if (data.errorCode == 10006) {\r\n                            //arun else if condition\r\n                           // vm.errMsg = \"Sorry! there seems to be some technical error. Please try again\";\r\n                            $state.go('app.journey.s1-cards');\r\n                        }\r\n                         else {\r\n                            $state.go('app.app-retrieval');\r\n                        }\r\n                    }, function (err) {\r\n                        vm.errMsg = \"Sorry! There seems to be a technical problem. We are unable to progress further. We will contact you within 2 working days to proceed with your Credit Card application.\";\r\n                        clearOTP();\r\n                        $anchorScroll();\r\n                    });\r\n                }\r\n            } else {\r\n                $rootScope.$broadcast('trigger-verification-loader', {\r\n                    showLoader: true,\r\n                    showCard: false,\r\n                    loaderType: 'AADHAR'\r\n                });\r\n                vm.showLoader = true;\r\n                var requestParam = {};\r\n                requestParam.aadhar = journeyService.getDataFromStorage().primaryApplicant.aadhaar;\r\n                requestParam.pan = journeyService.getDataFromStorage().primaryApplicant.pan;\r\n                requestParam.otp = vm.inputs.join('');\r\n                requestParam.transactionNumber = vm.transactionNumber;\r\n                requestParam.otpRetryCount = vm.otpRetryCount;\r\n                otpService.validateOTP(requestParam, securityParams).then(function (data) {\r\n                    if (data.errorCode !== 4001) {\r\n                        if (data.errorCode == 2 || data.errorCode == 1007 || data.errorCode == 1015 || data.errorCode == 1016 || data.errorCode == 1017 || data.errorCode == 1018 || data.errorCode == 1201 || data.errorCode == 5007) {\r\n                            hideLoader();\r\n                            if (data.errorCode == 1007) {\r\n                                analyticService.buttonList.error.event_content = \"Already a prestige customer\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            } else if (data.errorCode == 1015) {\r\n                                analyticService.buttonList.error.event_content = \"Max OTP attempt exceeded error\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            } else if (data.errorCode == 1016) {\r\n                                analyticService.buttonList.error.event_content = \"Aadhaar/Pan input - max attempt exceeded\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            } else if (data.errorCode == 1018) {\r\n                                analyticService.buttonList.error.event_content = \"Mobile number not registered with Aadhaar\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            } else if (data.errorCode == 1201) {\r\n                                analyticService.buttonList.error.event_content = \"Inelegible age error\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            } else if (data.errorCode == 2 || data.errorCode == 5007) {\r\n                                analyticService.buttonList.error.event_content = \"Connectivity issue error\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            }\r\n                            $state.go(\"app.journey.lead-generation\", {\r\n                                leadData: {\r\n                                    statusCode: data.errorCode,\r\n                                    fullName: data.fullName,\r\n                                    mobileNumber: data.mobile,\r\n                                    email: data.email,\r\n                                    residenceCity: data.residenceCity,\r\n                                    leadReason: data.leadGenerationReason\r\n                                },cardKey:cardkey\r\n                            });\r\n                        } else if (data.errorCode == 1002 || data.errorCode == 1014) {\r\n                            hideLoader();\r\n                            $state.go('app.journey.s2-qualifying', {\r\n                                step2data: {\r\n                                    errorCode: data.errorCode\r\n                                }\r\n                            });\r\n                        } else if (data.errorCode == 1 || data.errorCode == 1004) {\r\n                            $timeout(function () {\r\n                                otpVerifyService.setDataInStorage(data);\r\n                                $state.go('app.journey.s3-personalDetails', {\r\n                                    stateData: {\r\n                                        errorCode: data.errorCode\r\n                                    },cardKey:cardkey\r\n                                });\r\n                            }, 15000);\r\n                        } else if (data.errorCode == 1011) {\r\n                            hideLoader();\r\n                            //$state.go('app.app-retrieval');\r\n                            var retrieveInstance = $uibModal.open({\r\n                                component: 'retrieveModal'\r\n                            });\r\n                            retrieveInstance.result.then(function (isSelected) {\r\n                                if (isSelected) {\r\n                                    $state.go('app.app-retrieval');\r\n                                }\r\n                            }, function () { });\r\n                        } else if (data.errorCode == 1012 || data.errorCode == 1019 || data.errorCode == 1020) {\r\n                            // Existing pending application\r\n                            hideLoader();\r\n                            analyticService.buttonList.error.event_content = \"Existing submitted application error\";\r\n                            analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            $state.go('app.submitted-application',{cardKey:cardkey});\r\n                        } else if (data.errorCode == 1003) {\r\n                            hideLoader();\r\n                            vm.otpRetryCount = data.otpRetryCount + 1;\r\n                            vm.errMsg = 'Sorry! You seem to have entered invalid OTP. Please try again.';\r\n                            clearOTP();\r\n                            $anchorScroll();\r\n                        } else if (data.errorCode == 1005) {\r\n                            hideLoader();\r\n                            vm.otpRetryCount = data.otpRetryCount + 1;\r\n                            vm.errMsg = 'OTP expired.Please generate new OTP.';\r\n                            clearOTP();\r\n                            $anchorScroll();\r\n                        } else {\r\n                            hideLoader();\r\n                            vm.errMsg = \"Sorry! There seems to be a technical problem. We are unable to progress further. We will contact you within 2 working days to proceed with your Credit Card application.\";\r\n                            clearOTP();\r\n                            $anchorScroll();\r\n                        }\r\n                    } else {\r\n                        hideLoader();\r\n                        vm.errMsg = \"Sorry! There seems to be a technical problem. We are unable to progress further. We will contact you within 2 working days to proceed with your Credit Card application.\";\r\n                        clearOTP();\r\n                        $anchorScroll();\r\n                    }\r\n                }, function (err) {\r\n                    hideLoader();\r\n                    vm.errMsg = \"Sorry! There seems to be a technical problem. We are unable to progress further. We will contact you wirhin 2 working days to proceed with your Credit Card application.\";\r\n                    clearOTP();\r\n                    $anchorScroll();\r\n                });\r\n            }\r\n            analyticService.buttonList.buttonClick.event_content = \"Verify OTP: Continue\";\r\n            analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n        };\r\n\r\n        var hideLoader = function () {\r\n            $rootScope.$broadcast('trigger-verification-loader', {\r\n                showLoader: false,\r\n                showCard: false,\r\n                loaderType: 'AADHAR'\r\n            });\r\n            vm.showLoader = false;\r\n        };\r\n\r\n        vm.back = function () {\r\n            journeyService.getDataFromStorage();\r\n            if (vm.arn) {\r\n                if (vm.signatureConsent)\r\n                    $state.go('app.journey.signature');\r\n                else\r\n                    $state.go('app.app-retrieval');\r\n            } else {\r\n                $state.go('app.journey.s2-qualifying');\r\n            }\r\n            analyticService.buttonList.buttonClick.event_content = \"OTP Verify: Back\";\r\n            analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n        };\r\n\r\n        vm.closeError = function () {\r\n            vm.errMsg = false;\r\n        };\r\n    }\r\n\r\n    var otpVerify = angular.module('app').component('otpVerify', {\r\n        template: require('./otp-verify.component.html'),\r\n        controller: ['$rootScope', '$scope', '$state', '$window', '$timeout', '$uibModal', '$anchorScroll', 'UtilService', 'otpService', 'otpVerifyService', 'journeyService', 'analyticService', otpVerify]\r\n    });\r\n\r\n    module.exports = otpVerify.name;\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.js\n// module id = ./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.js\n// module chunks = 5","(function () {\r\n    'use strict';\r\n\r\n    var otpVerifyService = angular.module('app').service('otpVerifyService', ['$rootScope', '$filter', 'appState', '$http', 'CONFIG', 'UtilService', function ($rootScope, $filter, appState, $http, CONFIG, UtilService) {\r\n\r\n        this.setStateDataInStorage = function (formDetails) {\r\n            var arnData = angular.merge({}, appState.getApplicationData(), formDetails);\r\n            appState.setApplicationData(arnData);\r\n        };\r\n\r\n        this.setDataInStorage = function (formDetails) {\r\n            /* var modifiedPageState = {\r\n                \"primaryApplicant\": formDetails\r\n            } */\r\n            var modifiedPageState = angular.merge({}, appState.getApplicationData().primaryApplicant, formDetails);\r\n            var arnData = {\r\n                \"primaryApplicant\": modifiedPageState\r\n            };\r\n            // var fatherName = arnData.primaryApplicant.fatherName;\r\n            // if (fatherName == null || fatherName == '') {\r\n            //     arnData.primaryApplicant.fatherEditable = true;\r\n            // } else {\r\n            //     arnData.primaryApplicant.fatherEditable = false;\r\n            // }\r\n            appState.setApplicationData(arnData);\r\n        };\r\n\r\n        this.kycValidate = function (kycData, check, securityParams) {\r\n            var apiURL, httpMethod;\r\n            if (check == 'personal') {\r\n                if ($rootScope.integrationsActive) {\r\n                    httpMethod = \"POST\";\r\n                    apiURL = CONFIG.apiUrl + '/kyc/aadhaarpanvalidate' + '?hash_id=' + Math.random();\r\n                } else {\r\n                    httpMethod = \"GET\";\r\n                    apiURL = 'resources/data/mock/otp-verify/kyc_aadhar_pan_validate.json';\r\n                }\r\n                return $http({\r\n                    method: httpMethod,\r\n                    url: apiURL,\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    data: JSON.stringify(kycData),\r\n                    params: securityParams\r\n                }).then(function (response) {\r\n                    if (response && response.status === 200 && response.data) {\r\n                        return response.data;\r\n                    } else if (response && response.validationErrors) {\r\n                        //return pageError = \"Please ensure the values added in form fields are appropriate, and retry.\";\r\n                    } else {\r\n                        //Need to display \"response\" below page heading (above form).\r\n                        //vm.pageError = \"Some error occurred on the server side. Please try after some time.\";\r\n                    }\r\n                    return;\r\n                }, function (response) {\r\n                    return;\r\n                });\r\n            } else if (check == 'mudra') {\r\n                if ($rootScope.integrationsActive) {\r\n                    apiURL = CONFIG.apiUrl + '/emudhra/getOtp/' + kycData.aadhar + '/' + kycData.arn + '?hash_id=' + Math.random();\r\n                } else {\r\n                    apiURL = 'resources/data/mock/otp-verify/emudra_get_otp.json';\r\n                }\r\n                return $http({\r\n                    method: 'GET',\r\n                    url: apiURL,\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    params: securityParams\r\n                }).then(function (response) {\r\n                    if (response.status === 200 && response.data) {\r\n                        return response.data;\r\n                    } else if (response && response.validationErrors) { } else { }\r\n                    return;\r\n                }, function (response) {\r\n                    return;\r\n                });\r\n            }\r\n        };\r\n\r\n        this.eMudraData = function (eMudraData, arn, securityParams) {\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = \"POST\";\r\n                apiURL = CONFIG.apiUrl + '/emudhra/validateOtp/' + arn + '?hash_id=' + Math.random();\r\n            } else {\r\n                httpMethod = \"GET\";\r\n                apiURL = 'resources/data/mock/otp-verify/emudra_validate_otp.json';\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: JSON.stringify(eMudraData),\r\n                params: securityParams\r\n            }).then(function (response) {\r\n                if (response && response.status === 200 && response.data) {\r\n                    return response.data;\r\n                } else if (response && response.validationErrors) {\r\n                    //return pageError = \"Please ensure the values added in form fields are appropriate, and retry.\";\r\n                } else {\r\n                    //Need to display \"response\" below page heading (above form).\r\n                    //vm.pageError = \"Some error occurred on the server side. Please try after some time.\";\r\n                }\r\n                return;\r\n            }, function (response) {\r\n                return;\r\n            });\r\n        };\r\n\r\n        this.retrievalApp = function (data, securityParams) {\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = \"POST\";\r\n                apiURL = CONFIG.apiUrl + '/retrieveapplication/otpgenerate' + '?hash_id=' + Math.random();\r\n            } else {\r\n                httpMethod = \"GET\";\r\n                apiURL = 'resources/data/mock/otp-verify/kyc_aadhar_pan_validate.json';\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: JSON.stringify(data),\r\n                params: securityParams\r\n            }).then(function (response) {\r\n                if (response && response.status === 200 && response.data) {\r\n                    return response.data;\r\n                } else if (response && response.validationErrors) {\r\n                    //return pageError = \"Please ensure the values added in form fields are appropriate, and retry.\";\r\n                } else {\r\n                    //Need to display \"response\" below page heading (above form).\r\n                    //vm.pageError = \"Some error occurred on the server side. Please try after some time.\";\r\n                }\r\n                return;\r\n            }, function (response) {\r\n                return;\r\n            });\r\n        };\r\n\r\n        this.setRetrievalDataInStorage = function (formDetails, arn) {\r\n            var isStaffJourney = formDetails.isStaffJourney === 'Y';\r\n            appState.setStaffJourney(isStaffJourney);\r\n            var modifiedPageState = {\r\n                \"primaryApplicant\": formDetails.primaryApplicantDetails,\r\n            };\r\n            var modifiedPageStateContact = {\r\n                //\"vcipType\":appData.vcipFlag,\r\n                \"ekyc\":formDetails.ekycDone\r\n            };\r\n            modifiedPageState.primaryApplicant.arn = arn;\r\n            // modifiedPageState.primaryApplicant.demographicDetails = formDetails.demographicDetails;\r\n            //arun\r\n            modifiedPageState.primaryApplicant.frnNumber = formDetails.frnNumber;\r\n            modifiedPageState.primaryApplicant.employmentStatus = formDetails.employmentStatus;\r\n            modifiedPageState.primaryApplicant.employmentDetails = formDetails.employmentDetails;\r\n            modifiedPageState.primaryApplicant.consents = formDetails.consents;\r\n            modifiedPageState.primaryApplicant.dipDetails = formDetails.dipDetails;\r\n            modifiedPageState.primaryApplicant.balanceTransfer = formDetails.balanceTransfer;\r\n            modifiedPageState.primaryApplicant.supplementaryCard = formDetails.supplementaryCard;\r\n            modifiedPageState.primaryApplicant.documents = formDetails.documents;\r\n            modifiedPageState.primaryApplicant.hasSkippedPerfios = formDetails.hasSkippedPerfios;\r\n            modifiedPageState.primaryApplicant.card = formDetails.card;\r\n            // var incomeDocs = modifiedPageState.primaryApplicant.documents.incomeProof;\r\n            // if (!UtilService.isEmpty(incomeDocs) && incomeDocs.length > 0 && !UtilService.isEmpty(incomeDocs[0])) {\r\n            //     for (var i = 0; i < incomeDocs.length; i++) {\r\n            //         if (incomeDocs[i].document) {\r\n            //             var temp = \"\";\r\n            //             temp = \"data:\" + incomeDocs[i].documentType + \";base64,\" + incomeDocs[i].document;\r\n            //             incomeDocs[i].document = temp;\r\n            //         }\r\n            //     };\r\n            //     modifiedPageState.primaryApplicant.documents.incomeProof[0] = $filter('filter')(incomeDocs, { \"documentName\": \"IncomeDocument1\" })[0];\r\n            //     if (incomeDocs.length > 1) {\r\n            //         modifiedPageState.primaryApplicant.documents.incomeProof[1] = $filter('filter')(incomeDocs, { \"documentName\": \"IncomeDocument2\" })[0];\r\n            //     }\r\n            // }\r\n            var arnData = angular.merge({}, appState.getApplicationData(), modifiedPageState);\r\n            // var fatherName = arnData.primaryApplicant.fatherName;\r\n            // if (fatherName == null || fatherName == '') {\r\n            //     arnData.primaryApplicant.fatherEditable = true;\r\n            // } else {\r\n            //     arnData.primaryApplicant.fatherEditable = false;\r\n            // }\r\n            appState.setApplicationData(arnData);\r\n            appState.setContactDetails(modifiedPageStateContact);//to access vcip flag // to access ekyc done or not \r\n            console.log(\"Retrival data set in theContactDetails===\" ,JSON.stringify(modifiedPageStateContact));\r\n        };\r\n\r\n        this.getDataFromStorage = function () {\r\n            return appState.getApplicationData();\r\n        };\r\n\r\n    }]);\r\n\r\n    module.exports = otpVerifyService.name;\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.service.js\n// module id = ./src/app/components/journey/otp-auth/otp-verify/otp-verify.component.service.js\n// module chunks = 5","module.exports = \"<div class=modal-header> <div class=heading-container> </div> <div class=close-button-container> <button type=button class=close aria-label=Close ng-click=$ctrl.cancel()> <span aria-hidden=true>×</span> </button> </div> </div> <div class=modal-body> <p class=no-margin-b> Our records indicate that you have a pending application with us in the past 30 days. Click OK to resume your application. </p> </div> <div class=modal-footer> <div class=buttons-container> <button class=button-primary ng-click=$ctrl.Close(true)>OK</button> </div> </div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.html\n// module id = ./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.html\n// module chunks = 5","(function () {\r\n    'use strict';\r\n    var angular = require('angular');\r\n    require('./retrieve.modal.component.scss')\r\n\r\n    var modalController = function () {\r\n        var vm = this;\r\n\r\n        vm.$onInit = function () {\r\n\r\n        };\r\n\r\n        /**\r\n         * This function is triggered when we select or unselect card.\r\n         * We push the selected card in selectedPrimaryCards array and\r\n         *  pop the unselected card.\r\n         */\r\n        vm.Close = function (isSelected) {\r\n            vm.close({\r\n                $value: isSelected\r\n            });\r\n        };\r\n\r\n        vm.cancel = function () {\r\n            vm.dismiss({\r\n                $value: 'cancel'\r\n            });\r\n        };\r\n    };\r\n\r\n    var modalComp = angular.module('app').component('retrieveModal', {\r\n        template: require('./retrieve.modal.component.html'),\r\n        bindings: {\r\n            resolve: '<',\r\n            close: '&',\r\n            dismiss: '&'\r\n        },\r\n        controller: [modalController]\r\n    });\r\n    module.exports = modalComp.name;\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.js\n// module id = ./src/app/components/journey/otp-auth/otp-verify/retrieve.modal/retrieve.modal.component.js\n// module chunks = 5"],"sourceRoot":""}