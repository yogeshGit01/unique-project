{"version":3,"sources":["webpack:///resources/js/d9beb5d92017231a22b512.js","webpack:///./src/app/components/journey/step9/step9.component.html","webpack:///./src/app/components/journey/step9/step9.component.js","webpack:///./src/app/components/journey/step9/step9.component.service.js"],"names":["webpackJsonp","./src/app/components/journey/step9/step9.component.html","module","exports","./src/app/components/journey/step9/step9.component.js","__webpack_require__","angular","step9Comp","component","template","controller","$rootScope","$scope","$uibModal","$anchorScroll","$state","journeyService","balanceTransferService","analyticService","UtilService","currentMonth","vm","this","tentureList","$onInit","$broadcast","hideHeader","showSelectedCard","stepsHeader","currentStep","showARN","dipARN","getApplicantInfo","dipArn","selectedCard","getSelectedCard","currentDate","Date","currentYear","getFullYear","getMonth","model","getUserDetails","getBanks","then","data","bankList","pageList","balanceTransfer","internal_reference_id","getDataFromStorageContact","adobeId","trackPageLoad","goback","step9Form","year","$invalid","expiryYear","$$rawModelValue","month","expiryMonth","cardNumber","balanceTranserData","primaryApplicant","amount","parseInt","cardExpiryDate","isEmpty","nameOfBank","bank","tenure","setDataInStorage","go","cardKey","key","buttonList","buttonClick","event_content","trackUserAction","checkCreditLimit","amountElem","$setValidity","transAmount","transferLimit","next","expiryChange","$valid","securityParams","robocheck","balanceTransferTaken","sendBalanceTransferData","result","success","saveFormDetailsInStorage","supplementaryCardApplied","isIncomeDocRequired","submitted","focusOnInvalid","save","open","backdrop","keyboard","modalFade","windowClass","isSelected","saveData","name","errorCode","sessionError","doFormat","monthElement","yearElement","length","./src/app/components/journey/step9/step9.component.scss","./src/app/components/journey/step9/step9.component.service.js","service","$http","appState","CONFIG","self","balanceTransferData","mergeApplicationData","isSaveExit","apiURL","httpMethod","integrationsActive","arn","getApplicationData","apiUrl","Math","random","method","url","headers","Content-Type","JSON","stringify","params","response","status","validationErrors","userDTO","localState","dipDetails","creditLimit","arr","split","temp","join","toString"],"mappings":"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","file":"resources/js/d9beb5d92017231a22b512.js","sourcesContent":["webpackJsonp([12],{\n\n/***/ \"./src/app/components/journey/step9/step9.component.html\":\n/* unknown exports provided */\n/* all exports used */\n/*!***************************************************************!*\\\n  !*** ./src/app/components/journey/step9/step9.component.html ***!\n  \\***************************************************************/\n/***/ (function(module, exports) {\n\nmodule.exports = \"<form name=step9Form autocomplete=off novalidate> <input type=text class=hidden-field ng-model=$ctrl.robocheck tabindex=-1> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <h1 class=\\\"brand-bar no-margin-top\\\">Balance Transfer</h1> </div> </div> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <p class=no-margin-b> Transfer outstanding balances from your other bank credit card to your HSBC Credit Card and benefit from our low interest rates & flexible repayment options.</p> </div> </div> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <h2 class=brand-bar>Key features:</h2> <ul> <li>Savings: Repayment at low interest rates</li> <li>Convenience: Paperless application process</li> </ul> </div> </div> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <p>Find out more about <a target=_blank href=http://www.hsbc.co.in/1/2/personal/credit-cards/balance-transfer class=new-tab-link aria-label=\\\"This link will open more information about collecting and using information in a new tab\\\"> <span class=text>Balance Transfer rates</span> <span class=\\\"icon icon-new-window\\\" aria-hidden=true role=presentation></span> </a> on EMI (Equated Monthly Installment).</p> <p>View <a target=_blank href=http://www.hsbc.co.in/1/2/personal/credit-cards/balance-transfer-terms class=new-tab-link aria-label=\\\"This link will open more information about collecting and using information in a new tab\\\"> <span class=text>Terms & Conditions</span> <span class=\\\"icon icon-new-window\\\" aria-hidden=true role=presentation></span> </a> for Balance Transfer.</p> </div> </div> <p class=no-margin-b> Please provide your details below and we will contact you within 5 working days after your HSBC Credit Card is issued.</p> <div class=row> <div class=\\\"col-md-4 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label id=bankNameLbl for=bank>Name of bank</label> <div ng-class=\\\"{'has-error': step9Form.bank.$invalid && (step9Form.bank.$touched || $ctrl.submitted)}\\\"> <custom-select> <select id=bank name=bank class=form-control ng-model=$ctrl.model.bank ng-options=\\\"item for item in $ctrl.bankList\\\" aria-describedby=bankNameErrMsg aria-invalid=\\\"{{step9Form.bank.$invalid && (step9Form.bank.$touched || $ctrl.submitted)}}\\\" required> <option value=\\\"\\\">Please select</option> </select> </custom-select> </div> <div id=bankNameErrMsg class=\\\"form-group remove-margin\\\" ng-class=\\\"{'has-error': step9Form.bank.$invalid}\\\"> <validation-msg ng-if=\\\"step9Form.bank.$error.required && (step9Form.bank.$touched || $ctrl.submitted)\\\"> Please select a bank to continue with your application.</validation-msg> </div> </div> </div> <div class=\\\"col-md-4 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=cardNumber>Card number</label> <div ng-class=\\\"{ 'has-error' : step9Form.cardNumber.$invalid  && ($ctrl.submitted || step9Form.cardNumber.$touched)}\\\"> <input type=tel id=cardNumber name=cardNumber aria-describedby=cardNumErrMsg trim class=form-control only-number=18 onkeypress=\\\"0===this.value.length&&32===event.charCode&&event.preventDefault()\\\" ng-maxlength=18 maxlength=18 minlength=13 ng-minlength=13 ng-model=$ctrl.model.cardNumber aria-invalid=\\\"{{step9Form.cardNumber.$invalid  && ($ctrl.submitted || step9Form.cardNumber.$touched)}}\\\" required> </div> <div id=cardNumErrMsg class=\\\"form-group col-md-12 col-sm-12 col-xs-12 remove-margin\\\" ng-class=\\\"{'has-error' : (step9Form.cardNumber.$invalid && ($ctrl.submitted || step9Form.cardNumber.$touched))}\\\"> <div class=row> <validation-msg ng-if=\\\"(step9Form.cardNumber.$error.required && step9Form.cardNumber.$touched) || (step9Form.cardNumber.$error.required && $ctrl.submitted)\\\"> Please enter your card number to continue with your application. </validation-msg> <validation-msg ng-if=\\\"step9Form.cardNumber.$error.maxlength && !step9Form.cardNumber.$error.pattern && ($ctrl.submitted || step9Form.cardNumber.$touched)\\\"> Maximum of 18 digits allowed for your card number.</validation-msg> <validation-msg ng-if=\\\"step9Form.cardNumber.$error.minlength && !step9Form.cardNumber.$error.pattern && ($ctrl.submitted || step9Form.cardNumber.$touched)\\\"> Please enter a minimum of 13 digits. </validation-msg> <validation-msg ng-if=\\\"step9Form.cardNumber.$error.pattern && ($ctrl.submitted || step9Form.cardNumber.$touched)\\\"> Your card number contains invalid digits.Please check and Renter. </validation-msg> </div> </div> </div> </div> </div> <div class=row> <div class=\\\"col-md-4 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <label id=cardExpiryLabel class=\\\"\\\">Other bank’s card expiry (mm/yyyy)</label> <a tabindex=0 aria-label=\\\"tooltip Your card should not be expiring in the next one month.\\\" uib-popover=\\\"Your card should not be expiring in the next one month.\\\" popover-placement=auto popover-trigger=\\\"'mouseenter focus'\\\" class=\\\"icon icon-circle-info\\\"></a> </div> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <div class=\\\"col-md-6 col-sm-6 col-xs-6 remove-padding\\\"> <div ng-class=\\\"{'has-error': step9Form.month.$invalid && (step9Form.month.$touched || $ctrl.submitted)}\\\"> <input type=tel trim name=month aria-label=\\\"Card expiry (MM)\\\" aria-describedby=otherCardExpErrMsg ng-model=$ctrl.model.expiryMonth class=\\\"form-control text-center\\\" ng-keyup=$ctrl.expiryChange() ng-blur=$ctrl.expiryChange(true) onkeypress=\\\"0===this.value.length&&32===event.charCode&&event.preventDefault()\\\" ng-maxlength=2 only-number=2 maxlength=2 max=12 min=1 placeholder=MM aria-invalid=\\\"{{step9Form.month.$invalid && (step9Form.month.$touched || $ctrl.submitted)}}\\\" required> </div> </div> <div class=\\\"col-md-6 col-sm-6 col-xs-6 remove-padding\\\"> <div ng-class=\\\"{'has-error': step9Form.year.$invalid && (step9Form.year.$touched || $ctrl.submitted)}\\\"> <input type=tel trim name=year aria-label=\\\"Card expiry (YYYY)\\\" aria-describedby=otherCardExpErrMsg ng-model=$ctrl.model.expiryYear class=\\\"form-control text-center\\\" ng-keyup=$ctrl.expiryChange() ng-blur=$ctrl.expiryChange(true) onkeypress=\\\"0===this.value.length&&32===event.charCode&&event.preventDefault()\\\" ng-maxlength=4 ng-minlength=4 only-number=4 maxlength=4 placeholder=YYYY aria-invalid=\\\"{{step9Form.year.$invalid && (step9Form.year.$touched || $ctrl.submitted)}}\\\" required> </div> </div> </div> </div> <div class=\\\"\\\"> <div id=otherCardExpErrMsg class=\\\"col-md-12 col-sm-12 col-xs-12 remove-margin\\\" ng-class=\\\"{'has-error': step9Form.year.$invalid || step9Form.month.$invalid}\\\"> <div class=row> <validation-msg ng-if=\\\"(step9Form.month.$error.required && (step9Form.month.$touched || $ctrl.submitted)) || (step9Form.year.$error.required && step9Form.month.$valid && (step9Form.year.$touched || $ctrl.submitted))\\\"> Please enter your other bank's card expiry date to continue with your application. </validation-msg> <validation-msg ng-if=\\\"step9Form.year.$error.minlength && (step9Form.year.$touched || $ctrl.submitted) && step9Form.month.$valid\\\"> Years of other bank's card expiry date should contain exactly 4 digits. </validation-msg> <validation-msg ng-if=\\\"step9Form.month.$error.min && !step9Form.month.$error.required\\\"> Month of other bank's card expiry date cannot be lesser than 1. </validation-msg> <validation-msg ng-if=\\\"step9Form.year.$error.min && step9Form.month.$valid\\\"> Year of other bank's card expiry date cannot be less than current year. </validation-msg> <validation-msg ng-if=\\\"step9Form.year.$error.nextMonth && !step9Form.year.$error.required && step9Form.month.$valid && (step9Form.year.$touched || $ctrl.submitted)\\\"> Your card should not be expiring in the next one month. </validation-msg> <validation-msg ng-if=\\\"step9Form.month.$error.max && !step9Form.month.$error.required\\\"> Month of other bank's card expiry date cannot be greater than 12. </validation-msg> </div> </div> </div> </div> </div> <div class=\\\"col-md-4 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=amount>Amount to be transferred</label> <a tabindex=0 aria-label=\\\"tooltip Amount should be at least Rs. 5,000.\\\" uib-popover=\\\"Amount should be at least Rs. 5,000.\\\" popover-placement=auto popover-trigger=\\\"'mouseenter focus'\\\" class=\\\"icon icon-circle-info\\\"></a> <div ng-class=\\\"{'has-error': step9Form.amount.$invalid && (step9Form.amount.$touched || $ctrl.submitted)}\\\"> <input type=tel trim id=amount name=amount aria-describedby=trasAmtErrMsg class=form-control ng-blur=$ctrl.checkCreditLimit(step9Form.amount) only-number=10 onkeypress=\\\"0===this.value.length&&32===event.charCode&&event.preventDefault()\\\" ng-keyup=$ctrl.checkCreditLimit(step9Form.amount) ng-model=$ctrl.model.amount aria-invalid=\\\"{{step9Form.amount.$invalid && (step9Form.amount.$touched || $ctrl.submitted)}}\\\" required> </div> <div id=trasAmtErrMsg class=\\\"form-group col-md-12 remove-margin\\\" ng-class=\\\"{'has-error': step9Form.amount.$invalid}\\\"> <div class=row> <validation-msg ng-if=\\\"step9Form.amount.$error.required && (step9Form.amount.$touched || $ctrl.submitted)\\\"> Please enter the amount to be transferred to continue with your application. </validation-msg> <validation-msg ng-if=\\\"step9Form.amount.$error.max && !step9Form.amount.$error.required && (step9Form.amount.$touched || $ctrl.submitted)\\\"> Amount exceeds 95% of the assigned credit limit. </validation-msg> <validation-msg ng-if=\\\"step9Form.amount.$error.min && !step9Form.amount.$error.required && (step9Form.amount.$touched || $ctrl.submitted)\\\"> Amount should be at least Rs. 5,000. </validation-msg> </div> </div> </div> </div> </div> <div class=row> <div class=\\\"col-md-4 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label id=tenureLbl for=tenure>Tenure</label> <div ng-class=\\\"{'has-error': step9Form.tenure.$invalid && (step9Form.tenure.$touched || $ctrl.submitted)}\\\"> <custom-select> <select id=tenure name=tenure class=form-control ng-model=$ctrl.model.tenure ng-options=\\\"item for item in $ctrl.tentureList\\\" aria-describedby=tenureErrMsg aria-invalid=\\\"{{step9Form.tenure.$invalid && (step9Form.tenure.$touched || $ctrl.submitted)}}\\\" required> <option value=\\\"\\\">Please select</option> </select> </custom-select> </div> <div id=tenureErrMsg class=\\\"form-group remove-margin\\\" ng-class=\\\"{'has-error': step9Form.tenure.$invalid}\\\"> <validation-msg ng-if=\\\"step9Form.tenure.$error.required && (step9Form.tenure.$touched || $ctrl.submitted)\\\"> Please select a tenure to continue with your application. </validation-msg> </div> </div> </div> </div> <step-footer show-back=true back-callback=$ctrl.goback() show-save=true save-callback=$ctrl.save() show-continue=true continue-button-id=continue-btn continue-disabled=false continue-callback=$ctrl.next()> </step-footer> </form>\";\n\n/***/ }),\n\n/***/ \"./src/app/components/journey/step9/step9.component.js\":\n/* unknown exports provided */\n/* all exports used */\n/*!*************************************************************!*\\\n  !*** ./src/app/components/journey/step9/step9.component.js ***!\n  \\*************************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n(function () {\r\n    'use strict';\r\n    var angular = __webpack_require__(/*! angular */ \"./node_modules/angular/index.js\");\r\n    __webpack_require__(/*! ./step9.component.scss */ \"./src/app/components/journey/step9/step9.component.scss\");\r\n    __webpack_require__(/*! ./step9.component.service */ \"./src/app/components/journey/step9/step9.component.service.js\");\r\n    // require('../save-exit.modal/overlayConfirmation.modal.component.js');\r\n\r\n    var step9Comp = angular.module('journey.module').component('step9', {\r\n        template: __webpack_require__(/*! ./step9.component.html */ \"./src/app/components/journey/step9/step9.component.html\"),\r\n        controller: ['$rootScope', '$scope', '$uibModal', '$anchorScroll', '$state', 'journeyService', 'balanceTransferService', 'analyticService', 'UtilService',\r\n            function ($rootScope, $scope, $uibModal, $anchorScroll, $state, journeyService, balanceTransferService, analyticService, UtilService) {\r\n                var vm = this, currentMonth;\r\n                vm.tentureList = ['3 months', '6 months', '9 months', '12 months', '18 months', '24 months'];\r\n\r\n                vm.$onInit = function () {\r\n                    $rootScope.$broadcast('hide-step-header', {\r\n                        hideHeader: false\r\n                    });\r\n                    $rootScope.showSelectedCard = true;\r\n                    $anchorScroll();\r\n                    $rootScope.stepsHeader.currentStep = 4;\r\n                    $rootScope.showARN = true;\r\n                    $rootScope.dipARN = journeyService.getApplicantInfo(\"dipDetails\").dipArn;\r\n                    vm.selectedCard = journeyService.getSelectedCard();\r\n                    var currentDate = new Date();\r\n                    vm.currentYear = currentDate.getFullYear();\r\n                    currentMonth = currentDate.getMonth() + 3;\r\n                    if (currentMonth > 12) {\r\n                        vm.currentYear = vm.currentYear + 1;\r\n                        currentMonth = currentMonth - 12;\r\n                    }\r\n                    vm.model = balanceTransferService.getUserDetails();\r\n                    journeyService.getBanks().then(function (data) {\r\n                        vm.bankList = data;\r\n                    });\r\n                    analyticService.pageList.balanceTransfer.internal_reference_id = journeyService.getDataFromStorageContact().adobeId;\r\n                    analyticService.trackPageLoad(analyticService.pageList.balanceTransfer);\r\n                };\r\n\r\n                vm.goback = function () {\r\n                    if ($scope.step9Form.year.$invalid) {\r\n                        vm.model.expiryYear = $scope.step9Form.year.$$rawModelValue;\r\n                    }\r\n                    if ($scope.step9Form.month.$invalid) {\r\n                        vm.model.expiryMonth = $scope.step9Form.month.$$rawModelValue;\r\n                    }\r\n                    if ($scope.step9Form.cardNumber.$invalid) {\r\n                        vm.model.cardNumber = $scope.step9Form.cardNumber.$$rawModelValue;\r\n                    }\r\n                    var balanceTranserData = {\r\n                        \"primaryApplicant\": {\r\n                            \"balanceTransfer\": {\r\n                                \"amount\": parseInt(vm.model.amount),\r\n                                \"cardExpiryDate\": (!UtilService.isEmpty(vm.model.expiryMonth) ? vm.model.expiryMonth : '') + '/' + (!UtilService.isEmpty(vm.model.expiryYear) ? vm.model.expiryYear : ''),\r\n                                \"cardNumber\": vm.model.cardNumber,\r\n                                \"nameOfBank\": vm.model.bank,\r\n                                \"tenure\": vm.model.tenure\r\n                            }\r\n                        }\r\n                    };\r\n                    balanceTransferService.setDataInStorage(balanceTranserData);\r\n                    $state.go('app.journey.card-DIP',{'cardKey':vm.selectedCard.key});\r\n                    analyticService.buttonList.buttonClick.event_content = \"back\";\r\n                    analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n                };\r\n\r\n                vm.checkCreditLimit = function (amountElem) {\r\n                    if (amountElem) {\r\n                        amountElem.$setValidity(\"max\", true);\r\n                        amountElem.$setValidity(\"min\", true);\r\n                        var transAmount = parseInt(vm.model.amount);\r\n                        if (transAmount < 5000) {\r\n                            amountElem.$setValidity(\"min\", false);\r\n                        }\r\n                        if (transAmount > vm.model.transferLimit) {\r\n                            amountElem.$setValidity(\"max\", false);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                vm.next = function () {\r\n                    vm.checkCreditLimit($scope.step9Form.amount);\r\n                    vm.expiryChange();\r\n                    if ($scope.step9Form.$valid) {\r\n                        var securityParams = {\r\n                            robocheck: vm.robocheck ? vm.robocheck : ''\r\n                        };\r\n                        var balanceTranserData = {\r\n                            amount: parseInt(vm.model.amount),\r\n                            cardExpiryDate: vm.model.expiryMonth + '/' + vm.model.expiryYear,\r\n                            cardNumber: vm.model.cardNumber,\r\n                            nameOfBank: vm.model.bank,\r\n                            tenure: vm.model.tenure,\r\n                            balanceTransferTaken: \"Y\"\r\n                        };\r\n                        balanceTransferService.sendBalanceTransferData(balanceTranserData, securityParams, false).then(function (result) {\r\n                            if (result.success) {\r\n                                saveFormDetailsInStorage();\r\n                                if (vm.model.supplementaryCardApplied) {\r\n                                    $state.go('app.journey.supplementary',{'cardKey':vm.selectedCard.key});\r\n                                } else if (journeyService.isIncomeDocRequired()) {\r\n                                    $state.go('app.journey.document',{'cardKey':vm.selectedCard.key});\r\n                                } else {\r\n                                    $state.go('app.journey.signature',{'cardKey':vm.selectedCard.key});\r\n                                }\r\n                            }\r\n                        });\r\n                    } else {\r\n                        vm.submitted = true;\r\n                        UtilService.focusOnInvalid(\"step9Form\");\r\n                    }\r\n                    analyticService.buttonList.buttonClick.event_content = \"continue\";\r\n                    analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n                };\r\n\r\n                var saveFormDetailsInStorage = function () {\r\n                    var balanceTranserData = {\r\n                        \"primaryApplicant\": {\r\n                            \"balanceTransfer\": {\r\n                                \"amount\": parseInt(vm.model.amount),\r\n                                \"cardExpiryDate\": !UtilService.isEmpty(vm.model.expiryMonth) && !UtilService.isEmpty(vm.model.expiryYear) ? vm.model.expiryMonth + '/' + vm.model.expiryYear : '',\r\n                                \"cardNumber\": vm.model.cardNumber,\r\n                                \"nameOfBank\": vm.model.bank,\r\n                                \"tenure\": vm.model.tenure\r\n                            }\r\n                        }\r\n                    };\r\n                    balanceTransferService.setDataInStorage(balanceTranserData);\r\n                };\r\n\r\n                vm.save = function (result) {\r\n                    var modalInstance = $uibModal.open({\r\n                        backdrop: 'static',\r\n                        keyboard: false,\r\n                        modalFade: true,\r\n                        component: \"overlaySaveConfirmation\",\r\n                        windowClass: 'card-detail-modal'\r\n                    });\r\n                    modalInstance.result.then(function (isSelected) {\r\n                        if (isSelected) {\r\n                            var balanceTranserData = {\r\n                                \"amount\": parseInt(vm.model.amount),\r\n                                \"cardExpiryDate\": !UtilService.isEmpty(vm.model.expiryMonth) && !UtilService.isEmpty(vm.model.expiryYear) ? vm.model.expiryMonth + '/' + vm.model.expiryYear : '',\r\n                                \"cardNumber\": vm.model.cardNumber,\r\n                                \"nameOfBank\": vm.model.bank,\r\n                                \"tenure\": vm.model.tenure,\r\n                                \"balanceTransferTaken\": \"Y\"\r\n                            };\r\n                            var securityParams = {\r\n                                robocheck: vm.robocheck ? vm.robocheck : ''\r\n                            };\r\n                            balanceTransferService.sendBalanceTransferData(balanceTranserData, securityParams, true).then(function (result) {\r\n                                if (result.success) {\r\n                                    saveFormDetailsInStorage();\r\n                                    $state.go('app.save-exit', {\r\n                                        saveData: {\r\n                                            name: journeyService.getApplicantInfo(\"fullName\")\r\n                                        },cardKey:vm.selectedCard.key\r\n                                    });\r\n                                } else {\r\n                                    if (result.errorCode == 3) {\r\n                                        $state.go('app.journey.s1-cards');\r\n                                    } else if (result.errorCode == 4) {\r\n                                        $rootScope.sessionError = true;\r\n                                        $state.go('app.app-retrieval');\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }, function () { });\r\n                    analyticService.buttonList.buttonClick.event_content = \"save for later\";\r\n                    analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n                };\r\n\r\n                vm.expiryChange = function (doFormat) {\r\n                    var monthElement = $scope.step9Form.month,\r\n                        yearElement = $scope.step9Form.year;\r\n                    monthElement.$setValidity(\"min\", true);\r\n                    monthElement.$setValidity(\"max\", true);\r\n                    yearElement.$setValidity(\"min\", true);\r\n                    yearElement.$setValidity(\"nextMonth\", true);\r\n                    var month = parseInt(vm.model.expiryMonth),\r\n                        year = parseInt(vm.model.expiryYear);\r\n                    if (month <= 0) {\r\n                        monthElement.$setValidity(\"min\", false);\r\n                        return;\r\n                    } else if (month > 12) {\r\n                        monthElement.$setValidity(\"max\", false);\r\n                        return;\r\n                    }\r\n                    if (year < vm.currentYear) {\r\n                        yearElement.$setValidity(\"min\", false);\r\n                        return;\r\n                    }\r\n                    if (month < currentMonth && year === vm.currentYear) {\r\n                        yearElement.$setValidity(\"nextMonth\", false);\r\n                        return;\r\n                    }\r\n                    if (doFormat && vm.model.expiryMonth && vm.model.expiryMonth.length === 1) {\r\n                        vm.model.expiryMonth = '0' + vm.model.expiryMonth;\r\n                    }\r\n                };\r\n            }]\r\n    });\r\n\r\n    module.exports = step9Comp.name;\r\n})();\n\n/***/ }),\n\n/***/ \"./src/app/components/journey/step9/step9.component.scss\":\n/* unknown exports provided */\n/* all exports used */\n/*!***************************************************************!*\\\n  !*** ./src/app/components/journey/step9/step9.component.scss ***!\n  \\***************************************************************/\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"./src/app/components/journey/step9/step9.component.service.js\":\n/* unknown exports provided */\n/* all exports used */\n/*!*********************************************************************!*\\\n  !*** ./src/app/components/journey/step9/step9.component.service.js ***!\n  \\*********************************************************************/\n/***/ (function(module, exports) {\n\n(function () {\r\n    'use strict';\r\n\r\n    var balanceTransferService = angular.module('journey.module').service('balanceTransferService', ['$rootScope', '$http', 'appState', 'CONFIG', 'UtilService',\r\n        function ($rootScope, $http, appState, CONFIG, UtilService) {\r\n            var self = this;\r\n\r\n            self.setDataInStorage = function (balanceTransferData) {\r\n                // var data = angular.merge({}, appState.getApplicationData(), balanceTransferData);\r\n                // appState.setApplicationData(data);\r\n                // callback(null, balanceTransferData);\r\n                appState.mergeApplicationData(balanceTransferData);\r\n            };\r\n\r\n            self.sendBalanceTransferData = function (balanceTransferData, securityParams, isSaveExit) {\r\n                var apiURL, httpMethod;\r\n                if ($rootScope.integrationsActive) {\r\n                    httpMethod = \"POST\";\r\n                    var arn = appState.getApplicationData().primaryApplicant.arn;\r\n                    apiURL = CONFIG.apiUrl + '/applicantdetails/balancetransfer/save/' + arn + '/' + isSaveExit + '?hash_id=' + Math.random();\r\n                } else {\r\n                    httpMethod = \"GET\";\r\n                    apiURL = 'resources/data/mock/step9_balance_transfer_save.json';\r\n                }\r\n\r\n                return $http({\r\n                    method: httpMethod,\r\n                    url: apiURL,\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    data: JSON.stringify(balanceTransferData),\r\n                    params: securityParams\r\n                }).then(function (response) {\r\n                    if (response.status === 200 && response.data) {\r\n                        return response.data;\r\n                    } else if (response && response.validationErrors) {\r\n                        //return pageError = \"Please ensure the values added in form fields are appropriate, and retry.\";\r\n                    } else {\r\n                        //Need to display \"response\" below page heading (above form).\r\n                        //vm.pageError = \"Some error occurred on the server side. Please try after some time.\";\r\n                    }\r\n                    return;\r\n                }, function (response) {\r\n                    return;\r\n                });\r\n            };\r\n\r\n            self.getUserDetails = function () {\r\n                var userDTO = {},\r\n                    localState = appState.getApplicationData();\r\n                if (localState) {\r\n                    if (localState.primaryApplicant) {\r\n                        if (localState.primaryApplicant.dipDetails) {\r\n                            userDTO.supplementaryCardApplied = localState.primaryApplicant.dipDetails.supplementaryCardApplied === 'Y';\r\n                            userDTO.creditLimit = localState.primaryApplicant.dipDetails.creditLimit ? localState.primaryApplicant.dipDetails.creditLimit : null;\r\n                            if (!UtilService.isEmpty(localState.primaryApplicant.dipDetails.creditLimit)) {\r\n                                var arr = localState.primaryApplicant.dipDetails.creditLimit.split(',');\r\n                                var temp = parseInt(arr.join(''));\r\n                                userDTO.transferLimit = temp * (95 / 100);\r\n                            } else {\r\n                                userDTO.transferLimit = 0;\r\n                            }\r\n                        }\r\n                        if (localState.primaryApplicant.balanceTransfer) {\r\n                            userDTO.bank = localState.primaryApplicant.balanceTransfer.nameOfBank ? localState.primaryApplicant.balanceTransfer.nameOfBank : null;\r\n                            userDTO.tenure = localState.primaryApplicant.balanceTransfer.tenure ? localState.primaryApplicant.balanceTransfer.tenure : null;\r\n                            if (!UtilService.isEmpty(localState.primaryApplicant.balanceTransfer.cardExpiryDate)) {\r\n                                var temp = localState.primaryApplicant.balanceTransfer.cardExpiryDate.split('/');\r\n                                userDTO.expiryMonth = temp[0];\r\n                                userDTO.expiryYear = temp[1];\r\n                            } else {\r\n                                userDTO.expiryMonth = null;\r\n                                userDTO.expiryYear = null;\r\n                            }\r\n                            userDTO.cardNumber = localState.primaryApplicant.balanceTransfer.cardNumber ? localState.primaryApplicant.balanceTransfer.cardNumber : null;\r\n                            userDTO.amount = localState.primaryApplicant.balanceTransfer.amount ? localState.primaryApplicant.balanceTransfer.amount.toString() : null;\r\n                        }\r\n                    }\r\n                }\r\n                return userDTO;\r\n            };\r\n        }]);\r\n\r\n    module.exports = balanceTransferService.name;\r\n})();\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// resources/js/d9beb5d92017231a22b512.js","module.exports = \"<form name=step9Form autocomplete=off novalidate> <input type=text class=hidden-field ng-model=$ctrl.robocheck tabindex=-1> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <h1 class=\\\"brand-bar no-margin-top\\\">Balance Transfer</h1> </div> </div> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <p class=no-margin-b> Transfer outstanding balances from your other bank credit card to your HSBC Credit Card and benefit from our low interest rates & flexible repayment options.</p> </div> </div> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <h2 class=brand-bar>Key features:</h2> <ul> <li>Savings: Repayment at low interest rates</li> <li>Convenience: Paperless application process</li> </ul> </div> </div> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <p>Find out more about <a target=_blank href=http://www.hsbc.co.in/1/2/personal/credit-cards/balance-transfer class=new-tab-link aria-label=\\\"This link will open more information about collecting and using information in a new tab\\\"> <span class=text>Balance Transfer rates</span> <span class=\\\"icon icon-new-window\\\" aria-hidden=true role=presentation></span> </a> on EMI (Equated Monthly Installment).</p> <p>View <a target=_blank href=http://www.hsbc.co.in/1/2/personal/credit-cards/balance-transfer-terms class=new-tab-link aria-label=\\\"This link will open more information about collecting and using information in a new tab\\\"> <span class=text>Terms & Conditions</span> <span class=\\\"icon icon-new-window\\\" aria-hidden=true role=presentation></span> </a> for Balance Transfer.</p> </div> </div> <p class=no-margin-b> Please provide your details below and we will contact you within 5 working days after your HSBC Credit Card is issued.</p> <div class=row> <div class=\\\"col-md-4 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label id=bankNameLbl for=bank>Name of bank</label> <div ng-class=\\\"{'has-error': step9Form.bank.$invalid && (step9Form.bank.$touched || $ctrl.submitted)}\\\"> <custom-select> <select id=bank name=bank class=form-control ng-model=$ctrl.model.bank ng-options=\\\"item for item in $ctrl.bankList\\\" aria-describedby=bankNameErrMsg aria-invalid=\\\"{{step9Form.bank.$invalid && (step9Form.bank.$touched || $ctrl.submitted)}}\\\" required> <option value=\\\"\\\">Please select</option> </select> </custom-select> </div> <div id=bankNameErrMsg class=\\\"form-group remove-margin\\\" ng-class=\\\"{'has-error': step9Form.bank.$invalid}\\\"> <validation-msg ng-if=\\\"step9Form.bank.$error.required && (step9Form.bank.$touched || $ctrl.submitted)\\\"> Please select a bank to continue with your application.</validation-msg> </div> </div> </div> <div class=\\\"col-md-4 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=cardNumber>Card number</label> <div ng-class=\\\"{ 'has-error' : step9Form.cardNumber.$invalid  && ($ctrl.submitted || step9Form.cardNumber.$touched)}\\\"> <input type=tel id=cardNumber name=cardNumber aria-describedby=cardNumErrMsg trim class=form-control only-number=18 onkeypress=\\\"0===this.value.length&&32===event.charCode&&event.preventDefault()\\\" ng-maxlength=18 maxlength=18 minlength=13 ng-minlength=13 ng-model=$ctrl.model.cardNumber aria-invalid=\\\"{{step9Form.cardNumber.$invalid  && ($ctrl.submitted || step9Form.cardNumber.$touched)}}\\\" required> </div> <div id=cardNumErrMsg class=\\\"form-group col-md-12 col-sm-12 col-xs-12 remove-margin\\\" ng-class=\\\"{'has-error' : (step9Form.cardNumber.$invalid && ($ctrl.submitted || step9Form.cardNumber.$touched))}\\\"> <div class=row> <validation-msg ng-if=\\\"(step9Form.cardNumber.$error.required && step9Form.cardNumber.$touched) || (step9Form.cardNumber.$error.required && $ctrl.submitted)\\\"> Please enter your card number to continue with your application. </validation-msg> <validation-msg ng-if=\\\"step9Form.cardNumber.$error.maxlength && !step9Form.cardNumber.$error.pattern && ($ctrl.submitted || step9Form.cardNumber.$touched)\\\"> Maximum of 18 digits allowed for your card number.</validation-msg> <validation-msg ng-if=\\\"step9Form.cardNumber.$error.minlength && !step9Form.cardNumber.$error.pattern && ($ctrl.submitted || step9Form.cardNumber.$touched)\\\"> Please enter a minimum of 13 digits. </validation-msg> <validation-msg ng-if=\\\"step9Form.cardNumber.$error.pattern && ($ctrl.submitted || step9Form.cardNumber.$touched)\\\"> Your card number contains invalid digits.Please check and Renter. </validation-msg> </div> </div> </div> </div> </div> <div class=row> <div class=\\\"col-md-4 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <label id=cardExpiryLabel class=\\\"\\\">Other bank’s card expiry (mm/yyyy)</label> <a tabindex=0 aria-label=\\\"tooltip Your card should not be expiring in the next one month.\\\" uib-popover=\\\"Your card should not be expiring in the next one month.\\\" popover-placement=auto popover-trigger=\\\"'mouseenter focus'\\\" class=\\\"icon icon-circle-info\\\"></a> </div> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <div class=\\\"col-md-6 col-sm-6 col-xs-6 remove-padding\\\"> <div ng-class=\\\"{'has-error': step9Form.month.$invalid && (step9Form.month.$touched || $ctrl.submitted)}\\\"> <input type=tel trim name=month aria-label=\\\"Card expiry (MM)\\\" aria-describedby=otherCardExpErrMsg ng-model=$ctrl.model.expiryMonth class=\\\"form-control text-center\\\" ng-keyup=$ctrl.expiryChange() ng-blur=$ctrl.expiryChange(true) onkeypress=\\\"0===this.value.length&&32===event.charCode&&event.preventDefault()\\\" ng-maxlength=2 only-number=2 maxlength=2 max=12 min=1 placeholder=MM aria-invalid=\\\"{{step9Form.month.$invalid && (step9Form.month.$touched || $ctrl.submitted)}}\\\" required> </div> </div> <div class=\\\"col-md-6 col-sm-6 col-xs-6 remove-padding\\\"> <div ng-class=\\\"{'has-error': step9Form.year.$invalid && (step9Form.year.$touched || $ctrl.submitted)}\\\"> <input type=tel trim name=year aria-label=\\\"Card expiry (YYYY)\\\" aria-describedby=otherCardExpErrMsg ng-model=$ctrl.model.expiryYear class=\\\"form-control text-center\\\" ng-keyup=$ctrl.expiryChange() ng-blur=$ctrl.expiryChange(true) onkeypress=\\\"0===this.value.length&&32===event.charCode&&event.preventDefault()\\\" ng-maxlength=4 ng-minlength=4 only-number=4 maxlength=4 placeholder=YYYY aria-invalid=\\\"{{step9Form.year.$invalid && (step9Form.year.$touched || $ctrl.submitted)}}\\\" required> </div> </div> </div> </div> <div class=\\\"\\\"> <div id=otherCardExpErrMsg class=\\\"col-md-12 col-sm-12 col-xs-12 remove-margin\\\" ng-class=\\\"{'has-error': step9Form.year.$invalid || step9Form.month.$invalid}\\\"> <div class=row> <validation-msg ng-if=\\\"(step9Form.month.$error.required && (step9Form.month.$touched || $ctrl.submitted)) || (step9Form.year.$error.required && step9Form.month.$valid && (step9Form.year.$touched || $ctrl.submitted))\\\"> Please enter your other bank's card expiry date to continue with your application. </validation-msg> <validation-msg ng-if=\\\"step9Form.year.$error.minlength && (step9Form.year.$touched || $ctrl.submitted) && step9Form.month.$valid\\\"> Years of other bank's card expiry date should contain exactly 4 digits. </validation-msg> <validation-msg ng-if=\\\"step9Form.month.$error.min && !step9Form.month.$error.required\\\"> Month of other bank's card expiry date cannot be lesser than 1. </validation-msg> <validation-msg ng-if=\\\"step9Form.year.$error.min && step9Form.month.$valid\\\"> Year of other bank's card expiry date cannot be less than current year. </validation-msg> <validation-msg ng-if=\\\"step9Form.year.$error.nextMonth && !step9Form.year.$error.required && step9Form.month.$valid && (step9Form.year.$touched || $ctrl.submitted)\\\"> Your card should not be expiring in the next one month. </validation-msg> <validation-msg ng-if=\\\"step9Form.month.$error.max && !step9Form.month.$error.required\\\"> Month of other bank's card expiry date cannot be greater than 12. </validation-msg> </div> </div> </div> </div> </div> <div class=\\\"col-md-4 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label for=amount>Amount to be transferred</label> <a tabindex=0 aria-label=\\\"tooltip Amount should be at least Rs. 5,000.\\\" uib-popover=\\\"Amount should be at least Rs. 5,000.\\\" popover-placement=auto popover-trigger=\\\"'mouseenter focus'\\\" class=\\\"icon icon-circle-info\\\"></a> <div ng-class=\\\"{'has-error': step9Form.amount.$invalid && (step9Form.amount.$touched || $ctrl.submitted)}\\\"> <input type=tel trim id=amount name=amount aria-describedby=trasAmtErrMsg class=form-control ng-blur=$ctrl.checkCreditLimit(step9Form.amount) only-number=10 onkeypress=\\\"0===this.value.length&&32===event.charCode&&event.preventDefault()\\\" ng-keyup=$ctrl.checkCreditLimit(step9Form.amount) ng-model=$ctrl.model.amount aria-invalid=\\\"{{step9Form.amount.$invalid && (step9Form.amount.$touched || $ctrl.submitted)}}\\\" required> </div> <div id=trasAmtErrMsg class=\\\"form-group col-md-12 remove-margin\\\" ng-class=\\\"{'has-error': step9Form.amount.$invalid}\\\"> <div class=row> <validation-msg ng-if=\\\"step9Form.amount.$error.required && (step9Form.amount.$touched || $ctrl.submitted)\\\"> Please enter the amount to be transferred to continue with your application. </validation-msg> <validation-msg ng-if=\\\"step9Form.amount.$error.max && !step9Form.amount.$error.required && (step9Form.amount.$touched || $ctrl.submitted)\\\"> Amount exceeds 95% of the assigned credit limit. </validation-msg> <validation-msg ng-if=\\\"step9Form.amount.$error.min && !step9Form.amount.$error.required && (step9Form.amount.$touched || $ctrl.submitted)\\\"> Amount should be at least Rs. 5,000. </validation-msg> </div> </div> </div> </div> </div> <div class=row> <div class=\\\"col-md-4 col-sm-6 col-xs-12\\\"> <div class=\\\"form-group line-spacer\\\"> <label id=tenureLbl for=tenure>Tenure</label> <div ng-class=\\\"{'has-error': step9Form.tenure.$invalid && (step9Form.tenure.$touched || $ctrl.submitted)}\\\"> <custom-select> <select id=tenure name=tenure class=form-control ng-model=$ctrl.model.tenure ng-options=\\\"item for item in $ctrl.tentureList\\\" aria-describedby=tenureErrMsg aria-invalid=\\\"{{step9Form.tenure.$invalid && (step9Form.tenure.$touched || $ctrl.submitted)}}\\\" required> <option value=\\\"\\\">Please select</option> </select> </custom-select> </div> <div id=tenureErrMsg class=\\\"form-group remove-margin\\\" ng-class=\\\"{'has-error': step9Form.tenure.$invalid}\\\"> <validation-msg ng-if=\\\"step9Form.tenure.$error.required && (step9Form.tenure.$touched || $ctrl.submitted)\\\"> Please select a tenure to continue with your application. </validation-msg> </div> </div> </div> </div> <step-footer show-back=true back-callback=$ctrl.goback() show-save=true save-callback=$ctrl.save() show-continue=true continue-button-id=continue-btn continue-disabled=false continue-callback=$ctrl.next()> </step-footer> </form>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/step9/step9.component.html\n// module id = ./src/app/components/journey/step9/step9.component.html\n// module chunks = 12","(function () {\r\n    'use strict';\r\n    var angular = require('angular');\r\n    require('./step9.component.scss');\r\n    require('./step9.component.service');\r\n    // require('../save-exit.modal/overlayConfirmation.modal.component.js');\r\n\r\n    var step9Comp = angular.module('journey.module').component('step9', {\r\n        template: require('./step9.component.html'),\r\n        controller: ['$rootScope', '$scope', '$uibModal', '$anchorScroll', '$state', 'journeyService', 'balanceTransferService', 'analyticService', 'UtilService',\r\n            function ($rootScope, $scope, $uibModal, $anchorScroll, $state, journeyService, balanceTransferService, analyticService, UtilService) {\r\n                var vm = this, currentMonth;\r\n                vm.tentureList = ['3 months', '6 months', '9 months', '12 months', '18 months', '24 months'];\r\n\r\n                vm.$onInit = function () {\r\n                    $rootScope.$broadcast('hide-step-header', {\r\n                        hideHeader: false\r\n                    });\r\n                    $rootScope.showSelectedCard = true;\r\n                    $anchorScroll();\r\n                    $rootScope.stepsHeader.currentStep = 4;\r\n                    $rootScope.showARN = true;\r\n                    $rootScope.dipARN = journeyService.getApplicantInfo(\"dipDetails\").dipArn;\r\n                    vm.selectedCard = journeyService.getSelectedCard();\r\n                    var currentDate = new Date();\r\n                    vm.currentYear = currentDate.getFullYear();\r\n                    currentMonth = currentDate.getMonth() + 3;\r\n                    if (currentMonth > 12) {\r\n                        vm.currentYear = vm.currentYear + 1;\r\n                        currentMonth = currentMonth - 12;\r\n                    }\r\n                    vm.model = balanceTransferService.getUserDetails();\r\n                    journeyService.getBanks().then(function (data) {\r\n                        vm.bankList = data;\r\n                    });\r\n                    analyticService.pageList.balanceTransfer.internal_reference_id = journeyService.getDataFromStorageContact().adobeId;\r\n                    analyticService.trackPageLoad(analyticService.pageList.balanceTransfer);\r\n                };\r\n\r\n                vm.goback = function () {\r\n                    if ($scope.step9Form.year.$invalid) {\r\n                        vm.model.expiryYear = $scope.step9Form.year.$$rawModelValue;\r\n                    }\r\n                    if ($scope.step9Form.month.$invalid) {\r\n                        vm.model.expiryMonth = $scope.step9Form.month.$$rawModelValue;\r\n                    }\r\n                    if ($scope.step9Form.cardNumber.$invalid) {\r\n                        vm.model.cardNumber = $scope.step9Form.cardNumber.$$rawModelValue;\r\n                    }\r\n                    var balanceTranserData = {\r\n                        \"primaryApplicant\": {\r\n                            \"balanceTransfer\": {\r\n                                \"amount\": parseInt(vm.model.amount),\r\n                                \"cardExpiryDate\": (!UtilService.isEmpty(vm.model.expiryMonth) ? vm.model.expiryMonth : '') + '/' + (!UtilService.isEmpty(vm.model.expiryYear) ? vm.model.expiryYear : ''),\r\n                                \"cardNumber\": vm.model.cardNumber,\r\n                                \"nameOfBank\": vm.model.bank,\r\n                                \"tenure\": vm.model.tenure\r\n                            }\r\n                        }\r\n                    };\r\n                    balanceTransferService.setDataInStorage(balanceTranserData);\r\n                    $state.go('app.journey.card-DIP',{'cardKey':vm.selectedCard.key});\r\n                    analyticService.buttonList.buttonClick.event_content = \"back\";\r\n                    analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n                };\r\n\r\n                vm.checkCreditLimit = function (amountElem) {\r\n                    if (amountElem) {\r\n                        amountElem.$setValidity(\"max\", true);\r\n                        amountElem.$setValidity(\"min\", true);\r\n                        var transAmount = parseInt(vm.model.amount);\r\n                        if (transAmount < 5000) {\r\n                            amountElem.$setValidity(\"min\", false);\r\n                        }\r\n                        if (transAmount > vm.model.transferLimit) {\r\n                            amountElem.$setValidity(\"max\", false);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                vm.next = function () {\r\n                    vm.checkCreditLimit($scope.step9Form.amount);\r\n                    vm.expiryChange();\r\n                    if ($scope.step9Form.$valid) {\r\n                        var securityParams = {\r\n                            robocheck: vm.robocheck ? vm.robocheck : ''\r\n                        };\r\n                        var balanceTranserData = {\r\n                            amount: parseInt(vm.model.amount),\r\n                            cardExpiryDate: vm.model.expiryMonth + '/' + vm.model.expiryYear,\r\n                            cardNumber: vm.model.cardNumber,\r\n                            nameOfBank: vm.model.bank,\r\n                            tenure: vm.model.tenure,\r\n                            balanceTransferTaken: \"Y\"\r\n                        };\r\n                        balanceTransferService.sendBalanceTransferData(balanceTranserData, securityParams, false).then(function (result) {\r\n                            if (result.success) {\r\n                                saveFormDetailsInStorage();\r\n                                if (vm.model.supplementaryCardApplied) {\r\n                                    $state.go('app.journey.supplementary',{'cardKey':vm.selectedCard.key});\r\n                                } else if (journeyService.isIncomeDocRequired()) {\r\n                                    $state.go('app.journey.document',{'cardKey':vm.selectedCard.key});\r\n                                } else {\r\n                                    $state.go('app.journey.signature',{'cardKey':vm.selectedCard.key});\r\n                                }\r\n                            }\r\n                        });\r\n                    } else {\r\n                        vm.submitted = true;\r\n                        UtilService.focusOnInvalid(\"step9Form\");\r\n                    }\r\n                    analyticService.buttonList.buttonClick.event_content = \"continue\";\r\n                    analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n                };\r\n\r\n                var saveFormDetailsInStorage = function () {\r\n                    var balanceTranserData = {\r\n                        \"primaryApplicant\": {\r\n                            \"balanceTransfer\": {\r\n                                \"amount\": parseInt(vm.model.amount),\r\n                                \"cardExpiryDate\": !UtilService.isEmpty(vm.model.expiryMonth) && !UtilService.isEmpty(vm.model.expiryYear) ? vm.model.expiryMonth + '/' + vm.model.expiryYear : '',\r\n                                \"cardNumber\": vm.model.cardNumber,\r\n                                \"nameOfBank\": vm.model.bank,\r\n                                \"tenure\": vm.model.tenure\r\n                            }\r\n                        }\r\n                    };\r\n                    balanceTransferService.setDataInStorage(balanceTranserData);\r\n                };\r\n\r\n                vm.save = function (result) {\r\n                    var modalInstance = $uibModal.open({\r\n                        backdrop: 'static',\r\n                        keyboard: false,\r\n                        modalFade: true,\r\n                        component: \"overlaySaveConfirmation\",\r\n                        windowClass: 'card-detail-modal'\r\n                    });\r\n                    modalInstance.result.then(function (isSelected) {\r\n                        if (isSelected) {\r\n                            var balanceTranserData = {\r\n                                \"amount\": parseInt(vm.model.amount),\r\n                                \"cardExpiryDate\": !UtilService.isEmpty(vm.model.expiryMonth) && !UtilService.isEmpty(vm.model.expiryYear) ? vm.model.expiryMonth + '/' + vm.model.expiryYear : '',\r\n                                \"cardNumber\": vm.model.cardNumber,\r\n                                \"nameOfBank\": vm.model.bank,\r\n                                \"tenure\": vm.model.tenure,\r\n                                \"balanceTransferTaken\": \"Y\"\r\n                            };\r\n                            var securityParams = {\r\n                                robocheck: vm.robocheck ? vm.robocheck : ''\r\n                            };\r\n                            balanceTransferService.sendBalanceTransferData(balanceTranserData, securityParams, true).then(function (result) {\r\n                                if (result.success) {\r\n                                    saveFormDetailsInStorage();\r\n                                    $state.go('app.save-exit', {\r\n                                        saveData: {\r\n                                            name: journeyService.getApplicantInfo(\"fullName\")\r\n                                        },cardKey:vm.selectedCard.key\r\n                                    });\r\n                                } else {\r\n                                    if (result.errorCode == 3) {\r\n                                        $state.go('app.journey.s1-cards');\r\n                                    } else if (result.errorCode == 4) {\r\n                                        $rootScope.sessionError = true;\r\n                                        $state.go('app.app-retrieval');\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }, function () { });\r\n                    analyticService.buttonList.buttonClick.event_content = \"save for later\";\r\n                    analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n                };\r\n\r\n                vm.expiryChange = function (doFormat) {\r\n                    var monthElement = $scope.step9Form.month,\r\n                        yearElement = $scope.step9Form.year;\r\n                    monthElement.$setValidity(\"min\", true);\r\n                    monthElement.$setValidity(\"max\", true);\r\n                    yearElement.$setValidity(\"min\", true);\r\n                    yearElement.$setValidity(\"nextMonth\", true);\r\n                    var month = parseInt(vm.model.expiryMonth),\r\n                        year = parseInt(vm.model.expiryYear);\r\n                    if (month <= 0) {\r\n                        monthElement.$setValidity(\"min\", false);\r\n                        return;\r\n                    } else if (month > 12) {\r\n                        monthElement.$setValidity(\"max\", false);\r\n                        return;\r\n                    }\r\n                    if (year < vm.currentYear) {\r\n                        yearElement.$setValidity(\"min\", false);\r\n                        return;\r\n                    }\r\n                    if (month < currentMonth && year === vm.currentYear) {\r\n                        yearElement.$setValidity(\"nextMonth\", false);\r\n                        return;\r\n                    }\r\n                    if (doFormat && vm.model.expiryMonth && vm.model.expiryMonth.length === 1) {\r\n                        vm.model.expiryMonth = '0' + vm.model.expiryMonth;\r\n                    }\r\n                };\r\n            }]\r\n    });\r\n\r\n    module.exports = step9Comp.name;\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/step9/step9.component.js\n// module id = ./src/app/components/journey/step9/step9.component.js\n// module chunks = 12","(function () {\r\n    'use strict';\r\n\r\n    var balanceTransferService = angular.module('journey.module').service('balanceTransferService', ['$rootScope', '$http', 'appState', 'CONFIG', 'UtilService',\r\n        function ($rootScope, $http, appState, CONFIG, UtilService) {\r\n            var self = this;\r\n\r\n            self.setDataInStorage = function (balanceTransferData) {\r\n                // var data = angular.merge({}, appState.getApplicationData(), balanceTransferData);\r\n                // appState.setApplicationData(data);\r\n                // callback(null, balanceTransferData);\r\n                appState.mergeApplicationData(balanceTransferData);\r\n            };\r\n\r\n            self.sendBalanceTransferData = function (balanceTransferData, securityParams, isSaveExit) {\r\n                var apiURL, httpMethod;\r\n                if ($rootScope.integrationsActive) {\r\n                    httpMethod = \"POST\";\r\n                    var arn = appState.getApplicationData().primaryApplicant.arn;\r\n                    apiURL = CONFIG.apiUrl + '/applicantdetails/balancetransfer/save/' + arn + '/' + isSaveExit + '?hash_id=' + Math.random();\r\n                } else {\r\n                    httpMethod = \"GET\";\r\n                    apiURL = 'resources/data/mock/step9_balance_transfer_save.json';\r\n                }\r\n\r\n                return $http({\r\n                    method: httpMethod,\r\n                    url: apiURL,\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    data: JSON.stringify(balanceTransferData),\r\n                    params: securityParams\r\n                }).then(function (response) {\r\n                    if (response.status === 200 && response.data) {\r\n                        return response.data;\r\n                    } else if (response && response.validationErrors) {\r\n                        //return pageError = \"Please ensure the values added in form fields are appropriate, and retry.\";\r\n                    } else {\r\n                        //Need to display \"response\" below page heading (above form).\r\n                        //vm.pageError = \"Some error occurred on the server side. Please try after some time.\";\r\n                    }\r\n                    return;\r\n                }, function (response) {\r\n                    return;\r\n                });\r\n            };\r\n\r\n            self.getUserDetails = function () {\r\n                var userDTO = {},\r\n                    localState = appState.getApplicationData();\r\n                if (localState) {\r\n                    if (localState.primaryApplicant) {\r\n                        if (localState.primaryApplicant.dipDetails) {\r\n                            userDTO.supplementaryCardApplied = localState.primaryApplicant.dipDetails.supplementaryCardApplied === 'Y';\r\n                            userDTO.creditLimit = localState.primaryApplicant.dipDetails.creditLimit ? localState.primaryApplicant.dipDetails.creditLimit : null;\r\n                            if (!UtilService.isEmpty(localState.primaryApplicant.dipDetails.creditLimit)) {\r\n                                var arr = localState.primaryApplicant.dipDetails.creditLimit.split(',');\r\n                                var temp = parseInt(arr.join(''));\r\n                                userDTO.transferLimit = temp * (95 / 100);\r\n                            } else {\r\n                                userDTO.transferLimit = 0;\r\n                            }\r\n                        }\r\n                        if (localState.primaryApplicant.balanceTransfer) {\r\n                            userDTO.bank = localState.primaryApplicant.balanceTransfer.nameOfBank ? localState.primaryApplicant.balanceTransfer.nameOfBank : null;\r\n                            userDTO.tenure = localState.primaryApplicant.balanceTransfer.tenure ? localState.primaryApplicant.balanceTransfer.tenure : null;\r\n                            if (!UtilService.isEmpty(localState.primaryApplicant.balanceTransfer.cardExpiryDate)) {\r\n                                var temp = localState.primaryApplicant.balanceTransfer.cardExpiryDate.split('/');\r\n                                userDTO.expiryMonth = temp[0];\r\n                                userDTO.expiryYear = temp[1];\r\n                            } else {\r\n                                userDTO.expiryMonth = null;\r\n                                userDTO.expiryYear = null;\r\n                            }\r\n                            userDTO.cardNumber = localState.primaryApplicant.balanceTransfer.cardNumber ? localState.primaryApplicant.balanceTransfer.cardNumber : null;\r\n                            userDTO.amount = localState.primaryApplicant.balanceTransfer.amount ? localState.primaryApplicant.balanceTransfer.amount.toString() : null;\r\n                        }\r\n                    }\r\n                }\r\n                return userDTO;\r\n            };\r\n        }]);\r\n\r\n    module.exports = balanceTransferService.name;\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/step9/step9.component.service.js\n// module id = ./src/app/components/journey/step9/step9.component.service.js\n// module chunks = 12"],"sourceRoot":""}