{"version":3,"sources":["webpack:///resources/js/70ce261303a581a922e317.js","webpack:///./src/app/components/journey/signature-consent/signature-consent.component.html","webpack:///./src/app/components/journey/signature-consent/signature-consent.component.js","webpack:///./src/app/components/journey/signature-consent/signature-consent.component.service.js"],"names":["webpackJsonp","./src/app/components/journey/signature-consent/signature-consent.component.html","module","exports","./src/app/components/journey/signature-consent/signature-consent.component.js","__webpack_require__","angular","signatureConsentComp","component","template","controller","$rootScope","$anchorScroll","$state","$uibModal","$timeout","journeyService","signatureConsentService","analyticService","UtilService","vm","this","showLoader","$onInit","$broadcast","hideHeader","showSelectedCard","showARN","stepsHeader","currentStep","model","merge","getUserDetails","isStaffJourney","selectedCard","getSelectedCard","dipARN","getDataFromStorage","primaryApplicant","dipDetails","dipArn","refNumber","checkESignStatus","pageList","signature","internal_reference_id","getDataFromStorageContact","adobeId","trackPageLoad","getESignStatus","then","result","success","go","saveData","statusCode","errorCode","cardKey","key","eSignError","buttonList","error","event_content","trackUserAction","toggleConsent","toggleClick","goback","incomeDoc","supplementaryCardApplied","balanceTransferTaken","buttonClick","next","showCard","loaderType","securityParams","robocheck","reqData","informationConsent","reqCounter","sendSignatureData","console","log","autoUrl","signingUrl","isEmpty","alert","setDataInStorage","consents","errMsg","message","save","open","backdrop","keyboard","modalFade","windowClass","isSelected","sessionError","name","./src/app/components/journey/signature-consent/signature-consent.component.scss","./src/app/components/journey/signature-consent/signature-consent.component.service.js","service","$http","$q","$interval","appState","CONFIG","self","arn","formDetails","arnData","getApplicationData","setApplicationData","retryDip","active","pollTimeout","pollInterval","pollCount","defer","sendSignatureDataToBack","countOfPoll","intervalPromise","resolvedObject","resolve","cancel","promise","JSON","stringify","apiURL","httpMethod","integrationsActive","apiUrl","Math","random","method","url","headers","Content-Type","params","data","response","status","reject","userDTO","localState","employmentDetails","companyName","changedCompanyName","skipPerfios","hasSkippedPerfios","panStatusFlag"],"mappings":"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","file":"resources/js/70ce261303a581a922e317.js","sourcesContent":["webpackJsonp([17],{\n\n/***/ \"./src/app/components/journey/signature-consent/signature-consent.component.html\":\n/* unknown exports provided */\n/* all exports used */\n/*!***************************************************************************************!*\\\n  !*** ./src/app/components/journey/signature-consent/signature-consent.component.html ***!\n  \\***************************************************************************************/\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div ng-hide=$ctrl.showLoader class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <form name=step12Form focus-on-error novalidate ng-hide=$ctrl.showLoader> <input type=text class=hidden-field ng-model=$ctrl.robocheck tabindex=-1> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <h1 class=\\\"brand-bar no-margin-top\\\"> Marketing Offers </h1> <alert-msg ng-if=\\\"$ctrl.eSignError && !$ctrl.isStaffJourney\\\" type=ERROR> Sorry! There seems to be a technical problem. Request you to save your application and retry at a later time to complete your Credit Card application. </alert-msg> <alert-msg ng-if=\\\"$ctrl.eSignError && $ctrl.isStaffJourney\\\" type=ERROR> Sorry! There seems to be a technical problem. Your HSBC representative will inform you of the next steps to complete the application. </alert-msg> <alert-msg ng-if=$ctrl.errMsg type=ERROR> {{$ctrl.errMsg}} </alert-msg> </div> </div> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <p class=para> From time to time, HSBC communicates various features/products/promotional offers which offer significant benefits to its customers and may use the service of third party agencies to do so. </p> <div> <input type=checkbox id=consentChk name=consentChk class=screen-reader-only ng-model=$ctrl.model.informationConsent ng-change=$ctrl.toggleConsent() ng-focus=\\\"$ctrl.chkFocus = true;\\\" ng-blur=\\\"$ctrl.chkFocus = false;\\\"> <label for=consentChk class=checkbox-label ng-class=\\\"{'focus': $ctrl.chkFocus}\\\"> I authorise HSBC to use information or data relating to me, for communicating marketing offers as outlined above. </label> </div> </div> </div> <step-footer show-back=true back-callback=$ctrl.goback() show-save=true save-callback=$ctrl.save() show-continue=true continue-button-id=continue-btn continue-disabled=false continue-callback=$ctrl.next()> </step-footer> </form> </div> </div> <loading ng-show=$ctrl.showLoader></loading>\";\n\n/***/ }),\n\n/***/ \"./src/app/components/journey/signature-consent/signature-consent.component.js\":\n/* unknown exports provided */\n/* all exports used */\n/*!*************************************************************************************!*\\\n  !*** ./src/app/components/journey/signature-consent/signature-consent.component.js ***!\n  \\*************************************************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n(function () {\r\n    'use strict';\r\n    var angular = __webpack_require__(/*! angular */ \"./node_modules/angular/index.js\");\r\n    __webpack_require__(/*! ./signature-consent.component.scss */ \"./src/app/components/journey/signature-consent/signature-consent.component.scss\");\r\n    __webpack_require__(/*! ./signature-consent.component.service.js */ \"./src/app/components/journey/signature-consent/signature-consent.component.service.js\");\r\n\r\n    var signatureConsentComp = angular.module('journey.module').component('signatureConsent', {\r\n        template: __webpack_require__(/*! ./signature-consent.component.html */ \"./src/app/components/journey/signature-consent/signature-consent.component.html\"),\r\n        controller: ['$rootScope', '$anchorScroll', '$state', '$uibModal', '$timeout', 'journeyService', 'signatureConsentService', 'analyticService', 'UtilService', function ($rootScope, $anchorScroll, $state, $uibModal, $timeout, journeyService, signatureConsentService, analyticService, UtilService) {\r\n\r\n            var vm = this;\r\n            vm.showLoader = false;\r\n\r\n            vm.$onInit = function () {\r\n                $rootScope.$broadcast('hide-step-header', {\r\n                    hideHeader: false\r\n                });\r\n                $rootScope.showSelectedCard = true;\r\n                $rootScope.showARN = true;\r\n                $anchorScroll();\r\n                $rootScope.stepsHeader.currentStep = 5;\r\n                vm.model = {};\r\n                vm.model = angular.merge({}, signatureConsentService.getUserDetails());\r\n                vm.isStaffJourney = journeyService.isStaffJourney();\r\n                vm.selectedCard = journeyService.getSelectedCard();\r\n                \r\n                \r\n                $rootScope.dipARN = journeyService.getDataFromStorage().primaryApplicant.dipDetails.dipArn;\r\n                vm.refNumber = journeyService.getDataFromStorage().primaryApplicant.dipDetails.dipArn;\r\n                $timeout(function () {\r\n                    checkESignStatus();\r\n                }, 1000);\r\n                analyticService.pageList.signature.internal_reference_id = journeyService.getDataFromStorageContact().adobeId;\r\n                analyticService.trackPageLoad(analyticService.pageList.signature);\r\n            };\r\n\r\n            var checkESignStatus = function () {\r\n                signatureConsentService.getESignStatus().then(function (result) {\r\n                    if (result.success) {\r\n                        if (journeyService.isStaffJourney()) {\r\n                        // console.log(\"SIGN_CON==COMP_JS\");\r\n                            // $state.go('app.complete-ack',{\r\n                            //     saveData: {\r\n                            //     statusCode: result.errorCode\r\n                            // },'cardKey':vm.selectedCard.key});\r\n                        } else {\r\n                            $state.go('app.complete-ack', {\r\n                                saveData: {\r\n                                    statusCode: result.errorCode\r\n                                },\r\n                                'cardKey':vm.selectedCard.key\r\n                            });\r\n                        }\r\n                    } else {\r\n                        if (result.errorCode === 9002) {\r\n                            // E-sign failure                            \r\n                            vm.eSignError = true;\r\n                            analyticService.buttonList.error.event_content = \"E-Sign failure\";\r\n                            analyticService.trackUserAction(analyticService.buttonList.error);\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n\r\n            vm.toggleConsent = function () {\r\n                analyticService.buttonList.toggleClick.event_content =  true ? 'Enabled' : 'Disabled';\r\n                analyticService.trackUserAction(analyticService.buttonList.toggleClick);\r\n            };\r\n\r\n            vm.goback = function () {\r\n                /* var formDetails = {\r\n                    \"primaryApplicant\": {\r\n                        \"signatureConsent\": vm.model.digitalSignConsent == 'yes' ? 'Y' : 'N'\r\n                    }\r\n                }; */\r\n                if (signatureConsentService.incomeDoc) {\r\n                    $state.go('app.journey.document',{'cardKey':vm.selectedCard.key});\r\n                } else if (signatureConsentService.supplementaryCardApplied) {\r\n                    $state.go('app.journey.supplementary',{'cardKey':vm.selectedCard.key});\r\n                } else if (signatureConsentService.balanceTransferTaken) {\r\n                    $state.go('app.journey.balance-transfer',{'cardKey':vm.selectedCard.key});\r\n                } else {\r\n                    $state.go('app.journey.card-DIP',{'cardKey':vm.selectedCard.key});\r\n                }\r\n\r\n                analyticService.buttonList.buttonClick.event_content = \"back\";\r\n                analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n            };\r\n\r\n            vm.next = function () {\r\n                vm.showLoader = true;\r\n                $rootScope.$broadcast(\"trigger-verification-loader\", {\r\n                    showLoader: true,\r\n                    showCard: false,\r\n                    loaderType: \"PERFIOS\",\r\n                });\r\n                vm.eSignError = false;\r\n                var securityParams = {\r\n                    robocheck: vm.robocheck ? vm.robocheck : ''\r\n                };\r\n                var reqData = {\r\n                        \"informationConsent\": vm.model.informationConsent ? \"Y\" : \"N\",\r\n                        \"reqCounter\": 1\r\n                }\r\n                signatureConsentService.sendSignatureData(reqData, securityParams).then(function (result) {\r\n                        console.log('Response code ===', result);\r\n                        if(!result.success){\r\n                            vm.showLoader = false;    \r\n                        }\r\n                    if (result.success) {\r\n                        if (journeyService.isStaffJourney()) {\r\n                                console.log('reahed inside success code sending ahead ===', result);\r\n                            $state.go('app.complete-ack', {\r\n                                saveData: {\r\n                                    statusCode: result.errorCode,\r\n                                    autoUrl: result.signingUrl\r\n                                },\r\n                                'cardKey':vm.selectedCard.key\r\n                            });\r\n                        }\r\n                        else\r\n                        {\r\n                            if (!UtilService.isEmpty(result.signingUrl)) {\r\n                                signatureConsentService.setDataInStorage({ \"consents\": reqData });\r\n                                // E-Sign is mocked up\r\n                               \r\n                                    $state.go('app.complete-ack', {\r\n                                        saveData: {\r\n                                            statusCode: result.errorCode,\r\n                                            autoUrl: result.signingUrl\r\n                                        },\r\n                                        'cardKey':vm.selectedCard.key\r\n                                    });\r\n                                \r\n                            } \r\n                            else {\r\n                                alert(\"There is some error while generating videokyc url\");\r\n                              //  journeyService.setDisableBrowserClose(true);\r\n                                //window.location.href = result.signingUrl;\r\n                            }\r\n                        }\r\n                        \r\n                    } else if (result.errorCode == 3 || result.errorCode == 4) {\r\n                        $state.go('app.journey.s1-cards');\r\n                    }else if (result.errorCode === 10009) {\r\n                        // Invalid OTP\r\n                        vm.errMsg = \"VIDEO_KYC_FAILED\";\r\n                        }else if (result.errorCode === 119900) {\r\n                            // Invalid OTP\r\n                            vm.errMsg = \"PERFIOS_NOT_DONE\";\r\n                        }else if (result.errorCode === 404) {\r\n                            // Invalid OTP\r\n                            vm.errMsg = result.message;\r\n                        }\r\n                });\r\n                analyticService.buttonList.buttonClick.event_content = \"continue\";\r\n                analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n            };\r\n\r\n            vm.save = function () {\r\n                var modalInstance = $uibModal.open({\r\n                    backdrop: 'static',\r\n                    keyboard: false,\r\n                    modalFade: true,\r\n                    component: \"overlaySaveConfirmation\",\r\n                    windowClass: 'card-detail-modal center-modal'\r\n                });\r\n                modalInstance.result.then(function (isSelected) {\r\n                    if (isSelected) {\r\n                        var securityParams = {\r\n                            robocheck: vm.robocheck ? vm.robocheck : ''\r\n                        };\r\n                        signatureConsentService.save(securityParams).then(function (result) {\r\n                            if (result.success) {\r\n                                $state.go('app.save-exit',{'cardKey':vm.selectedCard.key});\r\n                            } else {\r\n                                if (result.errorCode == 3) {\r\n                                    $state.go('app.journey.s1-cards');\r\n                                } else if (result.errorCode == 4) {\r\n                                    $rootScope.sessionError = true;\r\n                                    $state.go('app.app-retrieval');\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }, function () { });\r\n                analyticService.buttonList.buttonClick.event_content = \"save for later\";\r\n                analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n            };\r\n\r\n            // vm.saveFormDetailsInStorage = function (callback) {\r\n            //     var formDetails = {\r\n            //         \"primaryApplicant\": {\r\n            //             \"signatureConsent\": 'Y'\r\n            //         }\r\n            //     };\r\n            //     signatureConsentService.setDataInStorage(formDetails, callback);\r\n            // };\r\n        }]\r\n    });\r\n\r\n    module.exports = signatureConsentComp.name;\r\n})();\r\n\n\n/***/ }),\n\n/***/ \"./src/app/components/journey/signature-consent/signature-consent.component.scss\":\n/* unknown exports provided */\n/* all exports used */\n/*!***************************************************************************************!*\\\n  !*** ./src/app/components/journey/signature-consent/signature-consent.component.scss ***!\n  \\***************************************************************************************/\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"./src/app/components/journey/signature-consent/signature-consent.component.service.js\":\n/* unknown exports provided */\n/* all exports used */\n/*!*********************************************************************************************!*\\\n  !*** ./src/app/components/journey/signature-consent/signature-consent.component.service.js ***!\n  \\*********************************************************************************************/\n/***/ (function(module, exports) {\n\n(function () {\r\n    'use strict';\r\n\r\n    var signatureConsentService = angular.module('journey.module').service('signatureConsentService', ['$rootScope', '$http', '$q', '$timeout', '$interval', 'appState', 'CONFIG', function ($rootScope, $http, $q, $timeout, $interval, appState, CONFIG) {\r\n        var self = this;\r\n        self.arn = null;\r\n        self.balanceTransferTaken = null;\r\n\r\n        self.setDataInStorage = function (formDetails) {\r\n            var arnData = angular.merge({}, appState.getApplicationData(), { \"primaryApplicant\": formDetails });\r\n            appState.setApplicationData(arnData);\r\n            // callback(null, formDetails);\r\n        };\r\n\r\n        self.getDataFromStorage = function () {\r\n            return appState.getApplicationData();\r\n        };\r\n\r\n\r\n        self.sendSignatureData = function (reqData, securityParams) {\r\n            console.log(\"very first log in service\");\r\n\r\n            var retryDip = {}; // Initialize retryDip with an empty object\r\n            retryDip.active = true;\r\n            retryDip.pollTimeout = 3500;\r\n            retryDip.pollInterval = 3500;\r\n            retryDip.pollCount = 6;\r\n\r\n            var defer = $q.defer();\r\n            // console.log(\"retryDip 1 initial Object properties:\", retryDip); // Log retryDip object to verify its contents\r\n\r\n            sendSignatureDataToBack(securityParams, defer, retryDip, reqData); // this will run for first time\r\n            var countOfPoll = 0;\r\n\r\n            $timeout(function () {//this is timeout function means it will run after defined milliseconds\r\n                console.log(\"I am running after \" + retryDip.pollTimeout + \" Millisecs delay\");\r\n                var intervalPromise = $interval(function () {// this is interval , which will run at regular time gap, and for defined times (count)\r\n                    countOfPoll++;\r\n                    console.log(\"inside intervalPromise\", countOfPoll);\r\n                    console.log(\" counter value at start of interval is ==\", reqData.reqCounter)\r\n\r\n                    // if (retryDip.active && reqData.reqCounter <= 4 ) {\r\n                     if (retryDip.active && countOfPoll <= 3 ) {\r\n                            console.log(\"retryDip.active  true===\", retryDip.active + \" And value of counter =\", reqData.reqCounter);\r\n                        sendSignatureDataToBack(securityParams, defer, retryDip, reqData);\r\n                    } else {\r\n                        console.log(\"retryDip.active  false===\", retryDip.active + \" And value of counter =\", reqData.reqCounter);\r\n                        // console.log(\"intervalPromise.  value===\", intervalPromise);\r\n                        // console.log(\"Specific condition met, resolving defer and cancelling interval\");\r\n                        // var resolvedObject = {\r\n                        //     errorCode: 119900,\r\n                        //     success: false\r\n                        // };\r\n                        // defer.resolve(resolvedObject);\r\n                        // $interval.cancel(intervalPromise);\r\n                    }\r\n\r\n                    console.log(\" counter value here is ==\", reqData.reqCounter)\r\n\r\n                    // Additional condition to resolve defer and cancel interval\r\n                    if (retryDip.active && reqData.reqCounter >4) {\r\n                        console.log(\"Specific condition met, resolving defer and cancelling interval\");\r\n                        var resolvedObject = {\r\n                            errorCode: 119900,\r\n                            success: false\r\n                        };\r\n                        defer.resolve(resolvedObject);\r\n                        $interval.cancel(intervalPromise);\r\n                    }\r\n\r\n                }, retryDip.pollInterval, retryDip.pollCount);\r\n\r\n\r\n\r\n            }, retryDip.pollTimeout);\r\n            console.log(\"yes reached here==\");\r\n            return defer.promise;\r\n        };\r\n        var sendSignatureDataToBack = function (securityParams, defer, retryDip, reqData) {\r\n            // reqData.reqCounter++\r\n            console.log(\"reData sending to backend==\", JSON.stringify(reqData));\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = 'POST';\r\n                // apiURL = CONFIG.apiUrl + '/applicantdetails/consent/finalSubmission/' + this.arn + '?hash_id=' + Math.random();\r\n                apiURL = CONFIG.apiUrl + '/adobe/esign/initiate/' + self.arn + '?hash_id=' + Math.random();\r\n            } else {\r\n                httpMethod = 'GET';\r\n                apiURL = 'resources/data/mock/step12_e-sign/e-sign_initiate.json';\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                params: securityParams,\r\n                data: JSON.stringify(reqData)\r\n            }).then(function (response) {\r\n                reqData.reqCounter++\r\n                //   console.log(\"response from backend  ===\", response.data);\r\n                console.log(\" for counter \", reqData.reqCounter + \" response from backend  for pol count  has value==\", response.data); // Log retryDip object to verify its contents\r\n                if (response.status === 200 && response.data) {\r\n                    // console.log(\"Response 200 of sendSignData function ------- \", response.data);\r\n                    if (response.data.errorCode === 100) {\r\n                        retryDip.active = true;\r\n                        // dipCheck(reqData, securityParams, defer);\r\n                        // sendSignatureData(securityParams, defer, retryDip, reqData);\r\n                    } else if (response.data.errorCode === 101) {\r\n                        console.log(\"101 response current value of counter==\", reqData.reqCounter)\r\n                            retryDip.active = false;\r\n                            // reqData.reqCounter = 3;\r\n                            reqData.reqCounter = 4;\r\n                            $timeout(function () {\r\n                            console.log(\"101 response after making it 4==\", reqData.reqCounter)\r\n                            sendSignatureDataToBack(securityParams, defer, retryDip, reqData);\r\n                        }, 1000);\r\n\r\n                    } else {\r\n                        retryDip.active = false;\r\n                        defer.resolve(response.data);\r\n                    }\r\n                    // return response.data;\r\n                } else {\r\n                    console.log(\"else of 200\", response);\r\n\r\n                    defer.reject(\"Some error has occured\");\r\n                    return {\r\n                        success: false,\r\n                        message: \"Sorry! Some internal error has occured\"\r\n                    };\r\n                }\r\n            }, function (response) {\r\n                console.log(\"last 1\", response);\r\n                // defer.reject(\"Some error has occured\");\r\n\r\n                return {\r\n                    success: false,\r\n                    message: \"Sorry! Some internal error has occured\",\r\n                    errorCode: 404\r\n                };\r\n            }, function (response) {\r\n                console.log(\"last 2\", response);\r\n                return;\r\n            });\r\n        };\r\n\r\n        self.save = function (securityParams) {\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = 'POST';\r\n                apiURL = CONFIG.apiUrl + '/applicantdetails/esignconsent/save/' + self.arn + '/' + true + '?hash_id=' + Math.random();\r\n            } else {\r\n                httpMethod = 'GET';\r\n                apiURL = 'resources/data/mock/step12_e-sign/e-sign_save.json';\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                params: securityParams\r\n            }).then(function (response) {\r\n                if (response.status === 200 && response.data) {\r\n                    // console.log(\"Response of save function ------- \", response.data);\r\n                    return response.data;\r\n                } else {\r\n                    return {\r\n                        success: false,\r\n                        message: \"Sorry! Some internal error has occured\"\r\n                    };\r\n                }\r\n            }, function (response) {\r\n                return {\r\n                    success: false,\r\n                    message: \"Sorry! Some internal error has occured\"\r\n                };\r\n            });\r\n        };\r\n\r\n        self.getESignStatus = function () {\r\n            var securityParams = {\r\n                robocheck: ''\r\n            };\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = 'POST';\r\n                apiURL = CONFIG.apiUrl + '/adobe/esign/status/' + self.arn + '?hash_id=' + Math.random();\r\n            } else {\r\n                httpMethod = 'GET';\r\n                apiURL = 'resources/data/mock/step12_e-sign/e-sign_status.json';\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                params: securityParams\r\n            }).then(function (response) {\r\n                if (response.status === 200 && response.data) {\r\n                    // console.log(\"Response of getESignStatus function ------- \", response.data);\r\n                    return response.data;\r\n                } else {\r\n                    return {\r\n                        success: false,\r\n                        message: \"Sorry! Some internal error has occured\"\r\n                    };\r\n                }\r\n            }, function (response) {\r\n                return {\r\n                    success: false,\r\n                    message: \"Sorry! Some internal error has occured\"\r\n                };\r\n            });\r\n        };\r\n\r\n        self.getUserDetails = function () {\r\n            var userDTO = {},\r\n                localState = appState.getApplicationData();\r\n            if (localState) {\r\n                if (localState.primaryApplicant) {\r\n                    self.arn = localState.primaryApplicant.arn;\r\n                    // this.addressDoc = localState.primaryApplicant.addressOptions ? localState.primaryApplicant.addressOptions : null;\r\n                    // if (this.addressDoc == 'Alternate residence') {\r\n                    //     this.addressDoc = true;\r\n                    // } else {\r\n                    //     this.addressDoc = false;\r\n                    // }\r\n                    localState.primaryApplicant.consents = localState.primaryApplicant.consents || {};\r\n                    userDTO.informationConsent = localState.primaryApplicant.consents.informationConsent == \"Y\";\r\n                    if (localState.primaryApplicant.employmentDetails) {\r\n                        var companyName = localState.primaryApplicant.employmentDetails.changedCompanyName ? localState.primaryApplicant.employmentDetails.changedCompanyName : 'N';\r\n                        var skipPerfios = localState.primaryApplicant.hasSkippedPerfios ? localState.primaryApplicant.hasSkippedPerfios : 'N';\r\n                        var panStatusFlag = localState.primaryApplicant.panStatusFlag ? localState.primaryApplicant.panStatusFlag : 'N';\r\n                        if (companyName == 'Y' || skipPerfios == 'Y' || panStatusFlag == 'NO_PAN_FOUND')\r\n                            self.incomeDoc = true;\r\n                        else\r\n                            self.incomeDoc = false;\r\n                    }\r\n                    if (localState.primaryApplicant.dipDetails) {\r\n                        self.balanceTransferTaken = localState.primaryApplicant.dipDetails.balanceTransferTaken ? localState.primaryApplicant.dipDetails.balanceTransferTaken : 'N';\r\n                        if (self.balanceTransferTaken == 'N') {\r\n                            self.balanceTransferTaken = false;\r\n                        } else {\r\n                            self.balanceTransferTaken = true;\r\n                        }\r\n\r\n                        self.supplementaryCardApplied = localState.primaryApplicant.dipDetails.supplementaryCardApplied ? localState.primaryApplicant.dipDetails.supplementaryCardApplied : null;\r\n                        if (self.supplementaryCardApplied == 'N') {\r\n                            self.supplementaryCardApplied = false;\r\n                        } else {\r\n                            self.supplementaryCardApplied = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return userDTO;\r\n        };\r\n\r\n    }]);\r\n\r\n    module.exports = signatureConsentService.name;\r\n})();\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// resources/js/70ce261303a581a922e317.js","module.exports = \"<div ng-hide=$ctrl.showLoader class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <form name=step12Form focus-on-error novalidate ng-hide=$ctrl.showLoader> <input type=text class=hidden-field ng-model=$ctrl.robocheck tabindex=-1> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <h1 class=\\\"brand-bar no-margin-top\\\"> Marketing Offers </h1> <alert-msg ng-if=\\\"$ctrl.eSignError && !$ctrl.isStaffJourney\\\" type=ERROR> Sorry! There seems to be a technical problem. Request you to save your application and retry at a later time to complete your Credit Card application. </alert-msg> <alert-msg ng-if=\\\"$ctrl.eSignError && $ctrl.isStaffJourney\\\" type=ERROR> Sorry! There seems to be a technical problem. Your HSBC representative will inform you of the next steps to complete the application. </alert-msg> <alert-msg ng-if=$ctrl.errMsg type=ERROR> {{$ctrl.errMsg}} </alert-msg> </div> </div> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <p class=para> From time to time, HSBC communicates various features/products/promotional offers which offer significant benefits to its customers and may use the service of third party agencies to do so. </p> <div> <input type=checkbox id=consentChk name=consentChk class=screen-reader-only ng-model=$ctrl.model.informationConsent ng-change=$ctrl.toggleConsent() ng-focus=\\\"$ctrl.chkFocus = true;\\\" ng-blur=\\\"$ctrl.chkFocus = false;\\\"> <label for=consentChk class=checkbox-label ng-class=\\\"{'focus': $ctrl.chkFocus}\\\"> I authorise HSBC to use information or data relating to me, for communicating marketing offers as outlined above. </label> </div> </div> </div> <step-footer show-back=true back-callback=$ctrl.goback() show-save=true save-callback=$ctrl.save() show-continue=true continue-button-id=continue-btn continue-disabled=false continue-callback=$ctrl.next()> </step-footer> </form> </div> </div> <loading ng-show=$ctrl.showLoader></loading>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/signature-consent/signature-consent.component.html\n// module id = ./src/app/components/journey/signature-consent/signature-consent.component.html\n// module chunks = 17","(function () {\r\n    'use strict';\r\n    var angular = require('angular');\r\n    require('./signature-consent.component.scss');\r\n    require('./signature-consent.component.service.js');\r\n\r\n    var signatureConsentComp = angular.module('journey.module').component('signatureConsent', {\r\n        template: require('./signature-consent.component.html'),\r\n        controller: ['$rootScope', '$anchorScroll', '$state', '$uibModal', '$timeout', 'journeyService', 'signatureConsentService', 'analyticService', 'UtilService', function ($rootScope, $anchorScroll, $state, $uibModal, $timeout, journeyService, signatureConsentService, analyticService, UtilService) {\r\n\r\n            var vm = this;\r\n            vm.showLoader = false;\r\n\r\n            vm.$onInit = function () {\r\n                $rootScope.$broadcast('hide-step-header', {\r\n                    hideHeader: false\r\n                });\r\n                $rootScope.showSelectedCard = true;\r\n                $rootScope.showARN = true;\r\n                $anchorScroll();\r\n                $rootScope.stepsHeader.currentStep = 5;\r\n                vm.model = {};\r\n                vm.model = angular.merge({}, signatureConsentService.getUserDetails());\r\n                vm.isStaffJourney = journeyService.isStaffJourney();\r\n                vm.selectedCard = journeyService.getSelectedCard();\r\n                \r\n                \r\n                $rootScope.dipARN = journeyService.getDataFromStorage().primaryApplicant.dipDetails.dipArn;\r\n                vm.refNumber = journeyService.getDataFromStorage().primaryApplicant.dipDetails.dipArn;\r\n                $timeout(function () {\r\n                    checkESignStatus();\r\n                }, 1000);\r\n                analyticService.pageList.signature.internal_reference_id = journeyService.getDataFromStorageContact().adobeId;\r\n                analyticService.trackPageLoad(analyticService.pageList.signature);\r\n            };\r\n\r\n            var checkESignStatus = function () {\r\n                signatureConsentService.getESignStatus().then(function (result) {\r\n                    if (result.success) {\r\n                        if (journeyService.isStaffJourney()) {\r\n                        // console.log(\"SIGN_CON==COMP_JS\");\r\n                            // $state.go('app.complete-ack',{\r\n                            //     saveData: {\r\n                            //     statusCode: result.errorCode\r\n                            // },'cardKey':vm.selectedCard.key});\r\n                        } else {\r\n                            $state.go('app.complete-ack', {\r\n                                saveData: {\r\n                                    statusCode: result.errorCode\r\n                                },\r\n                                'cardKey':vm.selectedCard.key\r\n                            });\r\n                        }\r\n                    } else {\r\n                        if (result.errorCode === 9002) {\r\n                            // E-sign failure                            \r\n                            vm.eSignError = true;\r\n                            analyticService.buttonList.error.event_content = \"E-Sign failure\";\r\n                            analyticService.trackUserAction(analyticService.buttonList.error);\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n\r\n            vm.toggleConsent = function () {\r\n                analyticService.buttonList.toggleClick.event_content = \"Authorise HSBC for communicating for marketing offers: \" + vm.model.informationConsent ? 'Enabled' : 'Disabled';\r\n                analyticService.trackUserAction(analyticService.buttonList.toggleClick);\r\n            };\r\n\r\n            vm.goback = function () {\r\n                /* var formDetails = {\r\n                    \"primaryApplicant\": {\r\n                        \"signatureConsent\": vm.model.digitalSignConsent == 'yes' ? 'Y' : 'N'\r\n                    }\r\n                }; */\r\n                if (signatureConsentService.incomeDoc) {\r\n                    $state.go('app.journey.document',{'cardKey':vm.selectedCard.key});\r\n                } else if (signatureConsentService.supplementaryCardApplied) {\r\n                    $state.go('app.journey.supplementary',{'cardKey':vm.selectedCard.key});\r\n                } else if (signatureConsentService.balanceTransferTaken) {\r\n                    $state.go('app.journey.balance-transfer',{'cardKey':vm.selectedCard.key});\r\n                } else {\r\n                    $state.go('app.journey.card-DIP',{'cardKey':vm.selectedCard.key});\r\n                }\r\n\r\n                analyticService.buttonList.buttonClick.event_content = \"back\";\r\n                analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n            };\r\n\r\n            vm.next = function () {\r\n                vm.showLoader = true;\r\n                $rootScope.$broadcast(\"trigger-verification-loader\", {\r\n                    showLoader: true,\r\n                    showCard: false,\r\n                    loaderType: \"PERFIOS\",\r\n                });\r\n                vm.eSignError = false;\r\n                var securityParams = {\r\n                    robocheck: vm.robocheck ? vm.robocheck : ''\r\n                };\r\n                var reqData = {\r\n                        \"informationConsent\": vm.model.informationConsent ? \"Y\" : \"N\",\r\n                        \"reqCounter\": 1\r\n                }\r\n                signatureConsentService.sendSignatureData(reqData, securityParams).then(function (result) {\r\n                        console.log('Response code ===', result);\r\n                        if(!result.success){\r\n                            vm.showLoader = false;    \r\n                        }\r\n                    if (result.success) {\r\n                        if (journeyService.isStaffJourney()) {\r\n                                console.log('reahed inside success code sending ahead ===', result);\r\n                            $state.go('app.complete-ack', {\r\n                                saveData: {\r\n                                    statusCode: result.errorCode,\r\n                                    autoUrl: result.signingUrl\r\n                                },\r\n                                'cardKey':vm.selectedCard.key\r\n                            });\r\n                        }\r\n                        else\r\n                        {\r\n                            if (!UtilService.isEmpty(result.signingUrl)) {\r\n                                signatureConsentService.setDataInStorage({ \"consents\": reqData });\r\n                                // E-Sign is mocked up\r\n                               \r\n                                    $state.go('app.complete-ack', {\r\n                                        saveData: {\r\n                                            statusCode: result.errorCode,\r\n                                            autoUrl: result.signingUrl\r\n                                        },\r\n                                        'cardKey':vm.selectedCard.key\r\n                                    });\r\n                                \r\n                            } \r\n                            else {\r\n                                alert(\"There is some error while generating videokyc url\");\r\n                              //  journeyService.setDisableBrowserClose(true);\r\n                                //window.location.href = result.signingUrl;\r\n                            }\r\n                        }\r\n                        \r\n                    } else if (result.errorCode == 3 || result.errorCode == 4) {\r\n                        $state.go('app.journey.s1-cards');\r\n                    }else if (result.errorCode === 10009) {\r\n                        // Invalid OTP\r\n                        vm.errMsg = \"VIDEO_KYC_FAILED\";\r\n                        }else if (result.errorCode === 119900) {\r\n                            // Invalid OTP\r\n                            vm.errMsg = \"PERFIOS_NOT_DONE\";\r\n                        }else if (result.errorCode === 404) {\r\n                            // Invalid OTP\r\n                            vm.errMsg = result.message;\r\n                        }\r\n                });\r\n                analyticService.buttonList.buttonClick.event_content = \"continue\";\r\n                analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n            };\r\n\r\n            vm.save = function () {\r\n                var modalInstance = $uibModal.open({\r\n                    backdrop: 'static',\r\n                    keyboard: false,\r\n                    modalFade: true,\r\n                    component: \"overlaySaveConfirmation\",\r\n                    windowClass: 'card-detail-modal center-modal'\r\n                });\r\n                modalInstance.result.then(function (isSelected) {\r\n                    if (isSelected) {\r\n                        var securityParams = {\r\n                            robocheck: vm.robocheck ? vm.robocheck : ''\r\n                        };\r\n                        signatureConsentService.save(securityParams).then(function (result) {\r\n                            if (result.success) {\r\n                                $state.go('app.save-exit',{'cardKey':vm.selectedCard.key});\r\n                            } else {\r\n                                if (result.errorCode == 3) {\r\n                                    $state.go('app.journey.s1-cards');\r\n                                } else if (result.errorCode == 4) {\r\n                                    $rootScope.sessionError = true;\r\n                                    $state.go('app.app-retrieval');\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }, function () { });\r\n                analyticService.buttonList.buttonClick.event_content = \"save for later\";\r\n                analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n            };\r\n\r\n            // vm.saveFormDetailsInStorage = function (callback) {\r\n            //     var formDetails = {\r\n            //         \"primaryApplicant\": {\r\n            //             \"signatureConsent\": 'Y'\r\n            //         }\r\n            //     };\r\n            //     signatureConsentService.setDataInStorage(formDetails, callback);\r\n            // };\r\n        }]\r\n    });\r\n\r\n    module.exports = signatureConsentComp.name;\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/signature-consent/signature-consent.component.js\n// module id = ./src/app/components/journey/signature-consent/signature-consent.component.js\n// module chunks = 17","(function () {\r\n    'use strict';\r\n\r\n    var signatureConsentService = angular.module('journey.module').service('signatureConsentService', ['$rootScope', '$http', '$q', '$timeout', '$interval', 'appState', 'CONFIG', function ($rootScope, $http, $q, $timeout, $interval, appState, CONFIG) {\r\n        var self = this;\r\n        self.arn = null;\r\n        self.balanceTransferTaken = null;\r\n\r\n        self.setDataInStorage = function (formDetails) {\r\n            var arnData = angular.merge({}, appState.getApplicationData(), { \"primaryApplicant\": formDetails });\r\n            appState.setApplicationData(arnData);\r\n            // callback(null, formDetails);\r\n        };\r\n\r\n        self.getDataFromStorage = function () {\r\n            return appState.getApplicationData();\r\n        };\r\n\r\n\r\n        self.sendSignatureData = function (reqData, securityParams) {\r\n            console.log(\"very first log in service\");\r\n\r\n            var retryDip = {}; // Initialize retryDip with an empty object\r\n            retryDip.active = true;\r\n            retryDip.pollTimeout = 3500;\r\n            retryDip.pollInterval = 3500;\r\n            retryDip.pollCount = 6;\r\n\r\n            var defer = $q.defer();\r\n            // console.log(\"retryDip 1 initial Object properties:\", retryDip); // Log retryDip object to verify its contents\r\n\r\n            sendSignatureDataToBack(securityParams, defer, retryDip, reqData); // this will run for first time\r\n            var countOfPoll = 0;\r\n\r\n            $timeout(function () {//this is timeout function means it will run after defined milliseconds\r\n                console.log(\"I am running after \" + retryDip.pollTimeout + \" Millisecs delay\");\r\n                var intervalPromise = $interval(function () {// this is interval , which will run at regular time gap, and for defined times (count)\r\n                    countOfPoll++;\r\n                    console.log(\"inside intervalPromise\", countOfPoll);\r\n                    console.log(\" counter value at start of interval is ==\", reqData.reqCounter)\r\n\r\n                    // if (retryDip.active && reqData.reqCounter <= 4 ) {\r\n                     if (retryDip.active && countOfPoll <= 3 ) {\r\n                            console.log(\"retryDip.active  true===\", retryDip.active + \" And value of counter =\", reqData.reqCounter);\r\n                        sendSignatureDataToBack(securityParams, defer, retryDip, reqData);\r\n                    } else {\r\n                        console.log(\"retryDip.active  false===\", retryDip.active + \" And value of counter =\", reqData.reqCounter);\r\n                        // console.log(\"intervalPromise.  value===\", intervalPromise);\r\n                        // console.log(\"Specific condition met, resolving defer and cancelling interval\");\r\n                        // var resolvedObject = {\r\n                        //     errorCode: 119900,\r\n                        //     success: false\r\n                        // };\r\n                        // defer.resolve(resolvedObject);\r\n                        // $interval.cancel(intervalPromise);\r\n                    }\r\n\r\n                    console.log(\" counter value here is ==\", reqData.reqCounter)\r\n\r\n                    // Additional condition to resolve defer and cancel interval\r\n                    if (retryDip.active && reqData.reqCounter >4) {\r\n                        console.log(\"Specific condition met, resolving defer and cancelling interval\");\r\n                        var resolvedObject = {\r\n                            errorCode: 119900,\r\n                            success: false\r\n                        };\r\n                        defer.resolve(resolvedObject);\r\n                        $interval.cancel(intervalPromise);\r\n                    }\r\n\r\n                }, retryDip.pollInterval, retryDip.pollCount);\r\n\r\n\r\n\r\n            }, retryDip.pollTimeout);\r\n            console.log(\"yes reached here==\");\r\n            return defer.promise;\r\n        };\r\n        var sendSignatureDataToBack = function (securityParams, defer, retryDip, reqData) {\r\n            // reqData.reqCounter++\r\n            console.log(\"reData sending to backend==\", JSON.stringify(reqData));\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = 'POST';\r\n                // apiURL = CONFIG.apiUrl + '/applicantdetails/consent/finalSubmission/' + this.arn + '?hash_id=' + Math.random();\r\n                apiURL = CONFIG.apiUrl + '/adobe/esign/initiate/' + self.arn + '?hash_id=' + Math.random();\r\n            } else {\r\n                httpMethod = 'GET';\r\n                apiURL = 'resources/data/mock/step12_e-sign/e-sign_initiate.json';\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                params: securityParams,\r\n                data: JSON.stringify(reqData)\r\n            }).then(function (response) {\r\n                reqData.reqCounter++\r\n                //   console.log(\"response from backend  ===\", response.data);\r\n                console.log(\" for counter \", reqData.reqCounter + \" response from backend  for pol count  has value==\", response.data); // Log retryDip object to verify its contents\r\n                if (response.status === 200 && response.data) {\r\n                    // console.log(\"Response 200 of sendSignData function ------- \", response.data);\r\n                    if (response.data.errorCode === 100) {\r\n                        retryDip.active = true;\r\n                        // dipCheck(reqData, securityParams, defer);\r\n                        // sendSignatureData(securityParams, defer, retryDip, reqData);\r\n                    } else if (response.data.errorCode === 101) {\r\n                        console.log(\"101 response current value of counter==\", reqData.reqCounter)\r\n                            retryDip.active = false;\r\n                            // reqData.reqCounter = 3;\r\n                            reqData.reqCounter = 4;\r\n                            $timeout(function () {\r\n                            console.log(\"101 response after making it 4==\", reqData.reqCounter)\r\n                            sendSignatureDataToBack(securityParams, defer, retryDip, reqData);\r\n                        }, 1000);\r\n\r\n                    } else {\r\n                        retryDip.active = false;\r\n                        defer.resolve(response.data);\r\n                    }\r\n                    // return response.data;\r\n                } else {\r\n                    console.log(\"else of 200\", response);\r\n\r\n                    defer.reject(\"Some error has occured\");\r\n                    return {\r\n                        success: false,\r\n                        message: \"Sorry! Some internal error has occured\"\r\n                    };\r\n                }\r\n            }, function (response) {\r\n                console.log(\"last 1\", response);\r\n                // defer.reject(\"Some error has occured\");\r\n\r\n                return {\r\n                    success: false,\r\n                    message: \"Sorry! Some internal error has occured\",\r\n                    errorCode: 404\r\n                };\r\n            }, function (response) {\r\n                console.log(\"last 2\", response);\r\n                return;\r\n            });\r\n        };\r\n\r\n        self.save = function (securityParams) {\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = 'POST';\r\n                apiURL = CONFIG.apiUrl + '/applicantdetails/esignconsent/save/' + self.arn + '/' + true + '?hash_id=' + Math.random();\r\n            } else {\r\n                httpMethod = 'GET';\r\n                apiURL = 'resources/data/mock/step12_e-sign/e-sign_save.json';\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                params: securityParams\r\n            }).then(function (response) {\r\n                if (response.status === 200 && response.data) {\r\n                    // console.log(\"Response of save function ------- \", response.data);\r\n                    return response.data;\r\n                } else {\r\n                    return {\r\n                        success: false,\r\n                        message: \"Sorry! Some internal error has occured\"\r\n                    };\r\n                }\r\n            }, function (response) {\r\n                return {\r\n                    success: false,\r\n                    message: \"Sorry! Some internal error has occured\"\r\n                };\r\n            });\r\n        };\r\n\r\n        self.getESignStatus = function () {\r\n            var securityParams = {\r\n                robocheck: ''\r\n            };\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = 'POST';\r\n                apiURL = CONFIG.apiUrl + '/adobe/esign/status/' + self.arn + '?hash_id=' + Math.random();\r\n            } else {\r\n                httpMethod = 'GET';\r\n                apiURL = 'resources/data/mock/step12_e-sign/e-sign_status.json';\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                params: securityParams\r\n            }).then(function (response) {\r\n                if (response.status === 200 && response.data) {\r\n                    // console.log(\"Response of getESignStatus function ------- \", response.data);\r\n                    return response.data;\r\n                } else {\r\n                    return {\r\n                        success: false,\r\n                        message: \"Sorry! Some internal error has occured\"\r\n                    };\r\n                }\r\n            }, function (response) {\r\n                return {\r\n                    success: false,\r\n                    message: \"Sorry! Some internal error has occured\"\r\n                };\r\n            });\r\n        };\r\n\r\n        self.getUserDetails = function () {\r\n            var userDTO = {},\r\n                localState = appState.getApplicationData();\r\n            if (localState) {\r\n                if (localState.primaryApplicant) {\r\n                    self.arn = localState.primaryApplicant.arn;\r\n                    // this.addressDoc = localState.primaryApplicant.addressOptions ? localState.primaryApplicant.addressOptions : null;\r\n                    // if (this.addressDoc == 'Alternate residence') {\r\n                    //     this.addressDoc = true;\r\n                    // } else {\r\n                    //     this.addressDoc = false;\r\n                    // }\r\n                    localState.primaryApplicant.consents = localState.primaryApplicant.consents || {};\r\n                    userDTO.informationConsent = localState.primaryApplicant.consents.informationConsent == \"Y\";\r\n                    if (localState.primaryApplicant.employmentDetails) {\r\n                        var companyName = localState.primaryApplicant.employmentDetails.changedCompanyName ? localState.primaryApplicant.employmentDetails.changedCompanyName : 'N';\r\n                        var skipPerfios = localState.primaryApplicant.hasSkippedPerfios ? localState.primaryApplicant.hasSkippedPerfios : 'N';\r\n                        var panStatusFlag = localState.primaryApplicant.panStatusFlag ? localState.primaryApplicant.panStatusFlag : 'N';\r\n                        if (companyName == 'Y' || skipPerfios == 'Y' || panStatusFlag == 'NO_PAN_FOUND')\r\n                            self.incomeDoc = true;\r\n                        else\r\n                            self.incomeDoc = false;\r\n                    }\r\n                    if (localState.primaryApplicant.dipDetails) {\r\n                        self.balanceTransferTaken = localState.primaryApplicant.dipDetails.balanceTransferTaken ? localState.primaryApplicant.dipDetails.balanceTransferTaken : 'N';\r\n                        if (self.balanceTransferTaken == 'N') {\r\n                            self.balanceTransferTaken = false;\r\n                        } else {\r\n                            self.balanceTransferTaken = true;\r\n                        }\r\n\r\n                        self.supplementaryCardApplied = localState.primaryApplicant.dipDetails.supplementaryCardApplied ? localState.primaryApplicant.dipDetails.supplementaryCardApplied : null;\r\n                        if (self.supplementaryCardApplied == 'N') {\r\n                            self.supplementaryCardApplied = false;\r\n                        } else {\r\n                            self.supplementaryCardApplied = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return userDTO;\r\n        };\r\n\r\n    }]);\r\n\r\n    module.exports = signatureConsentService.name;\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/signature-consent/signature-consent.component.service.js\n// module id = ./src/app/components/journey/signature-consent/signature-consent.component.service.js\n// module chunks = 17"],"sourceRoot":""}