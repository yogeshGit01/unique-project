{"version":3,"sources":["webpack:///resources/js/a8157b03f3a4611fbca416.js","webpack:///./src/app/components/journey/staff-details/staff-details.component.html","webpack:///./src/app/components/journey/staff-details/staff-details.component.js","webpack:///./src/app/components/journey/staff-details/staff-details.service.js"],"names":["webpackJsonp","./src/app/components/journey/staff-details/staff-details.component.html","module","exports","./src/app/components/journey/staff-details/staff-details.component.js","__webpack_require__","angular","staffDetailsComp","component","template","controller","$rootScope","$anchorScroll","$uibModal","$state","$timeout","analyticService","journeyService","staffService","txnId","vm","this","$onInit","$broadcast","hideHeader","showSelectedCard","selectedCard","getSelectedCard","showARN","stepsHeader","currentStep","otpSent","model","psid","getApplicantInfo","dipARN","getDataFromStorage","primaryApplicant","dipDetails","dipArn","trackPageLoad","pageList","staffDetails","generateOtp","staffForm","$valid","securityParams","robocheck","reqData","otp","then","result","success","staffMobile","mobile","showOtpSent","showErr","submitted","errorCode","errMsg","buttonList","error","event_content","trackUserAction","message","buttonClick","submit","validateOtp","go","saveData","statusCode","autoUrl","leadGenerationReason","cardKey","key","save","open","backdrop","keyboard","modalFade","windowClass","isSelected","sessionError","name","./src/app/components/journey/staff-details/staff-details.component.scss","./src/app/components/journey/staff-details/staff-details.service.js","service","$http","CONFIG","self","apiURL","httpMethod","integrationsActive","apiUrl","Math","random","method","url","headers","Content-Type","params","response","status","data"],"mappings":"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","file":"resources/js/a8157b03f3a4611fbca416.js","sourcesContent":["webpackJsonp([16],{\n\n/***/ \"./src/app/components/journey/staff-details/staff-details.component.html\":\n/* unknown exports provided */\n/* all exports used */\n/*!*******************************************************************************!*\\\n  !*** ./src/app/components/journey/staff-details/staff-details.component.html ***!\n  \\*******************************************************************************/\n/***/ (function(module, exports) {\n\nmodule.exports = \"<form name=staffForm autocomplete=off novalidate> <input type=text class=hidden-field ng-model=$ctrl.robocheck tabindex=-1> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <h1 class=\\\"brand-bar no-margin-top\\\"> Referrer staff details </h1> <alert-msg ng-if=$ctrl.showOtpSent type=SUCCESS close=$ctrl.closeSuccessMsg()> One Time Password (OTP) has been sent to the Mobile number {{$ctrl.staffMobile}}. Please click \\\"Re-send OTP\\\" if you have not received OTP </alert-msg> <alert-msg ng-if=$ctrl.showErr type=ERROR> {{$ctrl.errMsg}} </alert-msg> </div> </div> <div class=row> <div class=\\\"col-md-4 col-sm-6 col-xs-12\\\"> <div class=form-group> <label for=psid>People Soft ID (PSID)</label> <div ng-class=\\\"{'has-error': staffForm.psid.$invalid && ($ctrl.submitted || staffForm.psid.$touched)}\\\"> <input trim type=tel id=psid name=psid class=form-control ng-model=$ctrl.model.psid only-number=8 ng-maxlength=8 aria-describedby=psidErrMsg aria-invalid=\\\"{{staffForm.psid.$invalid && ($ctrl.submitted || staffForm.psid.$touched)}}\\\" disabled=disabled required> </div> <div id=psidErrMsg ng-class=\\\"{'has-error': staffForm.psid.$invalid}\\\"> <validation-msg ng-if=\\\"staffForm.psid.$error.required && (staffForm.psid.$touched || $ctrl.submitted)\\\"> Please enter your PSID. </validation-msg> <validation-msg ng-if=\\\"staffForm.psid.$error.minlength && (staffForm.psid.$touched || $ctrl.submitted)\\\"> Please enter valid PSID. </validation-msg> </div> </div> </div> </div> <div ng-if=$ctrl.otpSent class=line-spacer> <div class=form-group> <label for=otp>OTP</label> <div class=row> <div class=\\\"col-md-4 col-sm-6 col-xs-12\\\"> <div ng-class=\\\"{'has-error': staffForm.otp.$invalid && ($ctrl.submitted || staffForm.otp.$touched)}\\\"> <input trim type=\\\"{{$ctrl.showOtp?'tel':'password'}}\\\" id=otp name=otp class=form-control ng-model=$ctrl.model.otp only-number=6 ng-minlength=6 aria-describedby=psidErrMsg aria-invalid=\\\"{{staffForm.otp.$invalid && ($ctrl.submitted || staffForm.otp.$touched)}}\\\" required/> </div> <div id=psidErrMsg ng-class=\\\"{'has-error': staffForm.otp.$invalid}\\\"> <validation-msg ng-if=\\\"staffForm.otp.$error.required && (staffForm.otp.$touched || $ctrl.submitted)\\\"> Please enter OTP </validation-msg> <validation-msg ng-if=\\\"staffForm.otp.$error.minlength && (staffForm.otp.$touched || $ctrl.submitted)\\\"> Invalid OTP </validation-msg> </div> </div> <div class=\\\"col-md-4 col-sm-6 col-xs-12 line-spacer-xs\\\"> <span class=link-text ng-click=$ctrl.generateOtp(staffForm)>Re-send OTP</span> </div> </div> </div> <div class=\\\"form-group line-spacer\\\"> <input type=checkbox id=showOtpChk name=showOtpChk class=screen-reader-only ng-model=$ctrl.showOtp ng-focus=\\\"$ctrl.hasChkFocus = true;\\\" ng-blur=\\\"$ctrl.hasChkFocus = false;\\\"> <label for=showOtpChk class=checkbox-label ng-class=\\\"{'focus': $ctrl.hasChkFocus}\\\">Show OTP</label> </div> <p class=disclaimer> By entering the OTP above, I certify that I have met the Credit Card applicant in person (Face to Face) and have assisted the applicant to complete the application journey. </p> </div> <step-footer show-generate-otp=!$ctrl.otpSent generate-otp-callback=$ctrl.generateOtp(staffForm) show-save=true save-callback=$ctrl.save() show-continue=$ctrl.otpSent continue-callback=$ctrl.submit(staffForm)> </step-footer> </form>\";\n\n/***/ }),\n\n/***/ \"./src/app/components/journey/staff-details/staff-details.component.js\":\n/* unknown exports provided */\n/* all exports used */\n/*!*****************************************************************************!*\\\n  !*** ./src/app/components/journey/staff-details/staff-details.component.js ***!\n  \\*****************************************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n(function () {\r\n    'use strict';\r\n    var angular = __webpack_require__(/*! angular */ \"./node_modules/angular/index.js\");\r\n    __webpack_require__(/*! ./staff-details.component.scss */ \"./src/app/components/journey/staff-details/staff-details.component.scss\");\r\n    __webpack_require__(/*! ./staff-details.service */ \"./src/app/components/journey/staff-details/staff-details.service.js\");\r\n\r\n    var staffDetailsComp = angular.module('journey.module').component('staffDetails', {\r\n        template: __webpack_require__(/*! ./staff-details.component.html */ \"./src/app/components/journey/staff-details/staff-details.component.html\"),\r\n        controller: ['$rootScope', '$anchorScroll', '$uibModal', '$state', '$timeout', 'analyticService', 'journeyService', 'staffService', function ($rootScope, $anchorScroll, $uibModal, $state, $timeout, analyticService, journeyService, staffService) {\r\n            var vm = this, txnId;\r\n\r\n            vm.$onInit = function () {\r\n                $rootScope.$broadcast('hide-step-header', {\r\n                    hideHeader: false\r\n                });\r\n                $rootScope.showSelectedCard = true;\r\n                vm.selectedCard = journeyService.getSelectedCard();\r\n                $rootScope.showARN = true;\r\n                $anchorScroll();\r\n                $rootScope.stepsHeader.currentStep = 5;\r\n                vm.otpSent = false;\r\n                vm.model = {};\r\n                vm.model.psid = journeyService.getApplicantInfo(\"psid\");\r\n                $rootScope.dipARN = journeyService.getDataFromStorage().primaryApplicant.dipDetails.dipArn;\r\n                analyticService.trackPageLoad(analyticService.pageList.staffDetails);\r\n            };\r\n\r\n            //vm.showOtp=false;\r\n            vm.generateOtp = function (staffForm) {\r\n                if (staffForm.psid.$valid) {\r\n                    var securityParams = {\r\n                        robocheck: vm.robocheck ? vm.robocheck : ''\r\n                    };\r\n                    var reqData = {\r\n                        psid: vm.model.psid,\r\n                        otp: \"\"\r\n                    }\r\n                    staffService.generateOtp(reqData, securityParams).then(function (result) {\r\n                        if (result.success) {\r\n                            txnId = result.txnId;\r\n                            vm.staffMobile = result.mobile;\r\n                            vm.otpSent = true;\r\n                            vm.showOtpSent = true;\r\n                            vm.showErr = false;\r\n                            vm.submitted = false;\r\n                        } else {\r\n                            vm.showOtpSent = false;\r\n                            vm.showErr = true;\r\n                            if (result.errorCode === 10000) {\r\n                                // Invalid PSID: PSID doesn't exist\r\n                                vm.errMsg = \"Invalid PSID\";\r\n                                analyticService.buttonList.error.event_content = \"Invalid PSID error\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            } else if (result.errorCode === 10001) {\r\n                                // Inactive PSID\r\n                                vm.errMsg = \"Inactive PSID\";\r\n                                analyticService.buttonList.error.event_content = \"Inactive PSID error\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            } else {\r\n                                vm.errMsg = result.message;\r\n                            }\r\n                        }\r\n                    });\r\n                    analyticService.buttonList.buttonClick.event_content = \"generate otp\";\r\n                    analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n                } else {\r\n                    // vm.otpSent = false;\r\n                    // vm.showOtpSent = false;\r\n                    vm.submitted = true;\r\n                }\r\n            };\r\n\r\n            vm.submit = function (staffForm) {\r\n                //if (staffForm.$valid) { original one \r\n                    if (staffForm.otp.$valid) {\r\n                    vm.submitted = false;\r\n                    var securityParams = {\r\n                        robocheck: vm.robocheck ? vm.robocheck : ''\r\n                    };\r\n                    var reqData = {\r\n                        txnId: txnId,\r\n                        otp: vm.model.otp,\r\n                        psid: vm.model.psid\r\n                    }\r\n                    staffService.validateOtp(reqData, securityParams).then(function (result) {\r\n                        if (result.success) {\r\n                            $state.go('app.complete-ack', {\r\n                                saveData: {\r\n                                    statusCode: result.errorCode,\r\n                                    autoUrl: result.leadGenerationReason\r\n                                },'cardKey':vm.selectedCard.key\r\n                            });\r\n                        } else {\r\n                            vm.submitted = true;\r\n                            vm.showOtpSent = false;\r\n                            vm.showErr = true;\r\n                            if (result.errorCode === 1005) {\r\n                                // OTP expired\r\n                                vm.errMsg = \"Expired OTP, please regenerate OTP and retry\";\r\n                                analyticService.buttonList.error.event_content = \"OTP expired error\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            } else if (result.errorCode === 1003) {\r\n                                // Invalid OTP\r\n                                vm.errMsg = \"Invalid OTP\";\r\n                                analyticService.buttonList.error.event_content = \"Invalid OTP error\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            }else if (result.errorCode === 10009) {\r\n                                // Invalid OTP\r\n                                vm.errMsg = \"VIDEO_KYC_FAILED\";\r\n                                analyticService.buttonList.error.event_content = \"Invalid OTP error\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            }\r\n                             else {\r\n                                vm.errMsg = result.message;\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    vm.submitted = true;\r\n                }\r\n            };\r\n\r\n            vm.save = function () {\r\n                var modalInstance = $uibModal.open({\r\n                    backdrop: 'static',\r\n                    keyboard: false,\r\n                    modalFade: true,\r\n                    component: \"overlaySaveConfirmation\",\r\n                    windowClass: 'card-detail-modal center-modal'\r\n                });\r\n                modalInstance.result.then(function (isSelected) {\r\n                    if (isSelected) {\r\n                        var securityParams = {\r\n                            robocheck: vm.robocheck ? vm.robocheck : ''\r\n                        };\r\n                        staffService.save(securityParams).then(function (result) {\r\n                            if (result.success) {\r\n                                $state.go('app.save-exit',{'cardKey':vm.selectedCard.key});\r\n                            } else {\r\n                                if (result.errorCode == 3) {\r\n                                    $state.go('app.journey.s1-cards');\r\n                                } else if (result.errorCode == 4) {\r\n                                    $rootScope.sessionError = true;\r\n                                    $state.go('app.app-retrieval');\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                analyticService.buttonList.buttonClick.event_content = \"save for later\";\r\n                analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n            };\r\n        }]\r\n    });\r\n\r\n    module.exports = staffDetailsComp.name;\r\n})();\n\n/***/ }),\n\n/***/ \"./src/app/components/journey/staff-details/staff-details.component.scss\":\n/* unknown exports provided */\n/* all exports used */\n/*!*******************************************************************************!*\\\n  !*** ./src/app/components/journey/staff-details/staff-details.component.scss ***!\n  \\*******************************************************************************/\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"./src/app/components/journey/staff-details/staff-details.service.js\":\n/* unknown exports provided */\n/* all exports used */\n/*!***************************************************************************!*\\\n  !*** ./src/app/components/journey/staff-details/staff-details.service.js ***!\n  \\***************************************************************************/\n/***/ (function(module, exports) {\n\n(function () {\r\n    'use strict';\r\n    var service = angular.module('journey.module').service('staffService', ['$rootScope', '$http', 'CONFIG', 'journeyService', function ($rootScope, $http, CONFIG, journeyService) {\r\n        var self = this;\r\n\r\n        self.save = function (securityParams) {\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = \"POST\";\r\n                apiURL = CONFIG.apiUrl + \"/applicantdetails/staffdetails/save/\" + journeyService.getApplicantInfo(\"arn\") + \"?hash_id=\" + Math.random();\r\n            } else {\r\n                httpMethod = \"GET\";\r\n                apiURL = \"resources/data/mock/staff-details/staff-details_save.json\"\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                params: securityParams\r\n            }).then(function (response) {\r\n                if (response.status === 200 && response.data) {\r\n                    return response.data;\r\n                } else {\r\n                    return {\r\n                        success: false,\r\n                        message: \"Sorry! there seems to be some technical error.\"\r\n                    };\r\n                }\r\n            }, function (error) {\r\n                return {\r\n                    success: false,\r\n                    message: \"Sorry! there seems to be some technical error.\"\r\n                };\r\n            });\r\n        };\r\n\r\n        self.validateOtp = function (reqData, securityParams) {\r\n            var apiURL, httpMethod;\r\n            // reqData = angular.merge({}, reqData, { arn: journeyService.getApplicantInfo(\"arn\") });\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = \"POST\";\r\n                apiURL = CONFIG.apiUrl + \"/staffjourney/validateOTP/\" + journeyService.getApplicantInfo(\"arn\") + \"?hash_id=\" + Math.random();\r\n            } else {\r\n                httpMethod = \"GET\";\r\n                apiURL = \"resources/data/mock/staff-details/staff-details_validate_otp.json\"\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                data: reqData,\r\n                params: securityParams\r\n            }).then(function (response) {\r\n                if (response.status === 200 && response.data) {\r\n                    return response.data;\r\n                } else {\r\n                    return {\r\n                        success: false,\r\n                        message: \"Sorry! there seems to be some technical error.\"\r\n                    };\r\n                }\r\n            }, function (error) {\r\n                return {\r\n                    success: false,\r\n                    message: \"Sorry! there seems to be some technical error.\"\r\n                };\r\n            });\r\n        };\r\n\r\n        self.generateOtp = function (reqData, securityParams) {\r\n            var apiURL, httpMethod;\r\n            // reqData = angular.merge({}, reqData, { arn: journeyService.getApplicantInfo(\"arn\") });\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = \"POST\";\r\n                apiURL = CONFIG.apiUrl + \"/staffjourney/generateOtp/\" + journeyService.getApplicantInfo(\"arn\") + \"?hash_id=\" + Math.random();\r\n            } else {\r\n                httpMethod = \"GET\";\r\n                apiURL = \"resources/data/mock/staff-details/staff-details_generate_otp.json\"\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                data: reqData,\r\n                params: securityParams\r\n            }).then(function (response) {\r\n                if (response.status === 200 && response.data) {\r\n                    return response.data;\r\n                } else {\r\n                    return {\r\n                        success: false,\r\n                        message: \"Sorry! there seems to be some technical error.\"\r\n                    };\r\n                }\r\n            }, function (error) {\r\n                return {\r\n                    success: false,\r\n                    message: \"Sorry! there seems to be some technical error.\"\r\n                };\r\n            });\r\n        };\r\n    }]);\r\n    module.exports = service.name;\r\n})();\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// resources/js/a8157b03f3a4611fbca416.js","module.exports = \"<form name=staffForm autocomplete=off novalidate> <input type=text class=hidden-field ng-model=$ctrl.robocheck tabindex=-1> <div class=row> <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\"> <h1 class=\\\"brand-bar no-margin-top\\\"> Referrer staff details </h1> <alert-msg ng-if=$ctrl.showOtpSent type=SUCCESS close=$ctrl.closeSuccessMsg()> One Time Password (OTP) has been sent to the Mobile number {{$ctrl.staffMobile}}. Please click \\\"Re-send OTP\\\" if you have not received OTP </alert-msg> <alert-msg ng-if=$ctrl.showErr type=ERROR> {{$ctrl.errMsg}} </alert-msg> </div> </div> <div class=row> <div class=\\\"col-md-4 col-sm-6 col-xs-12\\\"> <div class=form-group> <label for=psid>People Soft ID (PSID)</label> <div ng-class=\\\"{'has-error': staffForm.psid.$invalid && ($ctrl.submitted || staffForm.psid.$touched)}\\\"> <input trim type=tel id=psid name=psid class=form-control ng-model=$ctrl.model.psid only-number=8 ng-maxlength=8 aria-describedby=psidErrMsg aria-invalid=\\\"{{staffForm.psid.$invalid && ($ctrl.submitted || staffForm.psid.$touched)}}\\\" disabled=disabled required> </div> <div id=psidErrMsg ng-class=\\\"{'has-error': staffForm.psid.$invalid}\\\"> <validation-msg ng-if=\\\"staffForm.psid.$error.required && (staffForm.psid.$touched || $ctrl.submitted)\\\"> Please enter your PSID. </validation-msg> <validation-msg ng-if=\\\"staffForm.psid.$error.minlength && (staffForm.psid.$touched || $ctrl.submitted)\\\"> Please enter valid PSID. </validation-msg> </div> </div> </div> </div> <div ng-if=$ctrl.otpSent class=line-spacer> <div class=form-group> <label for=otp>OTP</label> <div class=row> <div class=\\\"col-md-4 col-sm-6 col-xs-12\\\"> <div ng-class=\\\"{'has-error': staffForm.otp.$invalid && ($ctrl.submitted || staffForm.otp.$touched)}\\\"> <input trim type=\\\"{{$ctrl.showOtp?'tel':'password'}}\\\" id=otp name=otp class=form-control ng-model=$ctrl.model.otp only-number=6 ng-minlength=6 aria-describedby=psidErrMsg aria-invalid=\\\"{{staffForm.otp.$invalid && ($ctrl.submitted || staffForm.otp.$touched)}}\\\" required/> </div> <div id=psidErrMsg ng-class=\\\"{'has-error': staffForm.otp.$invalid}\\\"> <validation-msg ng-if=\\\"staffForm.otp.$error.required && (staffForm.otp.$touched || $ctrl.submitted)\\\"> Please enter OTP </validation-msg> <validation-msg ng-if=\\\"staffForm.otp.$error.minlength && (staffForm.otp.$touched || $ctrl.submitted)\\\"> Invalid OTP </validation-msg> </div> </div> <div class=\\\"col-md-4 col-sm-6 col-xs-12 line-spacer-xs\\\"> <span class=link-text ng-click=$ctrl.generateOtp(staffForm)>Re-send OTP</span> </div> </div> </div> <div class=\\\"form-group line-spacer\\\"> <input type=checkbox id=showOtpChk name=showOtpChk class=screen-reader-only ng-model=$ctrl.showOtp ng-focus=\\\"$ctrl.hasChkFocus = true;\\\" ng-blur=\\\"$ctrl.hasChkFocus = false;\\\"> <label for=showOtpChk class=checkbox-label ng-class=\\\"{'focus': $ctrl.hasChkFocus}\\\">Show OTP</label> </div> <p class=disclaimer> By entering the OTP above, I certify that I have met the Credit Card applicant in person (Face to Face) and have assisted the applicant to complete the application journey. </p> </div> <step-footer show-generate-otp=!$ctrl.otpSent generate-otp-callback=$ctrl.generateOtp(staffForm) show-save=true save-callback=$ctrl.save() show-continue=$ctrl.otpSent continue-callback=$ctrl.submit(staffForm)> </step-footer> </form>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/staff-details/staff-details.component.html\n// module id = ./src/app/components/journey/staff-details/staff-details.component.html\n// module chunks = 16","(function () {\r\n    'use strict';\r\n    var angular = require('angular');\r\n    require('./staff-details.component.scss');\r\n    require('./staff-details.service');\r\n\r\n    var staffDetailsComp = angular.module('journey.module').component('staffDetails', {\r\n        template: require('./staff-details.component.html'),\r\n        controller: ['$rootScope', '$anchorScroll', '$uibModal', '$state', '$timeout', 'analyticService', 'journeyService', 'staffService', function ($rootScope, $anchorScroll, $uibModal, $state, $timeout, analyticService, journeyService, staffService) {\r\n            var vm = this, txnId;\r\n\r\n            vm.$onInit = function () {\r\n                $rootScope.$broadcast('hide-step-header', {\r\n                    hideHeader: false\r\n                });\r\n                $rootScope.showSelectedCard = true;\r\n                vm.selectedCard = journeyService.getSelectedCard();\r\n                $rootScope.showARN = true;\r\n                $anchorScroll();\r\n                $rootScope.stepsHeader.currentStep = 5;\r\n                vm.otpSent = false;\r\n                vm.model = {};\r\n                vm.model.psid = journeyService.getApplicantInfo(\"psid\");\r\n                $rootScope.dipARN = journeyService.getDataFromStorage().primaryApplicant.dipDetails.dipArn;\r\n                analyticService.trackPageLoad(analyticService.pageList.staffDetails);\r\n            };\r\n\r\n            //vm.showOtp=false;\r\n            vm.generateOtp = function (staffForm) {\r\n                if (staffForm.psid.$valid) {\r\n                    var securityParams = {\r\n                        robocheck: vm.robocheck ? vm.robocheck : ''\r\n                    };\r\n                    var reqData = {\r\n                        psid: vm.model.psid,\r\n                        otp: \"\"\r\n                    }\r\n                    staffService.generateOtp(reqData, securityParams).then(function (result) {\r\n                        if (result.success) {\r\n                            txnId = result.txnId;\r\n                            vm.staffMobile = result.mobile;\r\n                            vm.otpSent = true;\r\n                            vm.showOtpSent = true;\r\n                            vm.showErr = false;\r\n                            vm.submitted = false;\r\n                        } else {\r\n                            vm.showOtpSent = false;\r\n                            vm.showErr = true;\r\n                            if (result.errorCode === 10000) {\r\n                                // Invalid PSID: PSID doesn't exist\r\n                                vm.errMsg = \"Invalid PSID\";\r\n                                analyticService.buttonList.error.event_content = \"Invalid PSID error\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            } else if (result.errorCode === 10001) {\r\n                                // Inactive PSID\r\n                                vm.errMsg = \"Inactive PSID\";\r\n                                analyticService.buttonList.error.event_content = \"Inactive PSID error\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            } else {\r\n                                vm.errMsg = result.message;\r\n                            }\r\n                        }\r\n                    });\r\n                    analyticService.buttonList.buttonClick.event_content = \"generate otp\";\r\n                    analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n                } else {\r\n                    // vm.otpSent = false;\r\n                    // vm.showOtpSent = false;\r\n                    vm.submitted = true;\r\n                }\r\n            };\r\n\r\n            vm.submit = function (staffForm) {\r\n                //if (staffForm.$valid) { original one \r\n                    if (staffForm.otp.$valid) {\r\n                    vm.submitted = false;\r\n                    var securityParams = {\r\n                        robocheck: vm.robocheck ? vm.robocheck : ''\r\n                    };\r\n                    var reqData = {\r\n                        txnId: txnId,\r\n                        otp: vm.model.otp,\r\n                        psid: vm.model.psid\r\n                    }\r\n                    staffService.validateOtp(reqData, securityParams).then(function (result) {\r\n                        if (result.success) {\r\n                            $state.go('app.complete-ack', {\r\n                                saveData: {\r\n                                    statusCode: result.errorCode,\r\n                                    autoUrl: result.leadGenerationReason\r\n                                },'cardKey':vm.selectedCard.key\r\n                            });\r\n                        } else {\r\n                            vm.submitted = true;\r\n                            vm.showOtpSent = false;\r\n                            vm.showErr = true;\r\n                            if (result.errorCode === 1005) {\r\n                                // OTP expired\r\n                                vm.errMsg = \"Expired OTP, please regenerate OTP and retry\";\r\n                                analyticService.buttonList.error.event_content = \"OTP expired error\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            } else if (result.errorCode === 1003) {\r\n                                // Invalid OTP\r\n                                vm.errMsg = \"Invalid OTP\";\r\n                                analyticService.buttonList.error.event_content = \"Invalid OTP error\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            }else if (result.errorCode === 10009) {\r\n                                // Invalid OTP\r\n                                vm.errMsg = \"VIDEO_KYC_FAILED\";\r\n                                analyticService.buttonList.error.event_content = \"Invalid OTP error\";\r\n                                analyticService.trackUserAction(analyticService.buttonList.error);\r\n                            }\r\n                             else {\r\n                                vm.errMsg = result.message;\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    vm.submitted = true;\r\n                }\r\n            };\r\n\r\n            vm.save = function () {\r\n                var modalInstance = $uibModal.open({\r\n                    backdrop: 'static',\r\n                    keyboard: false,\r\n                    modalFade: true,\r\n                    component: \"overlaySaveConfirmation\",\r\n                    windowClass: 'card-detail-modal center-modal'\r\n                });\r\n                modalInstance.result.then(function (isSelected) {\r\n                    if (isSelected) {\r\n                        var securityParams = {\r\n                            robocheck: vm.robocheck ? vm.robocheck : ''\r\n                        };\r\n                        staffService.save(securityParams).then(function (result) {\r\n                            if (result.success) {\r\n                                $state.go('app.save-exit',{'cardKey':vm.selectedCard.key});\r\n                            } else {\r\n                                if (result.errorCode == 3) {\r\n                                    $state.go('app.journey.s1-cards');\r\n                                } else if (result.errorCode == 4) {\r\n                                    $rootScope.sessionError = true;\r\n                                    $state.go('app.app-retrieval');\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                analyticService.buttonList.buttonClick.event_content = \"save for later\";\r\n                analyticService.trackUserAction(analyticService.buttonList.buttonClick);\r\n            };\r\n        }]\r\n    });\r\n\r\n    module.exports = staffDetailsComp.name;\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/staff-details/staff-details.component.js\n// module id = ./src/app/components/journey/staff-details/staff-details.component.js\n// module chunks = 16","(function () {\r\n    'use strict';\r\n    var service = angular.module('journey.module').service('staffService', ['$rootScope', '$http', 'CONFIG', 'journeyService', function ($rootScope, $http, CONFIG, journeyService) {\r\n        var self = this;\r\n\r\n        self.save = function (securityParams) {\r\n            var apiURL, httpMethod;\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = \"POST\";\r\n                apiURL = CONFIG.apiUrl + \"/applicantdetails/staffdetails/save/\" + journeyService.getApplicantInfo(\"arn\") + \"?hash_id=\" + Math.random();\r\n            } else {\r\n                httpMethod = \"GET\";\r\n                apiURL = \"resources/data/mock/staff-details/staff-details_save.json\"\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                params: securityParams\r\n            }).then(function (response) {\r\n                if (response.status === 200 && response.data) {\r\n                    return response.data;\r\n                } else {\r\n                    return {\r\n                        success: false,\r\n                        message: \"Sorry! there seems to be some technical error.\"\r\n                    };\r\n                }\r\n            }, function (error) {\r\n                return {\r\n                    success: false,\r\n                    message: \"Sorry! there seems to be some technical error.\"\r\n                };\r\n            });\r\n        };\r\n\r\n        self.validateOtp = function (reqData, securityParams) {\r\n            var apiURL, httpMethod;\r\n            // reqData = angular.merge({}, reqData, { arn: journeyService.getApplicantInfo(\"arn\") });\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = \"POST\";\r\n                apiURL = CONFIG.apiUrl + \"/staffjourney/validateOTP/\" + journeyService.getApplicantInfo(\"arn\") + \"?hash_id=\" + Math.random();\r\n            } else {\r\n                httpMethod = \"GET\";\r\n                apiURL = \"resources/data/mock/staff-details/staff-details_validate_otp.json\"\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                data: reqData,\r\n                params: securityParams\r\n            }).then(function (response) {\r\n                if (response.status === 200 && response.data) {\r\n                    return response.data;\r\n                } else {\r\n                    return {\r\n                        success: false,\r\n                        message: \"Sorry! there seems to be some technical error.\"\r\n                    };\r\n                }\r\n            }, function (error) {\r\n                return {\r\n                    success: false,\r\n                    message: \"Sorry! there seems to be some technical error.\"\r\n                };\r\n            });\r\n        };\r\n\r\n        self.generateOtp = function (reqData, securityParams) {\r\n            var apiURL, httpMethod;\r\n            // reqData = angular.merge({}, reqData, { arn: journeyService.getApplicantInfo(\"arn\") });\r\n            if ($rootScope.integrationsActive) {\r\n                httpMethod = \"POST\";\r\n                apiURL = CONFIG.apiUrl + \"/staffjourney/generateOtp/\" + journeyService.getApplicantInfo(\"arn\") + \"?hash_id=\" + Math.random();\r\n            } else {\r\n                httpMethod = \"GET\";\r\n                apiURL = \"resources/data/mock/staff-details/staff-details_generate_otp.json\"\r\n            }\r\n            return $http({\r\n                method: httpMethod,\r\n                url: apiURL,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                data: reqData,\r\n                params: securityParams\r\n            }).then(function (response) {\r\n                if (response.status === 200 && response.data) {\r\n                    return response.data;\r\n                } else {\r\n                    return {\r\n                        success: false,\r\n                        message: \"Sorry! there seems to be some technical error.\"\r\n                    };\r\n                }\r\n            }, function (error) {\r\n                return {\r\n                    success: false,\r\n                    message: \"Sorry! there seems to be some technical error.\"\r\n                };\r\n            });\r\n        };\r\n    }]);\r\n    module.exports = service.name;\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/journey/staff-details/staff-details.service.js\n// module id = ./src/app/components/journey/staff-details/staff-details.service.js\n// module chunks = 16"],"sourceRoot":""}